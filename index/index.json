{"includedArchiveIdentifiers":["GnustoEngine"],"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionhandlerguide","title":"Action Handler Development Guide","type":"article"},{"path":"\/documentation\/gnustoengine\/combat","title":"Combat System","type":"article"},{"path":"\/documentation\/gnustoengine\/todos","title":"Documentation TODOs","type":"article"},{"path":"\/documentation\/gnustoengine\/faqs","title":"Frequently Asked Questions","type":"article"},{"path":"\/documentation\/gnustoengine\/gamestructure","title":"Game Structure and Dynamic Behavior","type":"article"},{"path":"\/documentation\/gnustoengine\/gnustoautowiringplugin","title":"Gnusto Auto-Wiring Plugin","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/combatinterrupted(reason:)","title":"func combatInterrupted(reason: String) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyattacks(enemy:playerweapon:enemyweapon:)","title":"func enemyAttacks(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyblocked(enemy:playerweapon:enemyweapon:)","title":"func enemyBlocked(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemycriticallywounded(enemy:playerweapon:enemyweapon:damage:)","title":"func enemyCriticallyWounded(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemydisarmed(enemy:playerweapon:enemyweapon:wasfumble:)","title":"func enemyDisarmed(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy, wasFumble: Bool) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyflees(enemy:enemyweapon:direction:destination:)","title":"func enemyFlees(enemy: ItemProxy, enemyWeapon: ItemProxy?, direction: Direction?, destination: LocationID?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemygravelyinjured(enemy:playerweapon:enemyweapon:damage:)","title":"func enemyGravelyInjured(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemygrazed(enemy:playerweapon:enemyweapon:damage:)","title":"func enemyGrazed(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyhesitates(enemy:playerweapon:enemyweapon:)","title":"func enemyHesitates(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyinjured(enemy:playerweapon:enemyweapon:damage:)","title":"func enemyInjured(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemylightlyinjured(enemy:playerweapon:enemyweapon:damage:)","title":"func enemyLightlyInjured(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemymissed(enemy:playerweapon:enemyweapon:)","title":"func enemyMissed(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemypacified(enemy:enemyweapon:)","title":"func enemyPacified(enemy: ItemProxy, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyreturns(enemy:)","title":"func enemyReturns(enemy: ItemProxy) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyslain(enemy:playerweapon:enemyweapon:damage:)","title":"func enemySlain(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyspecialaction(enemy:enemyweapon:message:)","title":"func enemySpecialAction(enemy: ItemProxy, enemyWeapon: ItemProxy?, message: String) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemystaggers(enemy:playerweapon:enemyweapon:)","title":"func enemyStaggers(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemysurrenders(enemy:enemyweapon:)","title":"func enemySurrenders(enemy: ItemProxy, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemytaunts(enemy:message:)","title":"func enemyTaunts(enemy: ItemProxy, message: String) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyunconscious(enemy:playerweapon:enemyweapon:)","title":"func enemyUnconscious(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemyvulnerable(enemy:playerweapon:enemyweapon:)","title":"func enemyVulnerable(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/enemywakes(enemy:)","title":"func enemyWakes(enemy: ItemProxy) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/nonweaponattack(enemy:enemyweapon:item:)","title":"func nonWeaponAttack(enemy: ItemProxy, enemyWeapon: ItemProxy?, item: ItemProxy) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerattacks(enemy:playerweapon:enemyweapon:)","title":"func playerAttacks(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playercriticallywounded(enemy:enemyweapon:damage:)","title":"func playerCriticallyWounded(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerdisarmed(enemy:playerweapon:enemyweapon:wasfumble:)","title":"func playerDisarmed(enemy: ItemProxy, playerWeapon: ItemProxy, enemyWeapon: ItemProxy?, wasFumble: Bool) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerdistracted(enemy:enemyweapon:command:)","title":"func playerDistracted(enemy: ItemProxy, enemyWeapon: ItemProxy?, command: Command) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerdodged(enemy:enemyweapon:)","title":"func playerDodged(enemy: ItemProxy, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playergravelyinjured(enemy:enemyweapon:damage:)","title":"func playerGravelyInjured(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playergrazed(enemy:enemyweapon:damage:)","title":"func playerGrazed(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerhesitates(enemy:enemyweapon:)","title":"func playerHesitates(enemy: ItemProxy, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerinjured(enemy:enemyweapon:damage:)","title":"func playerInjured(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerlightlyinjured(enemy:enemyweapon:damage:)","title":"func playerLightlyInjured(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playermissed(enemy:enemyweapon:)","title":"func playerMissed(enemy: ItemProxy, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerslain(enemy:enemyweapon:damage:)","title":"func playerSlain(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerstaggers(enemy:enemyweapon:)","title":"func playerStaggers(enemy: ItemProxy, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playerunconscious(enemy:enemyweapon:damage:)","title":"func playerUnconscious(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/playervulnerable(enemy:enemyweapon:)","title":"func playerVulnerable(enemy: ItemProxy, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/stalemate(enemy:enemyweapon:)","title":"func stalemate(enemy: ItemProxy, enemyWeapon: ItemProxy?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/combatmessenger\/unarmedattackdenied(enemy:enemyweapon:)","title":"func unarmedAttackDenied(enemy: ItemProxy, enemyWeapon: ItemProxy?) async -> String","type":"method"}],"path":"\/documentation\/gnustoengine\/combatmessenger","title":"CombatMessenger","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/currentquestionprompt","title":"var currentQuestionPrompt: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/haspendingquestion","title":"var hasPendingQuestion: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/askchoice(question:choices:sourceid:context:)","title":"func askChoice(question: String, choices: [String : Command], sourceID: ItemID, context: ActionContext?) async -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/askfortopic(question:characterid:context:)","title":"func askForTopic(question: String, characterID: ItemID, context: ActionContext) async -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/asktoconfirm(question:command:context:)","title":"func askToConfirm(question: String, command: Command, context: ActionContext) async -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/asktodisambiguate(question:clarifiedcommand:context:)","title":"func askToDisambiguate(question: String, clarifiedCommand: Command, context: ActionContext) async -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/askyesno(question:yescommand:nomessage:sourceid:context:)","title":"func askYesNo(question: String, yesCommand: Command?, noMessage: String?, sourceID: ItemID, context: ActionContext?) async -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/clearquestion()","title":"func clearQuestion()","type":"method"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/processresponse(_:with:)","title":"func processResponse(String, with: GameEngine) async throws -> ActionResult?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/gnustoengine\/conversationmanager\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/gnustoengine\/conversationmanager\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/conversationmanager","title":"ConversationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameengine\/init(blueprint:parser:iohandler:filesystemhandler:)","title":"init(blueprint: any GameBlueprint, parser: any Parser, ioHandler: any IOHandler, filesystemHandler: any FilesystemHandler) async","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameengine\/combatstate","title":"var combatState: CombatState?","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/conversationmanager","title":"var conversationManager: ConversationManager","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/daemons","title":"var daemons: [DaemonID : Daemon]","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/filesystemhandler","title":"let filesystemHandler: any FilesystemHandler","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/fuses","title":"let fuses: [FuseID : Fuse]","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/gamestate","title":"var gameState: GameState","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/iohandler","title":"var ioHandler: any IOHandler","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/isincombat","title":"var isInCombat: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/isplayerdead","title":"var isPlayerDead: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/messenger","title":"let messenger: StandardMessenger","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/parser","title":"let parser: any Parser","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/player","title":"var player: PlayerProxy","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/randomnumbergenerator","title":"var randomNumberGenerator: any RandomNumberGenerator","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/vocabulary","title":"let vocabulary: Vocabulary","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameengine\/adjustglobal(_:by:)","title":"func adjustGlobal(GlobalID, by: Int) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/clearflag(_:)","title":"func clearFlag(GlobalID) -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/clearglobal(_:)","title":"func clearGlobal(GlobalID) -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/deletesavefile(savename:)","title":"func deleteSaveFile(saveName: String) async throws","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/endcombat()","title":"func endCombat() -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/enemyattacks(enemy:playerweapon:)","title":"func enemyAttacks(enemy: ItemProxy, playerWeapon: ItemProxy?) async -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/findactionhandler(for:)","title":"func findActionHandler(for: Command) -> (any ActionHandler)?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/global(_:)","title":"func global(GlobalID) -> StateValue?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/hasflag(_:)","title":"func hasFlag(GlobalID) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/item(_:)","title":"func item(ItemID) -> ItemProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/listsavefiles()","title":"func listSaveFiles() async throws -> [String]","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/location(_:)","title":"func location(LocationID) -> LocationProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/parent(from:)","title":"func parent(from: ParentEntity) -> ParentProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/playerattacks(enemy:playerweapon:enemyweapon:)","title":"func playerAttacks(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?) async -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/randomdouble()","title":"func randomDouble() -> Double","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/randomelement(in:)","title":"func randomElement<T>(in: some Collection) -> T?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/randomint(in:)","title":"func randomInt(in: ClosedRange<Int>) -> Int","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/randompercentage(chance:)","title":"func randomPercentage(chance: Int) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/restoregame(savename:)","title":"func restoreGame(saveName: String) async throws","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/rolld10(rollsatleast:)","title":"func rollD10(rollsAtLeast: Int) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/rolld20(rollsatleast:)","title":"func rollD20(rollsAtLeast: Int) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/run()","title":"func run() async","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/savegame(savename:)","title":"func saveGame(saveName: String) async throws -> URL","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/scoresyntaxruleforcommand(syntaxrule:command:synonyms:)","title":"func scoreSyntaxRuleForCommand(syntaxRule: SyntaxRule, command: Command, synonyms: [Verb]) -> Int","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/setcombatstate(to:)","title":"func setCombatState(to: CombatState?) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/setflag(_:)","title":"func setFlag(GlobalID) -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/setglobal(_:to:)-29fbr","title":"func setGlobal(GlobalID, to: String) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/setglobal(_:to:)-2m9p7","title":"func setGlobal(GlobalID, to: LocationID) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/setglobal(_:to:)-8f4xn","title":"func setGlobal(GlobalID, to: ItemID) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/setglobal(_:to:)-9sg62","title":"func setGlobal(GlobalID, to: Int) -> StateChange","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameengine\/defaultactionhandlers","title":"static var defaultActionHandlers: [any ActionHandler]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameengine\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/gnustoengine\/gameengine\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/gameengine","title":"GameEngine","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/init(randomnumbergenerator:)","title":"init(randomNumberGenerator: any RandomNumberGenerator)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/allcommandnothinghere()","title":"func allCommandNothingHere() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/almostdo(_:item:)","title":"func almostDo(Verb, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/alreadyburning(_:)","title":"func alreadyBurning(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/alreadydead(_:)","title":"func alreadyDead(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/alreadydone(_:item:)","title":"func alreadyDone(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/alreadyincombat(with:)","title":"func alreadyInCombat(with: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/alreadyoff()","title":"func alreadyOff() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/alreadyon()","title":"func alreadyOn() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/ambiguity(_:)","title":"func ambiguity(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/ambiguousobjectreference(_:options:)","title":"func ambiguousObjectReference(String, options: [String]) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/ambiguousreference(_:)","title":"func ambiguousReference([String]) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/ambiguousverb(_:verbs:)","title":"func ambiguousVerb(String, verbs: [String]) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/anysuchthing()","title":"func anySuchThing() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/askwhom()","title":"func askWhom() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/attacknoncharacter(_:)","title":"func attackNonCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/attackself()","title":"func attackSelf() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/badgrammar(_:)","title":"func badGrammar(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/blow()","title":"func blow() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/blowon(_:)","title":"func blowOn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/breatheonresponse(_:)","title":"func breatheOnResponse(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/breatheresponse()","title":"func breatheResponse() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/briefmode()","title":"func briefMode() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/burncharacter(_:character:)","title":"func burnCharacter(Command, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/burnitemwithtool(_:item:tool:)","title":"func burnItemWithTool(Command, item: String, tool: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/canonlydocharacters(_:)","title":"func canOnlyDoCharacters(Command) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotaskaboutthat(_:)","title":"func cannotAskAboutThat(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotdo(_:item:)","title":"func cannotDo(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotdothat(_:)","title":"func cannotDoThat(Command) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotdowiththat(_:item:instrument:)","title":"func cannotDoWithThat(Command, item: String, instrument: String?) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotdoyourself(_:)","title":"func cannotDoYourself(Command) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotgivethingstothat()","title":"func cannotGiveThingsToThat() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotputcontainerincontained(_:child:)","title":"func cannotPutContainerInContained(String, child: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotputiteminitself(_:)","title":"func cannotPutItemInItself(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotturnoff()","title":"func cannotTurnOff() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cannotturnon()","title":"func cannotTurnOn() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/characterdoesnotseemtoknow(_:topic:)","title":"func characterDoesNotSeemToKnow(String, topic: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/characterlistens(_:topic:)","title":"func characterListens(String, topic: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/chomp()","title":"func chomp() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/chompabort()","title":"func chompAbort() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/chompcharacter(_:)","title":"func chompCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/chompenemy(_:)","title":"func chompEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/chompitem(_:)","title":"func chompItem(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/circulardependency(_:)","title":"func circularDependency(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/climbsuccess(_:)","title":"func climbSuccess(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/closed()","title":"func closed() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/containeralreadyempty(_:)","title":"func containerAlreadyEmpty(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/containercontents(_:contents:)","title":"func containerContents(String, contents: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/containerisalreadyopen(_:)","title":"func containerIsAlreadyOpen(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/containerisclosed(_:)","title":"func containerIsClosed(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/containerisempty(_:)","title":"func containerIsEmpty(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/containerisopen(_:)","title":"func containerIsOpen(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/conversationnevermind()","title":"func conversationNeverMind() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/conversationwhatnext()","title":"func conversationWhatNext() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cryresponse()","title":"func cryResponse() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/currentscore(_:maxscore:moves:)","title":"func currentScore(Int, maxScore: Int, moves: Int) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/curse()","title":"func curse() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cursecharacter(_:)","title":"func curseCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cursetarget(_:)","title":"func curseTarget(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cutcharacter(_:)","title":"func cutCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cutenemy(_:)","title":"func cutEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cutitem(_:)","title":"func cutItem(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/cutplayer()","title":"func cutPlayer() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/danceresponse()","title":"func danceResponse() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/dancewith(_:)","title":"func danceWith(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/dancewithenemy(_:)","title":"func danceWithEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/dancewithpartner(_:)","title":"func danceWithPartner(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/debugrequiresobject()","title":"func debugRequiresObject() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/deflatesuccess(_:)","title":"func deflateSuccess(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/dig()","title":"func dig() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/directionisblocked(_:)","title":"func directionIsBlocked(String?) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/dowhat(_:)","title":"func doWhat(Command) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/dowhere(_:item:)","title":"func doWhere(Verb, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/dowithwhat(_:item:)","title":"func doWithWhat(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/doyouwanttoeat(_:)","title":"func doYouWantToEat(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/doorisclosed(_:)","title":"func doorIsClosed(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/doorislocked(_:)","title":"func doorIsLocked(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/doorisopen(_:)","title":"func doorIsOpen(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/drinkdrinkabledenied(_:)","title":"func drinkDrinkableDenied(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/drinkundrinkabledenied(_:)","title":"func drinkUndrinkableDenied(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/dropped()","title":"func dropped() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/eatedibledenied(_:)","title":"func eatEdibleDenied(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/eatinedibledenied(_:)","title":"func eatInedibleDenied(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/emptyinput()","title":"func emptyInput() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/emptyintotargetsuccess(_:items:target:)","title":"func emptyIntoTargetSuccess(String, items: String, target: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/emptyontogroundsuccess(_:items:count:)","title":"func emptyOntoGroundSuccess(String, items: String, count: Int) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/endofgameoptions()","title":"func endOfGameOptions() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/examineyourself(healthratio:)","title":"func examineYourself(healthRatio: Double) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/expecteddirection()","title":"func expectedDirection() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/expectedparticleafterverb(_:verb:found:)","title":"func expectedParticleAfterVerb(String, verb: Verb, found: Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/expectedparticlebutreachedend(_:)","title":"func expectedParticleButReachedEnd(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/extinguishfail(_:item:)","title":"func extinguishFail(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/extinguishsuccess(_:item:)","title":"func extinguishSuccess(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/feelnothingunusual(_:)","title":"func feelNothingUnusual(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/fillcontainerwithsource(_:source:)","title":"func fillContainerWithSource(String, source: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/fillcontainerwithwhat(_:)","title":"func fillContainerWithWhat(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/gamerestored()","title":"func gameRestored() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/gamesaved(_:)","title":"func gameSaved(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/giveitemtowhom(_:)","title":"func giveItemToWhom(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/givewhattorecipient(_:)","title":"func giveWhatToRecipient(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/givewhattowhom()","title":"func giveWhatToWhom() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/gowhere()","title":"func goWhere() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/goodbye()","title":"func goodbye() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/help()","title":"func help() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/holdingrevealsnothingspecial(_:)","title":"func holdingRevealsNothingSpecial(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/incontaineryoucansee(_:contents:also:)","title":"func inContainerYouCanSee(ItemProxy, contents: [ItemProxy], also: Bool) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/inflatesuccess(_:)","title":"func inflateSuccess(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/internalengineerror(_:)","title":"func internalEngineError(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/internalparseerror(_:)","title":"func internalParseError(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/invaliddirection()","title":"func invalidDirection() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/invalidindirectobject(_:)","title":"func invalidIndirectObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemalreadyopen(_:)","title":"func itemAlreadyOpen(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itembeginstoburn(_:)","title":"func itemBeginsToBurn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemgivento(_:recipient:)","title":"func itemGivenTo(String, recipient: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemisalreadyworn(_:)","title":"func itemIsAlreadyWorn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemislocked(_:)","title":"func itemIsLocked(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemisnotworn(_:)","title":"func itemIsNotWorn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemisnowunlocked(_:)","title":"func itemIsNowUnlocked(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemnotaccessible(_:)","title":"func itemNotAccessible(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemnotheld(_:)","title":"func itemNotHeld(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemnotinscope(_:)","title":"func itemNotInScope(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemnotinflated(_:)","title":"func itemNotInflated(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itemtoolargeforcontainer(_:container:)","title":"func itemTooLargeForContainer(String, container: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/itsrighthere()","title":"func itsRightHere() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/jump()","title":"func jump() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/jumpcharacter(_:)","title":"func jumpCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/jumpenemy(_:)","title":"func jumpEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/jumpobject(_:)","title":"func jumpObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/kickcharacter(_:)","title":"func kickCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/kickheldobject(_:)","title":"func kickHeldObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/kicklargeobject(_:)","title":"func kickLargeObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/kicksmallobject(_:)","title":"func kickSmallObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/kisscharacter(_:)","title":"func kissCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/kissenemy(_:)","title":"func kissEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/kissobject(_:)","title":"func kissObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/kissself()","title":"func kissSelf() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/laugh()","title":"func laugh() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/laughabout(_:)","title":"func laughAbout(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/laughat(_:)","title":"func laughAt(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/lightisnowburning(_:)","title":"func lightIsNowBurning(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/lightisnowoff(_:)","title":"func lightIsNowOff(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/lightrequiresflame(_:)","title":"func lightRequiresFlame(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/lightrequiresigniter(_:igniter:)","title":"func lightRequiresIgniter(String, igniter: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/listen()","title":"func listen() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/listenfor(_:)","title":"func listenFor(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/listenindarkness()","title":"func listenInDarkness() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/listento(_:)","title":"func listenTo(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/locksuccess(_:)","title":"func lockSuccess(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/maximumverbosity()","title":"func maximumVerbosity() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/modifiermismatch(_:modifiers:)","title":"func modifierMismatch(String, modifiers: [String]) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/move()","title":"func move() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/moveitem(_:)","title":"func moveItem(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/moveitemtotarget(_:target:)","title":"func moveItemToTarget(String, target: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/multipleobjectsnotsupported(_:)","title":"func multipleObjectsNotSupported(Command) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nibblewhat()","title":"func nibbleWhat() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nowhat()","title":"func noWhat() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nothing()","title":"func nothing() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nothingheretodo(_:)","title":"func nothingHereToDo(Command) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nothingofinterestinside(_:)","title":"func nothingOfInterestInside(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nothingofinterestunder(_:)","title":"func nothingOfInterestUnder(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nothingspecialabout(_:)","title":"func nothingSpecialAbout(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nothingtodrinkin(_:)","title":"func nothingToDrinkIn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nothingtotakehere()","title":"func nothingToTakeHere() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nothingwrittenon(_:)","title":"func nothingWrittenOn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/nowdark()","title":"func nowDark() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/oneof(_:loglevel:capitalize:function:)","title":"func oneOf(String..., logLevel: Logger.Level, capitalize: Bool, function: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/oneof(responses:loglevel:capitalize:function:)","title":"func oneOf(responses: [String], logLevel: Logger.Level, capitalize: Bool, function: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/opened(_:)","title":"func opened(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/openingrevealscontents(_:contents:)","title":"func openingRevealsContents(String, contents: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/output(_:_:capitalize:function:)","title":"func output(@autoclosure () -> String, Logger.Level, capitalize: Bool, function: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/playercannotcarrymore()","title":"func playerCannotCarryMore() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/playerreferencecannotbemodified(_:modifiers:)","title":"func playerReferenceCannotBeModified(String, modifiers: [String]) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pourcannotpouritself()","title":"func pourCannotPourItself() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pourfail()","title":"func pourFail() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pouritemon(_:target:)","title":"func pourItemOn(String, target: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pouritemonself(_:)","title":"func pourItemOnSelf(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pouritemonwhat(_:)","title":"func pourItemOnWhat(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pourtargetfail()","title":"func pourTargetFail() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/prepositionmismatch(_:expected:found:)","title":"func prepositionMismatch(String, expected: String, found: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pronouncannotbemodified(_:)","title":"func pronounCannotBeModified(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pronounnotset(_:)","title":"func pronounNotSet(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pronounreferstooutofscopeitem(_:)","title":"func pronounRefersToOutOfScopeItem(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pullcharacter(_:)","title":"func pullCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pullenemy(_:)","title":"func pullEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pullobject(_:)","title":"func pullObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pushcharacter(_:)","title":"func pushCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pushenemy(_:)","title":"func pushEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/pushobject(_:)","title":"func pushObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/putcannotputonself(_:)","title":"func putCannotPutOnSelf(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/putitemon(_:)","title":"func putItemOn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/putitemoncircular(_:container:)","title":"func putItemOnCircular(String, container: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/putitemonnonsurface(_:container:)","title":"func putItemOnNonSurface(String, container: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/putmeon()","title":"func putMeOn() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/putonbadtarget(_:)","title":"func putOnBadTarget(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/putonwhat(_:)","title":"func putOnWhat(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/quitcancelled()","title":"func quitCancelled() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/quitscoreandprompt(_:maxscore:moves:)","title":"func quitScoreAndPrompt(Int, maxScore: Int, moves: Int) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/removeall()","title":"func removeAll() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/responsenotunderstood()","title":"func responseNotUnderstood() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/restartcancelled()","title":"func restartCancelled() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/restartconfirmation()","title":"func restartConfirmation() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/restartrestorequit()","title":"func restartRestoreQuit() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/restarting()","title":"func restarting() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/restorecancelled()","title":"func restoreCancelled() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/restoreconfirmation()","title":"func restoreConfirmation() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/restorefailed(_:)","title":"func restoreFailed(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/restoring()","title":"func restoring() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/roomisdark()","title":"func roomIsDark() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/rubcharacter(_:character:)","title":"func rubCharacter(Verb, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/rubenemy(_:enemy:)","title":"func rubEnemy(Verb, enemy: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/rubobject(_:item:)","title":"func rubObject(Verb, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/rubself(_:)","title":"func rubSelf(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/savefailed(_:)","title":"func saveFailed(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/shakecharacter(_:character:)","title":"func shakeCharacter(Verb, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/shakeenemy(_:enemy:)","title":"func shakeEnemy(Verb, enemy: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/shakeobject(_:item:)","title":"func shakeObject(Verb, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/shakeself(_:)","title":"func shakeSelf(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/sing(_:)","title":"func sing(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/singtocharacter(_:character:)","title":"func singToCharacter(Verb, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/singtoenemy(_:enemy:)","title":"func singToEnemy(Verb, enemy: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/singtoobject(_:item:)","title":"func singToObject(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/smellcharacter(_:character:)","title":"func smellCharacter(Verb, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/smellenemy(_:enemy:)","title":"func smellEnemy(Verb, enemy: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/smellnothingunusual(_:)","title":"func smellNothingUnusual(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/smellobject(_:item:)","title":"func smellObject(Verb, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/smellself(_:)","title":"func smellSelf(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/some(_:)","title":"func some(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/somethingdisappears(toward:)","title":"func somethingDisappears(toward: Direction?) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/specificverbrequired(_:)","title":"func specificVerbRequired(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/squeezecharacter(_:character:)","title":"func squeezeCharacter(Command, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/squeezeenemy(_:enemy:)","title":"func squeezeEnemy(Command, enemy: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/squeezeobject(_:item:)","title":"func squeezeObject(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/squeezeself(_:)","title":"func squeezeSelf(Command) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/surfacecontents(_:contents:)","title":"func surfaceContents(String, contents: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/takeitemnotincontainer(_:container:)","title":"func takeItemNotInContainer(String, container: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/taken()","title":"func taken() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/takenimplied()","title":"func takenImplied() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/targetisnotacontainer(_:)","title":"func targetIsNotAContainer(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tastecharacter(_:character:)","title":"func tasteCharacter(Verb, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tasteenemy(_:enemy:)","title":"func tasteEnemy(Verb, enemy: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tastenothingunusual(_:)","title":"func tasteNothingUnusual(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tasteobject(_:item:)","title":"func tasteObject(Verb, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tasteself(_:)","title":"func tasteSelf(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tellcharacter(_:)","title":"func tellCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tellcharacterabouttopic(_:topic:)","title":"func tellCharacterAboutTopic(String, topic: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tellenemy(_:)","title":"func tellEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tellenemyabouttopic(_:topic:)","title":"func tellEnemyAboutTopic(String, topic: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tellitemabouttopic(_:topic:)","title":"func tellItemAboutTopic(String, topic: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tellobject(_:)","title":"func tellObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tellselfabout(_:)","title":"func tellSelfAbout(String?) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/telltopic()","title":"func tellTopic() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/telluniverseabout(_:)","title":"func tellUniverseAbout(String?) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tellwhom()","title":"func tellWhom() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/thatsnotsomethingyoucan(_:)","title":"func thatsNotSomethingYouCan(Command) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/the(_:)","title":"func the(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/thereareindefiniteitemshere(_:)","title":"func thereAreIndefiniteItemsHere([ItemProxy]) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/think()","title":"func think() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/thinkaboutcharacter(_:)","title":"func thinkAboutCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/thinkaboutenemy(_:)","title":"func thinkAboutEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/thinkaboutitem(_:)","title":"func thinkAboutItem(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/thinkaboutlocation(_:)","title":"func thinkAboutLocation(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/thinkaboutself()","title":"func thinkAboutSelf() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/thinkaboutuniversal(_:)","title":"func thinkAboutUniversal(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/throwatcharacter(_:item:character:)","title":"func throwAtCharacter(Command, item: String, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/throwatenemy(_:item:enemy:)","title":"func throwAtEnemy(Command, item: String, enemy: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/throwatobject(_:item:target:)","title":"func throwAtObject(Command, item: String, target: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/throwitem(_:item:)","title":"func throwItem(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/throwtocharacter(_:item:character:value:)","title":"func throwToCharacter(Command, item: String, character: String, value: Item.RoughValue) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/throwtoenemy(_:item:enemy:value:)","title":"func throwToEnemy(Command, item: String, enemy: String, value: Item.RoughValue) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/throwtoobject(_:item:target:)","title":"func throwToObject(Command, item: String, target: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tiecharacter(_:character:)","title":"func tieCharacter(Command, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tieenemy(_:enemy:)","title":"func tieEnemy(Command, enemy: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tieitem(_:item:)","title":"func tieItem(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tieitemto(_:item:to:)","title":"func tieItemTo(Command, item: String, to: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tieitemtoitself(_:item:)","title":"func tieItemToItself(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tieitemwith(_:item:with:)","title":"func tieItemWith(Command, item: String, with: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/tieitemwithitself(_:item:)","title":"func tieItemWithItself(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/timepasses()","title":"func timePasses() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/touchcharacter(_:character:)","title":"func touchCharacter(Verb, character: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/touchenemy(_:enemy:)","title":"func touchEnemy(Verb, enemy: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/touchobject(_:item:)","title":"func touchObject(Verb, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/touchself(_:)","title":"func touchSelf(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/transcriptalreadyon(_:)","title":"func transcriptAlreadyOn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/transcriptended(_:)","title":"func transcriptEnded(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/transcripterror(_:)","title":"func transcriptError(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/transcriptnoton()","title":"func transcriptNotOn() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/transcriptstarted(_:)","title":"func transcriptStarted(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/turncharacter(_:)","title":"func turnCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/turnfixedobject(_:)","title":"func turnFixedObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/turnitem(_:)","title":"func turnItem(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/turnself()","title":"func turnSelf() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/undescribedlocation()","title":"func undescribedLocation() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/unexpectedwordsaftercommand(_:)","title":"func unexpectedWordsAfterCommand(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/unknownitem(_:)","title":"func unknownItem(ItemID) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/unknownlocation(_:)","title":"func unknownLocation(LocationID) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/verbdoesnotsupportmultipleindirectobjects(_:)","title":"func verbDoesNotSupportMultipleIndirectObjects(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/verbdoesnotsupportmultipleobjects(_:)","title":"func verbDoesNotSupportMultipleObjects(Verb) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/verbsyntaxrulesallfailed(_:)","title":"func verbSyntaxRulesAllFailed(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/verbunderstoodbutsyntaxfailed(_:)","title":"func verbUnderstoodButSyntaxFailed(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/verbunknown(_:)","title":"func verbUnknown(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/wave()","title":"func wave() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/waveatcharacter(_:)","title":"func waveAtCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/waveatenemy(_:)","title":"func waveAtEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/waveatobject(_:)","title":"func waveAtObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/waveobject(_:)","title":"func waveObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/waveobjectat(_:target:)","title":"func waveObjectAt(String, target: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/whichentrance()","title":"func whichEntrance() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/worn()","title":"func worn() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/wrongkey(_:lock:)","title":"func wrongKey(String, lock: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/xyzzyresponse()","title":"func xyzzyResponse() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/yell()","title":"func yell() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/yellatcharacter(_:)","title":"func yellAtCharacter(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/yellatenemy(_:)","title":"func yellAtEnemy(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/yellatobject(_:)","title":"func yellAtObject(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/yesnofumble()","title":"func yesNoFumble() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/yeswhat()","title":"func yesWhat() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/you()","title":"func you() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youalreadyhavethat()","title":"func youAlreadyHaveThat() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youarecarrying()","title":"func youAreCarrying() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youareemptyhanded()","title":"func youAreEmptyHanded() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youcannotact()","title":"func youCannotAct() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youdo(_:item:)","title":"func youDo(Command, item: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youdomultipleitems(_:items:)","title":"func youDoMultipleItems(Command, items: [ItemProxy]) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youdonthave(_:)","title":"func youDontHave(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youhavedied()","title":"func youHaveDied() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youhaveit()","title":"func youHaveIt() -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youhavenothingtoputin(_:)","title":"func youHaveNothingToPutIn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youputitemincontainer(_:container:)","title":"func youPutItemInContainer(String, container: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youputitemonsurface(_:item:surface:)","title":"func youPutItemOnSurface(Verb, item: String, surface: String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youputon(_:)","title":"func youPutOn(String) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/youscored(final:max:moves:)","title":"func youScored(final: Int, max: Int, moves: Int) -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardmessenger\/your(_:)","title":"func your(String) -> String","type":"method"}],"path":"\/documentation\/gnustoengine\/standardmessenger","title":"StandardMessenger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/transcriptrecorder\/init(transcripturl:title:)","title":"init(transcriptURL: URL, title: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/transcriptrecorder\/transcripturl","title":"let transcriptURL: URL","type":"property"}],"path":"\/documentation\/gnustoengine\/transcriptrecorder","title":"TranscriptRecorder","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/actionhandler\/consumesturn-2id6s","title":"var consumesTurn: Bool","type":"property"}],"title":"ActionHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/actionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/actionhandler\/requireslight-95mhq","title":"var requiresLight: Bool","type":"property"}],"title":"ActionHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/actionhandler\/requireslight","title":"var requiresLight: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/actionhandler\/synonyms-62zy0","title":"var synonyms: [Verb]","type":"property"}],"title":"ActionHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/actionhandler\/synonyms","title":"var synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/actionhandler\/syntax","title":"var syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/actionhandler\/postprocess(command:engine:result:)-75ev3","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"title":"ActionHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/actionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"},{"path":"\/documentation\/gnustoengine\/actionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"}],"path":"\/documentation\/gnustoengine\/actionhandler","title":"ActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatsystem\/enemyid","title":"var enemyID: ItemID","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/combatsystem\/eventhandler-9z056","title":"var eventHandler: (CombatEvent, ActionContext) async throws -> ActionResult?","type":"property"}],"title":"CombatSystem Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/combatsystem\/eventhandler","title":"var eventHandler: (CombatEvent, ActionContext) async throws -> ActionResult?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatsystem\/calculateattackoutcome(attacker:defender:weapon:in:)","title":"func calculateAttackOutcome(attacker: Combatant, defender: Combatant, weapon: ItemProxy?, in: ActionContext) async -> CombatEvent","type":"method"},{"path":"\/documentation\/gnustoengine\/combatsystem\/determineenemyaction(against:enemy:in:)","title":"func determineEnemyAction(against: PlayerAction, enemy: ItemProxy, in: ActionContext) async -> CombatEvent?","type":"method"},{"path":"\/documentation\/gnustoengine\/combatsystem\/processcombatturn(playeraction:in:)","title":"func processCombatTurn(playerAction: PlayerAction, in: ActionContext) async throws -> ActionResult","type":"method"}],"path":"\/documentation\/gnustoengine\/combatsystem","title":"CombatSystem","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/filesystemhandler\/basedirectory","title":"var baseDirectory: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/filesystemhandler\/gnustodirectory(for:)","title":"func gnustoDirectory(for: String) throws -> URL","type":"method"},{"path":"\/documentation\/gnustoengine\/filesystemhandler\/savefileurl(game:filename:)","title":"func saveFileURL(game: String, filename: String) throws -> URL","type":"method"},{"path":"\/documentation\/gnustoengine\/filesystemhandler\/transcriptfileurl(game:date:)","title":"func transcriptFileURL(game: String, date: Date) throws -> URL","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/filesystemhandler\/timestamp(for:)","title":"static func timestamp(for: Date) -> String","type":"method"}],"path":"\/documentation\/gnustoengine\/filesystemhandler","title":"FilesystemHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameblueprint\/abbreviatedtitle","title":"var abbreviatedTitle: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/combatmessengers-1o5qa","title":"var combatMessengers: [ItemID : CombatMessenger]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/combatmessengers","title":"var combatMessengers: [ItemID : CombatMessenger]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/combatsystems-5kn9o","title":"var combatSystems: [ItemID : any CombatSystem]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/combatsystems","title":"var combatSystems: [ItemID : any CombatSystem]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/customactionhandlers-1rqbt","title":"var customActionHandlers: [any ActionHandler]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/customactionhandlers","title":"var customActionHandlers: [any ActionHandler]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/daemons-3hd9t","title":"var daemons: [DaemonID : Daemon]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/daemons","title":"var daemons: [DaemonID : Daemon]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/defaultcombatmessenger-970ae","title":"var defaultCombatMessenger: CombatMessenger","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/defaultcombatmessenger","title":"var defaultCombatMessenger: CombatMessenger","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/fuses-p1jk","title":"var fuses: [FuseID : Fuse]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/fuses","title":"var fuses: [FuseID : Fuse]","type":"property"},{"path":"\/documentation\/gnustoengine\/gameblueprint\/introduction","title":"var introduction: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/itemcomputers-6ipr2","title":"var itemComputers: [ItemID : ItemComputer]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/itemcomputers","title":"var itemComputers: [ItemID : ItemComputer]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/itemeventhandlers-86fnx","title":"var itemEventHandlers: [ItemID : ItemEventHandler]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/itemeventhandlers","title":"var itemEventHandlers: [ItemID : ItemEventHandler]","type":"property"},{"path":"\/documentation\/gnustoengine\/gameblueprint\/items","title":"var items: [Item]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/locationcomputers-2fs9x","title":"var locationComputers: [LocationID : LocationComputer]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/locationcomputers","title":"var locationComputers: [LocationID : LocationComputer]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/locationeventhandlers-86iss","title":"var locationEventHandlers: [LocationID : LocationEventHandler]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/locationeventhandlers","title":"var locationEventHandlers: [LocationID : LocationEventHandler]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/locations-1169a","title":"var locations: [Location]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/locations","title":"var locations: [Location]","type":"property"},{"path":"\/documentation\/gnustoengine\/gameblueprint\/maximumscore","title":"var maximumScore: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/messenger-8hmup","title":"var messenger: StandardMessenger","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/messenger","title":"var messenger: StandardMessenger","type":"property"},{"path":"\/documentation\/gnustoengine\/gameblueprint\/player","title":"var player: Player","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/randomnumbergenerator-2lolg","title":"var randomNumberGenerator: any RandomNumberGenerator & Sendable","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/randomnumbergenerator","title":"var randomNumberGenerator: any RandomNumberGenerator & Sendable","type":"property"},{"path":"\/documentation\/gnustoengine\/gameblueprint\/release","title":"var release: String","type":"property"},{"path":"\/documentation\/gnustoengine\/gameblueprint\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/gnustoengine\/gameblueprint","title":"GameBlueprint","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gnustoid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/gnustoid\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gnustoid\/rawvalue","title":"var rawValue: String","type":"property"}],"path":"\/documentation\/gnustoengine\/gnustoid","title":"GnustoID","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/iohandler\/transcriptrecorder","title":"var transcriptRecorder: TranscriptRecorder?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/iohandler\/transcripturl-5mu87","title":"var transcriptURL: URL?","type":"property"}],"title":"IOHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/iohandler\/transcripturl","title":"var transcriptURL: URL?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/iohandler\/clearscreen()","title":"func clearScreen()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/iohandler\/cleartranscriptrecorder()-7saw0","title":"func clearTranscriptRecorder()","type":"method"}],"title":"IOHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/iohandler\/cleartranscriptrecorder()","title":"func clearTranscriptRecorder()","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/print(_:)","title":"func print(String)","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/print(_:style:)","title":"func print(String, style: TextStyle)","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/print(_:style:newline:)","title":"func print(String, style: TextStyle, newline: Bool)","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/readline(prompt:)","title":"func readLine(prompt: String) -> String?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/iohandler\/settranscriptrecorder(_:)-4712d","title":"func setTranscriptRecorder(TranscriptRecorder)","type":"method"}],"title":"IOHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/iohandler\/settranscriptrecorder(_:)","title":"func setTranscriptRecorder(TranscriptRecorder)","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/showstatusline(roomname:score:turns:)","title":"func showStatusLine(roomName: String, score: Int, turns: Int)","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/teardown()","title":"func teardown()","type":"method"}],"path":"\/documentation\/gnustoengine\/iohandler","title":"IOHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parser\/parse(input:vocabulary:engine:)","title":"func parse(input: String, vocabulary: Vocabulary, engine: GameEngine) async throws -> Result<Command, ParseError>","type":"method"}],"path":"\/documentation\/gnustoengine\/parser","title":"Parser","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/property\/rawvalue","title":"var rawValue: StateValue","type":"property"}],"path":"\/documentation\/gnustoengine\/property","title":"Property","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actioncontext\/init(_:_:)","title":"init(Command, GameEngine)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actioncontext\/combatmsg","title":"var combatMsg: CombatMessenger","type":"property"},{"path":"\/documentation\/gnustoengine\/actioncontext\/command","title":"let command: Command","type":"property"},{"path":"\/documentation\/gnustoengine\/actioncontext\/engine","title":"let engine: GameEngine","type":"property"},{"path":"\/documentation\/gnustoengine\/actioncontext\/msg","title":"var msg: StandardMessenger","type":"property"},{"path":"\/documentation\/gnustoengine\/actioncontext\/player","title":"var player: PlayerProxy","type":"property"},{"path":"\/documentation\/gnustoengine\/actioncontext\/verb","title":"var verb: Verb","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actioncontext\/haspreposition(_:)","title":"func hasPreposition(Preposition...) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/actioncontext\/item(_:)","title":"func item(ItemID) async -> ItemProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/actioncontext\/itemdirectobject(requireslight:locationmessage:universalmessage:playermessage:failuremessage:)","title":"func itemDirectObject(requiresLight: Bool, locationMessage: ((LocationProxy) async throws -> String)?, universalMessage: ((Universal) async throws -> String)?, playerMessage: String?, failureMessage: String?) async throws -> ItemProxy?","type":"method"},{"path":"\/documentation\/gnustoengine\/actioncontext\/itemdirectobjects(requireslight:)","title":"func itemDirectObjects(requiresLight: Bool) async throws -> [ItemProxy]","type":"method"},{"path":"\/documentation\/gnustoengine\/actioncontext\/itemindirectobject(requireslight:locationmessage:universalmessage:playermessage:failuremessage:)","title":"func itemIndirectObject(requiresLight: Bool, locationMessage: ((LocationProxy) async throws -> String)?, universalMessage: ((Universal) async throws -> String)?, playerMessage: String?, failureMessage: String?) async throws -> ItemProxy?","type":"method"},{"path":"\/documentation\/gnustoengine\/actioncontext\/location(_:)","title":"func location(LocationID) async -> LocationProxy","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actioncontext\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/actioncontext\/==(_:_:)","title":"static func == (ActionContext, ActionContext) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/actioncontext\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/actioncontext","title":"ActionContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresult\/init(_:)-2mghi","title":"init(SideEffect?...)","type":"init"},{"path":"\/documentation\/gnustoengine\/actionresult\/init(_:)-6kr99","title":"init(StateChange?...)","type":"init"},{"path":"\/documentation\/gnustoengine\/actionresult\/init(_:_:)","title":"init(String, StateChange?...)","type":"init"},{"path":"\/documentation\/gnustoengine\/actionresult\/init(message:changes:effects:executionflow:)","title":"init(message: String?, changes: [StateChange?], effects: [SideEffect?], executionFlow: ExecutionFlow)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresult\/changes","title":"let changes: [StateChange]","type":"property"},{"path":"\/documentation\/gnustoengine\/actionresult\/effects","title":"let effects: [SideEffect]","type":"property"},{"path":"\/documentation\/gnustoengine\/actionresult\/executionflow","title":"let executionFlow: ExecutionFlow","type":"property"},{"path":"\/documentation\/gnustoengine\/actionresult\/message","title":"let message: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresult\/appending(_:)","title":"func appending(ActionResult?) -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/actionresult\/prepended(by:)","title":"func prepended(by: ActionResult?) -> ActionResult","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresult\/yield","title":"static let yield: ActionResult","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/actionresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/actionresult","title":"ActionResult","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/anycodablesendable\/==(_:_:)","title":"static func == (AnyCodableSendable, AnyCodableSendable) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/anycodablesendable\/init(_:)","title":"init<T>(T) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/anycodablesendable\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/anycodablesendable\/decode(as:)","title":"func decode<T>(as: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/gnustoengine\/anycodablesendable\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/anycodablesendable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/gnustoengine\/anycodablesendable\/trydecode(as:)","title":"func tryDecode<T>(as: T.Type) -> T?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/anycodablesendable\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/anycodablesendable\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/anycodablesendable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/anycodablesendable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/anycodablesendable","title":"AnyCodableSendable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/askactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/askactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/askactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/askactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/askactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/askactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/askactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/askactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/askactionhandler","title":"AskActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attackactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attackactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/attackactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/attackactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attackactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attackactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attackactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/attackactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/attackactionhandler","title":"AttackActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/blowactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/blowactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/blowactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/blowactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/blowactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/blowactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/blowactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/blowactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/blowactionhandler","title":"BlowActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/breatheactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/breatheactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/breatheactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/breatheactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/breatheactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/breatheactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/breatheactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/breatheactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/breatheactionhandler","title":"BreatheActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/briefactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/briefactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/briefactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/briefactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/briefactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/briefactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/briefactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/briefactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/briefactionhandler","title":"BriefActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/burnactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/burnactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/burnactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/burnactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/burnactionhandler\/ignitelightsource(_:)","title":"func igniteLightSource(ActionContext) async throws -> ActionResult?","type":"method"},{"path":"\/documentation\/gnustoengine\/burnactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/burnactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/burnactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/burnactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/burnactionhandler","title":"BurnActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/charactersheet\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/charactersheet\/init(strength:dexterity:constitution:intelligence:wisdom:charisma:bravery:perception:luck:morale:accuracy:intimidation:stealth:level:classification:alignment:armorclass:health:maxhealth:consciousness:combatcondition:generalcondition:isfight-30b48","title":"init(strength: Int, dexterity: Int, constitution: Int, intelligence: Int, wisdom: Int, charisma: Int, bravery: Int, perception: Int, luck: Int, morale: Int, accuracy: Int, intimidation: Int, stealth: Int, level: Int, classification: Classification, alignment: Alignment, armorClass: Int?, health: Int?, maxHealth: Int?, consciousness: ConsciousnessLevel, combatCondition: CombatCondition, generalCondition: GeneralCondition, isFighting: Bool, weaponWeaknesses: [ItemID : Int], weaponResistances: [ItemID : Int], taunts: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/charactersheet\/accuracy","title":"var accuracy: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/accuracymodifier","title":"var accuracyModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/alignment","title":"var alignment: Alignment","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/armorclass","title":"var armorClass: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/attackbonus","title":"var attackBonus: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/bravery","title":"var bravery: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/braverymodifier","title":"var braveryModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/canact","title":"var canAct: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/canbepacified","title":"var canBePacified: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/canperceive","title":"var canPerceive: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/charisma","title":"var charisma: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/charismamodifier","title":"var charismaModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/classification","title":"var classification: Classification","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/combatcondition","title":"var combatCondition: CombatCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/consciousness","title":"var consciousness: ConsciousnessLevel","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/constitution","title":"var constitution: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/constitutionmodifier","title":"var constitutionModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/criticalhitbonus","title":"var criticalHitBonus: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/damagebonus","title":"var damageBonus: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/dexterity","title":"var dexterity: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/dexteritymodifier","title":"var dexterityModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/effectivearmorclass","title":"var effectiveArmorClass: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/effectiveperception","title":"var effectivePerception: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/enemy","title":"var enemy: CharacterSheet","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/fleehealthpercent","title":"var fleeHealthPercent: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/fleethreshold","title":"var fleeThreshold: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/fortitudesave","title":"var fortitudeSave: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/generalcondition","title":"var generalCondition: GeneralCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/health","title":"var health: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/healthcondition","title":"var healthCondition: HealthCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/healthpercent","title":"var healthPercent: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/initiativebonus","title":"var initiativeBonus: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/intelligence","title":"var intelligence: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/intelligencemodifier","title":"var intelligenceModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/intimidation","title":"var intimidation: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/intimidationmodifier","title":"var intimidationModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/isawake","title":"var isAwake: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/isbadlywounded","title":"var isBadlyWounded: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/isdead","title":"var isDead: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/isfighting","title":"var isFighting: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/isimpaired","title":"var isImpaired: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/isincapacitated","title":"var isIncapacitated: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/isunconscious","title":"var isUnconscious: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/level","title":"var level: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/luck","title":"var luck: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/luckmodifier","title":"var luckModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/maxhealth","title":"var maxHealth: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/morale","title":"var morale: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/moralemodifier","title":"var moraleModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/pacifydc","title":"var pacifyDC: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/perception","title":"var perception: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/perceptionmodifier","title":"var perceptionModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/reflexsave","title":"var reflexSave: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/requiresweapon","title":"var requiresWeapon: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/stealth","title":"var stealth: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/stealthmodifier","title":"var stealthModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/strength","title":"var strength: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/strengthmodifier","title":"var strengthModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/surpriseattackbonus","title":"var surpriseAttackBonus: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/taunts","title":"let taunts: [String]","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/weaponresistances","title":"let weaponResistances: [ItemID : Int]","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/weaponweaknesses","title":"let weaponWeaknesses: [ItemID : Int]","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/willsave","title":"var willSave: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/wisdom","title":"var wisdom: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/wisdommodifier","title":"var wisdomModifier: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/charactersheet\/agile","title":"static let agile: CharacterSheet","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/boss","title":"static let boss: CharacterSheet","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/default","title":"static let `default`: CharacterSheet","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/strong","title":"static let strong: CharacterSheet","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/weak","title":"static let weak: CharacterSheet","type":"property"},{"path":"\/documentation\/gnustoengine\/charactersheet\/wise","title":"static let wise: CharacterSheet","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/charactersheet\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/charactersheet\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/charactersheet","title":"CharacterSheet","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/chompactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/chompactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/chompactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/chompactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/chompactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/chompactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/chompactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/chompactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/chompactionhandler","title":"ChompActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/climbactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/climbactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/climbactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/climbactionhandler","title":"ClimbActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbonactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbonactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/climbonactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbonactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbonactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/climbonactionhandler\/synonyms","title":"var synonyms: [Verb]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/climbonactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/climbonactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/climbonactionhandler","title":"ClimbOnActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/closeactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/closeactionhandler","title":"CloseActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatstate\/init(enemyid:roundcount:playerweaponid:combatintensity:playerfatigue:enemyfatigue:enemyweaponid:)","title":"init(enemyID: ItemID, roundCount: Int, playerWeaponID: ItemID?, combatIntensity: Double, playerFatigue: Double, enemyFatigue: Double, enemyWeaponID: ItemID?)","type":"init"},{"path":"\/documentation\/gnustoengine\/combatstate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatstate\/combatintensity","title":"let combatIntensity: Double","type":"property"},{"path":"\/documentation\/gnustoengine\/combatstate\/enemyfatigue","title":"let enemyFatigue: Double","type":"property"},{"path":"\/documentation\/gnustoengine\/combatstate\/enemyid","title":"let enemyID: ItemID","type":"property"},{"path":"\/documentation\/gnustoengine\/combatstate\/enemyweaponid","title":"let enemyWeaponID: ItemID?","type":"property"},{"path":"\/documentation\/gnustoengine\/combatstate\/playerfatigue","title":"let playerFatigue: Double","type":"property"},{"path":"\/documentation\/gnustoengine\/combatstate\/playerweaponid","title":"let playerWeaponID: ItemID?","type":"property"},{"path":"\/documentation\/gnustoengine\/combatstate\/roundcount","title":"let roundCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/combatstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/combatstate","title":"CombatState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatturn\/init(playerevent:enemyevent:additionalevents:)","title":"init(playerEvent: CombatEvent?, enemyEvent: CombatEvent?, additionalEvents: [CombatEvent])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatturn\/additionalevents","title":"var additionalEvents: [CombatEvent]","type":"property"},{"path":"\/documentation\/gnustoengine\/combatturn\/allevents","title":"var allEvents: [CombatEvent]","type":"property"},{"path":"\/documentation\/gnustoengine\/combatturn\/enemyevent","title":"let enemyEvent: CombatEvent?","type":"property"},{"path":"\/documentation\/gnustoengine\/combatturn\/playerevent","title":"let playerEvent: CombatEvent?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatturn\/addevent(_:)","title":"func addEvent(CombatEvent)","type":"method"}],"path":"\/documentation\/gnustoengine\/combatturn","title":"CombatTurn","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/command\/init(verb:directobject:directobjectmodifiers:indirectobject:indirectobjectmodifiers:preposition:direction:rawinput:)","title":"init(verb: Verb, directObject: ProxyReference?, directObjectModifiers: [String], indirectObject: ProxyReference?, indirectObjectModifiers: [String], preposition: Preposition?, direction: Direction?, rawInput: String?)","type":"init"},{"path":"\/documentation\/gnustoengine\/command\/init(verb:directobjects:directobjectmodifiers:indirectobjects:indirectobjectmodifiers:isallcommand:preposition:direction:rawinput:)","title":"init(verb: Verb, directObjects: [ProxyReference], directObjectModifiers: [String], indirectObjects: [ProxyReference], indirectObjectModifiers: [String], isAllCommand: Bool, preposition: Preposition?, direction: Direction?, rawInput: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/command\/directobject","title":"var directObject: ProxyReference?","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/directobjectmodifiers","title":"let directObjectModifiers: [String]","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/directobjects","title":"let directObjects: [ProxyReference]","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/direction","title":"var direction: Direction?","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/gerund","title":"var gerund: String","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/indirectobject","title":"var indirectObject: ProxyReference?","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/indirectobjectmodifiers","title":"let indirectObjectModifiers: [String]","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/indirectobjects","title":"let indirectObjects: [ProxyReference]","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/intents","title":"var intents: [Intent]","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/isallcommand","title":"let isAllCommand: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/pastparticiple","title":"var pastParticiple: String","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/preposition","title":"let preposition: Preposition?","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/rawinput","title":"let rawInput: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/verb","title":"let verb: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/verbphrase","title":"var verbPhrase: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/command\/hasintent(_:)","title":"func hasIntent(Intent...) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/command\/matchesintents(_:)","title":"func matchesIntents([Intent]) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/command\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/command\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/command","title":"Command","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/init(markdownparser:)","title":"init(markdownParser: MarkdownParser)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/markdownparser","title":"var markdownParser: MarkdownParser","type":"property"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/transcriptrecorder","title":"var transcriptRecorder: TranscriptRecorder?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/clearscreen()","title":"func clearScreen()","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/print(_:style:newline:)","title":"func print(String, style: TextStyle, newline: Bool)","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/readline(prompt:)","title":"func readLine(prompt: String) -> String?","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/showstatusline(roomname:score:turns:)","title":"func showStatusLine(roomName: String, score: Int, turns: Int)","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/teardown()","title":"func teardown()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/transcripturl","title":"var transcriptURL: URL?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/cleartranscriptrecorder()","title":"func clearTranscriptRecorder()","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/print(_:)","title":"func print(String)","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/print(_:style:)","title":"func print(String, style: TextStyle)","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/settranscriptrecorder(_:)","title":"func setTranscriptRecorder(TranscriptRecorder)","type":"method"}],"path":"\/documentation\/gnustoengine\/consoleiohandler\/iohandler-implementations","title":"IOHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/consoleiohandler","title":"ConsoleIOHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cryactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cryactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/cryactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/cryactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cryactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cryactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cryactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/cryactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/cryactionhandler","title":"CryActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/curseactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/curseactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/curseactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/curseactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/curseactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/curseactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/curseactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/curseactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/curseactionhandler","title":"CurseActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cutactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cutactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/cutactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/cutactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cutactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cutactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/cutactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/cutactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/cutactionhandler","title":"CutActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemon\/init(frequency:action:)","title":"init(frequency: Int, action: (GameEngine, DaemonState) async throws -> ActionResult?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemon\/action","title":"var action: (GameEngine, DaemonState) async throws -> ActionResult?","type":"property"},{"path":"\/documentation\/gnustoengine\/daemon\/frequency","title":"let frequency: Int","type":"property"}],"path":"\/documentation\/gnustoengine\/daemon","title":"Daemon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/'...(_:)-3xxgf","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/'...(_:)-94jth","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/_(_:_:)-8rh4","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/_=(_:_:)-1vlhk","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/_=(_:_:)-63hu0","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/daemonid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/daemonid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/daemonid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/daemonid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/_(_:_:)-60yy7","title":"static func < (Self, Self) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(from:)-5n6zs","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"},{"path":"\/documentation\/gnustoengine\/daemonid\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/gnustoengine\/daemonid\/gnustoid-implementations","title":"GnustoID Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(from:)-1w7xk","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/daemonid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/daemonid","title":"DaemonID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonstate\/init(executioncount:lastexecutionturn:)","title":"init(executionCount: Int, lastExecutionTurn: Int)","type":"init"},{"path":"\/documentation\/gnustoengine\/daemonstate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/daemonstate\/init(payload:executioncount:lastexecutionturn:)","title":"init<T>(payload: T?, executionCount: Int, lastExecutionTurn: Int) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonstate\/executioncount","title":"var executionCount: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/daemonstate\/lastexecutionturn","title":"var lastExecutionTurn: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/daemonstate\/payload","title":"var payload: AnyCodableSendable?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonstate\/getpayload(as:)","title":"func getPayload<T>(as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/gnustoengine\/daemonstate\/haspayload(oftype:)","title":"func hasPayload<T>(ofType: T.Type) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/daemonstate\/incrementingexecution(currentturn:)","title":"func incrementingExecution(currentTurn: Int) -> DaemonState","type":"method"},{"path":"\/documentation\/gnustoengine\/daemonstate\/updatingpayload(_:)","title":"func updatingPayload<T>(T?) throws -> DaemonState","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/daemonstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/daemonstate","title":"DaemonState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/danceactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/danceactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/danceactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/danceactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/danceactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/danceactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/danceactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/danceactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/danceactionhandler","title":"DanceActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/debugactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/debugactionhandler","title":"DebugActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/deflateactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/deflateactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/deflateactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/deflateactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/deflateactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/deflateactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/deflateactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/deflateactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/deflateactionhandler","title":"DeflateActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/digactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/digactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/digactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/digactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/digactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/digactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/digactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/digactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/digactionhandler","title":"DigActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/drinkactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/drinkactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/drinkactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/drinkactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/drinkactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/drinkactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/drinkactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/drinkactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/drinkactionhandler","title":"DrinkActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/dropactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/dropactionhandler","title":"DropActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/eatactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/eatactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/eatactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/eatactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/eatactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/eatactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/eatactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/eatactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/eatactionhandler","title":"EatActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/emptyactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/emptyactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/emptyactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/emptyactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/emptyactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/emptyactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/emptyactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/emptyactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/emptyactionhandler","title":"EmptyActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/enteractionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/enteractionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/enteractionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/enteractionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/enteractionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/enteractionhandler\/synonyms","title":"var synonyms: [Verb]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/enteractionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/enteractionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/enteractionhandler","title":"EnterActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/examineactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/examineactionhandler","title":"ExamineActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/blockedmessage","title":"let blockedMessage: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/exit\/destinationid","title":"let destinationID: LocationID?","type":"property"},{"path":"\/documentation\/gnustoengine\/exit\/direction","title":"let direction: Direction","type":"property"},{"path":"\/documentation\/gnustoengine\/exit\/doorid","title":"let doorID: ItemID?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/down(_:via:blocked:)","title":"static func down(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/down(blocked:)","title":"static func down(blocked: String) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/east(_:via:blocked:)","title":"static func east(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/east(blocked:)","title":"static func east(blocked: String) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/inside(_:via:blocked:)","title":"static func inside(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/inside(blocked:)","title":"static func inside(blocked: String) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/north(_:via:blocked:)","title":"static func north(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/north(blocked:)","title":"static func north(blocked: String) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/northeast(_:via:blocked:)","title":"static func northeast(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/northwest(_:via:blocked:)","title":"static func northwest(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/outside(_:via:blocked:)","title":"static func outside(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/outside(blocked:)","title":"static func outside(blocked: String) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/south(_:via:blocked:)","title":"static func south(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/south(blocked:)","title":"static func south(blocked: String) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/southeast(_:via:blocked:)","title":"static func southeast(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/southwest(_:via:blocked:)","title":"static func southwest(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/up(_:via:blocked:)","title":"static func up(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/up(blocked:)","title":"static func up(blocked: String) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/west(_:via:blocked:)","title":"static func west(LocationID, via: ItemID?, blocked: String?) -> Exit","type":"method"},{"path":"\/documentation\/gnustoengine\/exit\/west(blocked:)","title":"static func west(blocked: String) -> Exit","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/movementbehavior\/any","title":"case any","type":"case"},{"path":"\/documentation\/gnustoengine\/exit\/movementbehavior\/closeddoors","title":"case closedDoors","type":"case"},{"path":"\/documentation\/gnustoengine\/exit\/movementbehavior\/lockeddoors","title":"case lockedDoors","type":"case"},{"path":"\/documentation\/gnustoengine\/exit\/movementbehavior\/lockeddoorsunlockedbykeys(_:)","title":"case lockedDoorsUnlockedByKeys([ItemID])","type":"case"},{"path":"\/documentation\/gnustoengine\/exit\/movementbehavior\/normal","title":"case normal","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/movementbehavior\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/exit\/movementbehavior\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/exit\/movementbehavior","title":"Exit.MovementBehavior","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/'...(_:)-1zfvy","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/exit\/'...(_:)-20mdy","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/exit\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/exit\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/exit\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/exit\/_(_:_:)","title":"static func < (Exit, Exit) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/exit\/_(_:_:)-6fn59","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/exit\/_=(_:_:)-1nsmf","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/exit\/_=(_:_:)-4ajhd","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/exit\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/exit\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/exit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/exit","title":"Exit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/extinguishactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/extinguishactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/extinguishactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/extinguishactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/extinguishactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/extinguishactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/extinguishactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/extinguishactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/extinguishactionhandler","title":"ExtinguishActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fillactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fillactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/fillactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/fillactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fillactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fillactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fillactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/fillactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/fillactionhandler","title":"FillActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/findactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/findactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/findactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/findactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/findactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/findactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/findactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/findactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/findactionhandler","title":"FindActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuse\/init(initialturns:repeats:action:)","title":"init(initialTurns: Int, repeats: Bool, action: (GameEngine, FuseState) async throws -> ActionResult?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuse\/action","title":"let action: (GameEngine, FuseState) async throws -> ActionResult?","type":"property"},{"path":"\/documentation\/gnustoengine\/fuse\/initialturns","title":"let initialTurns: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/fuse\/repeats","title":"let repeats: Bool","type":"property"}],"path":"\/documentation\/gnustoengine\/fuse","title":"Fuse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/enemyreturn","title":"static let enemyReturn: FuseID","type":"property"},{"path":"\/documentation\/gnustoengine\/fuseid\/enemywakeup","title":"static let enemyWakeUp: FuseID","type":"property"},{"path":"\/documentation\/gnustoengine\/fuseid\/statuseffectexpiry","title":"static let statusEffectExpiry: FuseID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/'...(_:)-1e029","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/'...(_:)-4udas","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/_(_:_:)-3zgg1","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/_=(_:_:)-4s0b3","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/_=(_:_:)-8uons","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/fuseid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/fuseid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/fuseid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/fuseid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/_(_:_:)-eo1y","title":"static func < (Self, Self) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(from:)-143nv","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"},{"path":"\/documentation\/gnustoengine\/fuseid\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/gnustoengine\/fuseid\/gnustoid-implementations","title":"GnustoID Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(from:)-4fhn2","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/fuseid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/fuseid","title":"FuseID","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/enemylocationpayload\/init(enemyid:locationid:message:)","title":"init(enemyID: ItemID, locationID: LocationID, message: String)","type":"init"},{"path":"\/documentation\/gnustoengine\/fusestate\/enemylocationpayload\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/enemylocationpayload\/enemyid","title":"let enemyID: ItemID","type":"property"},{"path":"\/documentation\/gnustoengine\/fusestate\/enemylocationpayload\/locationid","title":"let locationID: LocationID","type":"property"},{"path":"\/documentation\/gnustoengine\/fusestate\/enemylocationpayload\/message","title":"let message: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/enemylocationpayload\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/fusestate\/enemylocationpayload\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/fusestate\/enemylocationpayload","title":"FuseState.EnemyLocationPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/statuseffectpayload\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/fusestate\/statuseffectpayload\/init(itemid:effect:)","title":"init(itemID: ItemID, effect: GeneralCondition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/statuseffectpayload\/effect","title":"let effect: GeneralCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/fusestate\/statuseffectpayload\/itemid","title":"let itemID: ItemID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/statuseffectpayload\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/fusestate\/statuseffectpayload\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/fusestate\/statuseffectpayload","title":"FuseState.StatusEffectPayload","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/fusestate\/init(turns:)","title":"init(turns: Int?)","type":"init"},{"path":"\/documentation\/gnustoengine\/fusestate\/init(turns:payload:)","title":"init<T>(turns: Int?, payload: T?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/payload","title":"var payload: AnyCodableSendable?","type":"property"},{"path":"\/documentation\/gnustoengine\/fusestate\/turns","title":"var turns: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/getpayload(as:)","title":"func getPayload<T>(as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/gnustoengine\/fusestate\/haspayload(oftype:)","title":"func hasPayload<T>(ofType: T.Type) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/enemylocation(turns:enemyid:locationid:message:)","title":"static func enemyLocation(turns: Int?, enemyID: ItemID, locationID: LocationID, message: String) throws -> FuseState","type":"method"},{"path":"\/documentation\/gnustoengine\/fusestate\/statuseffect(turns:itemid:effect:)","title":"static func statusEffect(turns: Int?, itemID: ItemID, effect: GeneralCondition) throws -> FuseState","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusestate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/fusestate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/fusestate","title":"FuseState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gamestate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/gamestate\/init(locations:items:player:pronoun:activefuses:activedaemons:globalstate:changehistory:)","title":"init(locations: [Location], items: [Item], player: Player, pronoun: Pronoun?, activeFuses: [FuseID : FuseState], activeDaemons: [DaemonID : DaemonState], globalState: [GlobalID : StateValue], changeHistory: [StateChange])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gamestate\/activedaemons","title":"var activeDaemons: [DaemonID : DaemonState]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/activefuses","title":"var activeFuses: [FuseID : FuseState]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/changehistory","title":"var changeHistory: [StateChange]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/globalstate","title":"var globalState: [GlobalID : StateValue]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/items","title":"var items: [ItemID : Item]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/locations","title":"var locations: [LocationID : Location]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/player","title":"var player: Player","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/pronoun","title":"var pronoun: Pronoun?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gamestate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/gamestate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/gamestate","title":"GameState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/giveactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/giveactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/giveactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/giveactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/giveactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/giveactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/giveactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/giveactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/giveactionhandler","title":"GiveActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/combatstate","title":"static let combatState: GlobalID","type":"property"},{"path":"\/documentation\/gnustoengine\/globalid\/isnoop","title":"static let isNoOp: GlobalID","type":"property"},{"path":"\/documentation\/gnustoengine\/globalid\/isscripting","title":"static let isScripting: GlobalID","type":"property"},{"path":"\/documentation\/gnustoengine\/globalid\/isverbosemode","title":"static let isVerboseMode: GlobalID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/'...(_:)-1ieht","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/globalid\/'...(_:)-5fz31","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/globalid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/globalid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/globalid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/globalid\/_(_:_:)-2qdba","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/globalid\/_=(_:_:)-2lfqg","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/globalid\/_=(_:_:)-6zkei","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/globalid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/globalid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/globalid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/globalid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/globalid\/_(_:_:)-gmul","title":"static func < (Self, Self) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/globalid\/init(from:)-83v06","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/globalid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"},{"path":"\/documentation\/gnustoengine\/globalid\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/gnustoengine\/globalid\/gnustoid-implementations","title":"GnustoID Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/init(from:)-4re6s","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/globalid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/globalid","title":"GlobalID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/goactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/goactionhandler","title":"GoActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/helpactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/helpactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/helpactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/helpactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/helpactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/helpactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/helpactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/helpactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/helpactionhandler","title":"HelpActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inflateactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inflateactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/inflateactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/inflateactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inflateactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inflateactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inflateactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/inflateactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/inflateactionhandler","title":"InflateActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/insertactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/insertactionhandler","title":"InsertActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/inventoryactionhandler","title":"InventoryActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/init(_:)","title":"init(ItemID)","type":"init"},{"path":"\/documentation\/gnustoengine\/item\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/item\/init(id:_:)","title":"init(id: ItemID, ItemProperty...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/id","title":"let id: ItemID","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isburning","title":"var isBurning: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isclimbable","title":"var isClimbable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/iscontainer","title":"var isContainer: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isdevice","title":"var isDevice: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isdrinkable","title":"var isDrinkable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isedible","title":"var isEdible: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isflammable","title":"var isFlammable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isinflatable","title":"var isInflatable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isinflated","title":"var isInflated: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isinvisible","title":"var isInvisible: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/islightsource","title":"var isLightSource: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/islockable","title":"var isLockable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/islocked","title":"var isLocked: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/ison","title":"var isOn: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isopen","title":"var isOpen: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isopenable","title":"var isOpenable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isplural","title":"var isPlural: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isreadable","title":"var isReadable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/issearchable","title":"var isSearchable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isselfignitable","title":"var isSelfIgnitable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/issurface","title":"var isSurface: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/istakable","title":"var isTakable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/istool","title":"var isTool: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/istouched","title":"var isTouched: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/istransparent","title":"var isTransparent: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isvehicle","title":"var isVehicle: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isweapon","title":"var isWeapon: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/iswearable","title":"var isWearable: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/isworn","title":"var isWorn: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/omitarticle","title":"var omitArticle: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/omitdescription","title":"var omitDescription: Item","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/properties","title":"var properties: [ItemPropertyID : StateValue]","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/requirestrytake","title":"var requiresTryTake: Item","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/adjectives(_:)","title":"func adjectives(String...) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/assigning(_:to:)","title":"func assigning(ItemPropertyID, to: StateValue) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/capacity(_:)","title":"func capacity(Int) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/charactersheet(_:)","title":"func characterSheet(CharacterSheet) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/charactersheet(strength:dexterity:constitution:intelligence:wisdom:charisma:bravery:perception:luck:morale:accuracy:intimidation:stealth:level:classification:alignment:armorclass:health:maxhealth:consciousness:combatcondition:generalconditi-3oc60","title":"func characterSheet(strength: Int, dexterity: Int, constitution: Int, intelligence: Int, wisdom: Int, charisma: Int, bravery: Int, perception: Int, luck: Int, morale: Int, accuracy: Int, intimidation: Int, stealth: Int, level: Int, classification: Classification, alignment: Alignment, armorClass: Int?, health: Int?, maxHealth: Int?, consciousness: ConsciousnessLevel, combatCondition: CombatCondition, generalCondition: GeneralCondition, isFighting: Bool, weaponWeaknesses: [ItemID : Int], weaponResistances: [ItemID : Int], taunts: [String]) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/damage(_:)","title":"func damage(Int) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/description(_:)","title":"func description(String) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/firstdescription(_:)","title":"func firstDescription(String) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/in(_:)-9d4to","title":"func `in`(LocationID) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/in(_:)-m1w9","title":"func `in`(ParentEntity) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/lockkey(_:)","title":"func lockKey(ItemID) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/name(_:)","title":"func name(String) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/proxy(_:)","title":"func proxy(GameEngine) async -> ItemProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/readtext(_:)","title":"func readText(String) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/readwhileheldtext(_:)","title":"func readWhileHeldText(String) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/shortdescription(_:)","title":"func shortDescription(String) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/size(_:)","title":"func size(Int) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/synonyms(_:)","title":"func synonyms(String...) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/tmpvalue(_:)","title":"func tmpValue(Int) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/validlocations(_:)","title":"func validLocations(LocationID...) -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/item\/value(_:)","title":"func value(Int) -> Item","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/roughvalue\/high","title":"case high","type":"case"},{"path":"\/documentation\/gnustoengine\/item\/roughvalue\/low","title":"case low","type":"case"},{"path":"\/documentation\/gnustoengine\/item\/roughvalue\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/gnustoengine\/item\/roughvalue\/priceless","title":"case priceless","type":"case"},{"path":"\/documentation\/gnustoengine\/item\/roughvalue\/worthless","title":"case worthless","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/roughvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/item\/roughvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/item\/roughvalue","title":"Item.RoughValue","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/'...(_:)-5qjpa","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/'...(_:)-67f5b","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/_(_:_:)","title":"static func < (Item, Item) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/_(_:_:)-283gu","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/_=(_:_:)-60ql8","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/_=(_:_:)-85n12","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/item\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/item\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/item","title":"Item","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemcomputecontext\/init(propertyid:item:engine:)","title":"init(propertyID: ItemPropertyID, item: Item, engine: GameEngine) async","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemcomputecontext\/engine","title":"let engine: GameEngine","type":"property"},{"path":"\/documentation\/gnustoengine\/itemcomputecontext\/item","title":"let item: ItemProxy","type":"property"},{"path":"\/documentation\/gnustoengine\/itemcomputecontext\/msg","title":"var msg: StandardMessenger","type":"property"},{"path":"\/documentation\/gnustoengine\/itemcomputecontext\/propertyid","title":"let propertyID: ItemPropertyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemcomputecontext\/item(_:)","title":"func item(ItemID) async -> ItemProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/itemcomputecontext\/location(_:)","title":"func location(LocationID) async -> LocationProxy","type":"method"}],"path":"\/documentation\/gnustoengine\/itemcomputecontext","title":"ItemComputeContext","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemcomputematcherbuilder\/buildblock(_:)","title":"static func buildBlock(ItemComputeMatcher...) -> [ItemComputeMatcher]","type":"method"}],"path":"\/documentation\/gnustoengine\/itemcomputematcherbuilder","title":"ItemComputeMatcherBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemcomputer\/init(compute:)","title":"init(compute: (ItemComputeContext) async -> StateValue?)","type":"init"},{"path":"\/documentation\/gnustoengine\/itemcomputer\/init(for:_:)","title":"init(for: ItemID, () async -> [ItemComputeMatcher])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemcomputer\/compute","title":"let compute: (ItemComputeContext) async -> StateValue?","type":"property"}],"path":"\/documentation\/gnustoengine\/itemcomputer","title":"ItemComputer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemeventcontext\/init(event:item:engine:)","title":"init(event: ItemEvent, item: ItemProxy, engine: GameEngine)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemeventcontext\/engine","title":"let engine: GameEngine","type":"property"},{"path":"\/documentation\/gnustoengine\/itemeventcontext\/event","title":"let event: ItemEvent","type":"property"},{"path":"\/documentation\/gnustoengine\/itemeventcontext\/item","title":"let item: ItemProxy","type":"property"},{"path":"\/documentation\/gnustoengine\/itemeventcontext\/msg","title":"var msg: StandardMessenger","type":"property"},{"path":"\/documentation\/gnustoengine\/itemeventcontext\/player","title":"var player: PlayerProxy","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemeventcontext\/item(_:)","title":"func item(ItemID) async -> ItemProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/itemeventcontext\/location(_:)","title":"func location(LocationID) async -> LocationProxy","type":"method"}],"path":"\/documentation\/gnustoengine\/itemeventcontext","title":"ItemEventContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemeventhandler\/init(_:)","title":"init((GameEngine, ItemEvent) async throws -> ActionResult?)","type":"init"},{"path":"\/documentation\/gnustoengine\/itemeventhandler\/init(for:_:)","title":"init(for: ItemID, () async throws -> [ItemEventMatcher])","type":"init"}],"path":"\/documentation\/gnustoengine\/itemeventhandler","title":"ItemEventHandler","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemeventmatcherbuilder\/buildblock(_:)","title":"static func buildBlock(ItemEventMatcher...) -> [ItemEventMatcher]","type":"method"}],"path":"\/documentation\/gnustoengine\/itemeventmatcherbuilder","title":"ItemEventMatcherBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/'...(_:)-6d8c","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/'...(_:)-94dqi","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/_(_:_:)-17005","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/_=(_:_:)-46sum","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/_=(_:_:)-4ylnj","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itemid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itemid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/itemid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/itemid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/_(_:_:)-9zi4g","title":"static func < (Self, Self) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/itemid\/init(from:)-5a9v0","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/itemid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"},{"path":"\/documentation\/gnustoengine\/itemid\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/gnustoengine\/itemid\/gnustoid-implementations","title":"GnustoID Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/init(from:)-6valt","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/itemid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/itemid","title":"ItemID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproperty\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/itemproperty\/init(id:rawvalue:)","title":"init(id: ItemPropertyID, rawValue: StateValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproperty\/id","title":"let id: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/rawvalue","title":"let rawValue: StateValue","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isburning","title":"static var isBurning: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isclimbable","title":"static var isClimbable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/iscontainer","title":"static var isContainer: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isdevice","title":"static var isDevice: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isdrinkable","title":"static var isDrinkable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isedible","title":"static var isEdible: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isflammable","title":"static var isFlammable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isinflatable","title":"static var isInflatable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isinflated","title":"static var isInflated: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isinvisible","title":"static var isInvisible: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/islightsource","title":"static var isLightSource: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/islockable","title":"static var isLockable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/islocked","title":"static var isLocked: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/ison","title":"static var isOn: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isopen","title":"static var isOpen: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isopenable","title":"static var isOpenable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isplural","title":"static var isPlural: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isreadable","title":"static var isReadable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/issearchable","title":"static var isSearchable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isselfignitable","title":"static var isSelfIgnitable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/issurface","title":"static var isSurface: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/istakable","title":"static var isTakable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/istool","title":"static var isTool: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/istouched","title":"static var isTouched: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/istransparent","title":"static var isTransparent: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isvehicle","title":"static var isVehicle: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isweapon","title":"static var isWeapon: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/iswearable","title":"static var isWearable: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/isworn","title":"static var isWorn: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/omitarticle","title":"static var omitArticle: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/omitdescription","title":"static var omitDescription: ItemProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproperty\/requirestrytake","title":"static var requiresTryTake: ItemProperty","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproperty\/adjectives(_:)","title":"static func adjectives(String...) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/capacity(_:)","title":"static func capacity(Int) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/charactersheet(_:)","title":"static func characterSheet(CharacterSheet) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/damage(_:)","title":"static func damage(Int) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/description(_:)","title":"static func description(String) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/firstdescription(_:)","title":"static func firstDescription(String) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/in(_:)-1jlfl","title":"static func `in`(LocationID) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/in(_:)-49k1i","title":"static func `in`(ParentEntity) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/lockkey(_:)","title":"static func lockKey(ItemID) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/name(_:)","title":"static func name(String) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/readtext(_:)","title":"static func readText(String) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/readwhileheldtext(_:)","title":"static func readWhileHeldText(String) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/shortdescription(_:)","title":"static func shortDescription(String) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/size(_:)","title":"static func size(Int) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/synonyms(_:)","title":"static func synonyms(String...) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/tmpvalue(_:)","title":"static func tmpValue(Int) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/validlocations(_:)","title":"static func validLocations(LocationID...) -> ItemProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproperty\/value(_:)","title":"static func value(Int) -> ItemProperty","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproperty\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itemproperty\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/itemproperty","title":"ItemProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/adjectives","title":"static let adjectives: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/capacity","title":"static let capacity: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/charactersheet","title":"static let characterSheet: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/damage","title":"static let damage: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/description","title":"static let description: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/firstdescription","title":"static let firstDescription: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isburning","title":"static let isBurning: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isclimbable","title":"static let isClimbable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/iscontainer","title":"static let isContainer: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isdevice","title":"static let isDevice: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isdrinkable","title":"static let isDrinkable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isedible","title":"static let isEdible: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isflammable","title":"static let isFlammable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isinflatable","title":"static let isInflatable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isinflated","title":"static let isInflated: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isinvisible","title":"static let isInvisible: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/islightsource","title":"static let isLightSource: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/islockable","title":"static let isLockable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/islocked","title":"static let isLocked: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/ison","title":"static let isOn: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isopen","title":"static let isOpen: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isopenable","title":"static let isOpenable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isplural","title":"static let isPlural: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isreadable","title":"static let isReadable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/issearchable","title":"static let isSearchable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isselfignitable","title":"static let isSelfIgnitable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/issurface","title":"static let isSurface: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/istakable","title":"static let isTakable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/istool","title":"static let isTool: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/istouched","title":"static let isTouched: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/istransparent","title":"static let isTransparent: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isvehicle","title":"static let isVehicle: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isweapon","title":"static let isWeapon: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/iswearable","title":"static let isWearable: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/isworn","title":"static let isWorn: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/lockkey","title":"static let lockKey: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/name","title":"static let name: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/omitarticle","title":"static let omitArticle: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/omitdescription","title":"static let omitDescription: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/parententity","title":"static let parentEntity: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/properties","title":"static let properties: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/readtext","title":"static let readText: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/readwhileheldtext","title":"static let readWhileHeldText: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/requirestrytake","title":"static let requiresTryTake: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/shortdescription","title":"static let shortDescription: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/size","title":"static let size: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/synonyms","title":"static let synonyms: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/tmpvalue","title":"static let tmpValue: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/validlocations","title":"static let validLocations: ItemPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/value","title":"static let value: ItemPropertyID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/'...(_:)-7nhh6","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/'...(_:)-7y0y7","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/_(_:_:)-3d9se","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/_=(_:_:)-2uymt","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/_=(_:_:)-7iemu","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itempropertyid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itempropertyid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/itempropertyid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/itempropertyid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/_(_:_:)-xa9v","title":"static func < (Self, Self) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/init(from:)-4gpv9","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/description-swift.property","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/gnustoengine\/itempropertyid\/gnustoid-implementations","title":"GnustoID Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/init(from:)-9zk1m","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itempropertyid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/itempropertyid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/itempropertyid","title":"ItemPropertyID","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproxy\/adjectives","title":"var adjectives: [String]","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/allcontents","title":"var allContents: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/capacity","title":"var capacity: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/charactersheet","title":"var characterSheet: CharacterSheet","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/classification","title":"var classification: Classification","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/contents","title":"var contents: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/contentsarevisible","title":"var contentsAreVisible: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/currentload","title":"var currentLoad: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/firstdescription","title":"var firstDescription: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/hassamelocationasplayer","title":"var hasSameLocationAsPlayer: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/health","title":"var health: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/id","title":"var id: ItemID","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isalive","title":"var isAlive: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isawake","title":"var isAwake: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/ischaracter","title":"var isCharacter: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/iscontainer","title":"var isContainer: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isdead","title":"var isDead: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isdisarmed","title":"var isDisarmed: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isdoor","title":"var isDoor: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isfighting","title":"var isFighting: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/ishostileenemy","title":"var isHostileEnemy: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isincludableinallcommands","title":"var isIncludableInAllCommands: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isnotempty","title":"var isNotEmpty: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isoffbalance","title":"var isOffBalance: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isopen","title":"var isOpen: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isopenable","title":"var isOpenable: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isprovidinglight","title":"var isProvidingLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/issurface","title":"var isSurface: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/issurrendered","title":"var isSurrendered: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/istakable","title":"var isTakable: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/istouched","title":"var isTouched: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isunconscious","title":"var isUnconscious: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isvisible","title":"var isVisible: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isvulnerable","title":"var isVulnerable: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isweapon","title":"var isWeapon: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/location","title":"var location: LocationProxy?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/maxhealth","title":"var maxHealth: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/parent","title":"var parent: ParentProxy","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/playercancarry","title":"var playerCanCarry: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/playercanreach","title":"var playerCanReach: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/playerisholding","title":"var playerIsHolding: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/preferredweapon","title":"var preferredWeapon: ItemProxy?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/readtext","title":"var readText: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/readwhileheldtext","title":"var readWhileHeldText: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/relativevalue","title":"var relativeValue: Double","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/relativevaluecategory","title":"var relativeValueCategory: Item.RoughValue","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/relativeweapondamage","title":"var relativeWeaponDamage: Double","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/relativeweapondamagecategory","title":"var relativeWeaponDamageCategory: Item.RoughValue","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/roughvalue","title":"var roughValue: Item.RoughValue","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/shortdescription","title":"var shortDescription: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/shoulddescribe","title":"var shouldDescribe: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/shouldtakefirst","title":"var shouldTakeFirst: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/strength","title":"var strength: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/synonyms","title":"var synonyms: [String]","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/value","title":"var value: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/visibleitems","title":"var visibleItems: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/weapondamage","title":"var weaponDamage: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/withdefinitearticle","title":"var withDefiniteArticle: String","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/withindefinitearticle","title":"var withIndefiniteArticle: String","type":"property"},{"path":"\/documentation\/gnustoengine\/itemproxy\/withpossessiveadjective","title":"var withPossessiveAdjective: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproxy\/alias(_:)","title":"func alias(ItemProxy.NameVariant?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/availableexits(behavior:)","title":"func availableExits(behavior: Exit.MovementBehavior) async -> [Exit]","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/canhold(_:)","title":"func canHold(ItemID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/clearflag(_:)","title":"func clearFlag(ItemPropertyID) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/hasflag(_:)","title":"func hasFlag(ItemPropertyID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/hasflags(any:all:none:)","title":"func hasFlags(any: ItemPropertyID..., all: ItemPropertyID..., none: ItemPropertyID...) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/heal(_:)","title":"func heal(Int) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isallowed(in:)","title":"func isAllowed(in: LocationID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/isholding(_:)","title":"func isHolding(ItemID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/move(to:)-6f36u","title":"func move(to: ItemID) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/move(to:)-8itkr","title":"func move(to: LocationID) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/move(to:)-9r5vm","title":"func move(to: ParentEntity) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/property(_:)","title":"func property(ItemPropertyID) async -> StateValue?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/randomexit(behavior:)","title":"func randomExit(behavior: Exit.MovementBehavior) async -> Exit?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/remove()","title":"func remove() -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/response(object:character:enemy:)","title":"func response(object: (String) -> String, character: (String) -> String, enemy: ((String) -> String)?) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/setcharacterattributes(strength:dexterity:constitution:intelligence:wisdom:charisma:bravery:perception:luck:morale:accuracy:intimidation:stealth:level:classification:alignment:armorclass:health:maxhealth:consciousness:combatcondition:genera-3tcfb","title":"func setCharacterAttributes(strength: Int?, dexterity: Int?, constitution: Int?, intelligence: Int?, wisdom: Int?, charisma: Int?, bravery: Int?, perception: Int?, luck: Int?, morale: Int?, accuracy: Int?, intimidation: Int?, stealth: Int?, level: Int?, classification: Classification?, alignment: Alignment?, armorClass: Int?, health: Int?, maxHealth: Int?, consciousness: ConsciousnessLevel?, combatCondition: CombatCondition?, generalCondition: GeneralCondition?, isFighting: Bool?, weaponWeaknesses: [ItemID : Int], weaponResistances: [ItemID : Int], taunts: [String]) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/setdescription(to:)","title":"func setDescription(to: String) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/setflag(_:)","title":"func setFlag(ItemPropertyID) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/sethealth(to:)","title":"func setHealth(to: Int) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/setproperty(_:to:)-2qndd","title":"func setProperty(ItemPropertyID, to: String) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/setproperty(_:to:)-5av21","title":"func setProperty(ItemPropertyID, to: Int) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/setproperty(_:to:)-6e7hr","title":"func setProperty(ItemPropertyID, to: StateValue) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/setproperty(_:to:)-9fauj","title":"func setProperty(ItemPropertyID, to: Bool) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/takedamage(_:)","title":"func takeDamage(Int) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemproxy\/withpossessiveadjective(for:)","title":"func withPossessiveAdjective(for: ItemProxy) async -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproxy\/namevariant\/withdefinitearticle","title":"case withDefiniteArticle","type":"case"},{"path":"\/documentation\/gnustoengine\/itemproxy\/namevariant\/withindefinitearticle","title":"case withIndefiniteArticle","type":"case"},{"path":"\/documentation\/gnustoengine\/itemproxy\/namevariant\/withpossessiveadjective(for:)","title":"case withPossessiveAdjective(for: ItemProxy?)","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproxy\/namevariant\/withpossessiveadjective","title":"static var withPossessiveAdjective: ItemProxy.NameVariant","type":"property"}],"path":"\/documentation\/gnustoengine\/itemproxy\/namevariant","title":"ItemProxy.NameVariant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproxy\/'...(_:)-2c3t","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemproxy\/'...(_:)-yzya","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemproxy\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemproxy\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemproxy\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemproxy\/_(_:_:)","title":"static func < (ItemProxy, ItemProxy) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemproxy\/_(_:_:)-467v7","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemproxy\/_=(_:_:)-3z6km","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemproxy\/_=(_:_:)-60ooo","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itemproxy\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproxy\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/itemproxy\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproxy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemproxy\/==(_:_:)","title":"static func == (ItemProxy, ItemProxy) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itemproxy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemproxy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/itemproxy\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/itemproxy","title":"ItemProxy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/jumpactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/jumpactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/jumpactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/jumpactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/jumpactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/jumpactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/jumpactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/jumpactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/jumpactionhandler","title":"JumpActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kickactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kickactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/kickactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/kickactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kickactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kickactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kickactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/kickactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/kickactionhandler","title":"KickActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kissactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kissactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/kissactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/kissactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kissactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kissactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/kissactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/kissactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/kissactionhandler","title":"KissActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/knockactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/knockactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/knockactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/knockactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/knockactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/knockactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/knockactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/knockactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/knockactionhandler","title":"KnockActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/laughactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/laughactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/laughactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/laughactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/laughactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/laughactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/laughactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/laughactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/laughactionhandler","title":"LaughActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/listenactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/listenactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/listenactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/listenactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/listenactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/listenactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/listenactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/listenactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/listenactionhandler","title":"ListenActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/location\/init(_:)","title":"init(LocationID)","type":"init"},{"path":"\/documentation\/gnustoengine\/location\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/location\/init(id:_:)","title":"init(id: LocationID, LocationProperty...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/location\/id","title":"let id: LocationID","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/inherentlylit","title":"var inherentlyLit: Location","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/ischanged","title":"var isChanged: Location","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/island","title":"var isLand: Location","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/isoutside","title":"var isOutside: Location","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/isvisited","title":"var isVisited: Location","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/iswater","title":"var isWater: Location","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/omitarticle","title":"var omitArticle: Location","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/properties","title":"var properties: [LocationPropertyID : StateValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/location\/assigning(_:to:)","title":"func assigning(LocationPropertyID, to: StateValue) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/assigning(direction:destinationid:blockedmessage:doorid:)","title":"func assigning(direction: Direction, destinationID: LocationID?, blockedMessage: String?, doorID: ItemID?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/description(_:)","title":"func description(String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/down(_:via:blocked:)","title":"func down(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/down(blocked:)","title":"func down(blocked: String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/east(_:via:blocked:)","title":"func east(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/east(blocked:)","title":"func east(blocked: String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/exits(_:)","title":"func exits(Exit...) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/firstdescription(_:)","title":"func firstDescription(String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/inside(_:via:blocked:)","title":"func inside(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/inside(blocked:)","title":"func inside(blocked: String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/name(_:)","title":"func name(String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/north(_:via:blocked:)","title":"func north(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/north(blocked:)","title":"func north(blocked: String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/northeast(_:via:blocked:)","title":"func northeast(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/northwest(_:via:blocked:)","title":"func northwest(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/outside(_:via:blocked:)","title":"func outside(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/outside(blocked:)","title":"func outside(blocked: String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/proxy(_:)","title":"func proxy(GameEngine) async -> LocationProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/scenery(_:)","title":"func scenery(ItemID...) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/south(_:via:blocked:)","title":"func south(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/south(blocked:)","title":"func south(blocked: String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/southeast(_:via:blocked:)","title":"func southeast(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/southwest(_:via:blocked:)","title":"func southwest(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/up(_:via:blocked:)","title":"func up(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/up(blocked:)","title":"func up(blocked: String) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/west(_:via:blocked:)","title":"func west(LocationID, via: ItemID?, blocked: String?) -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/west(blocked:)","title":"func west(blocked: String) -> Location","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/location\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/location","title":"Location","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationcomputecontext\/init(propertyid:location:engine:)","title":"init(propertyID: LocationPropertyID, location: Location, engine: GameEngine) async","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationcomputecontext\/engine","title":"let engine: GameEngine","type":"property"},{"path":"\/documentation\/gnustoengine\/locationcomputecontext\/location","title":"let location: LocationProxy","type":"property"},{"path":"\/documentation\/gnustoengine\/locationcomputecontext\/msg","title":"var msg: StandardMessenger","type":"property"},{"path":"\/documentation\/gnustoengine\/locationcomputecontext\/propertyid","title":"let propertyID: LocationPropertyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationcomputecontext\/item(_:)","title":"func item(ItemID) async -> ItemProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/locationcomputecontext\/location(_:)","title":"func location(LocationID) async -> LocationProxy","type":"method"}],"path":"\/documentation\/gnustoengine\/locationcomputecontext","title":"LocationComputeContext","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationcomputematcherbuilder\/buildblock(_:)","title":"static func buildBlock(LocationComputeMatcher...) -> [LocationComputeMatcher]","type":"method"}],"path":"\/documentation\/gnustoengine\/locationcomputematcherbuilder","title":"LocationComputeMatcherBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationcomputer\/init(compute:)","title":"init(compute: (LocationComputeContext) async -> StateValue?)","type":"init"},{"path":"\/documentation\/gnustoengine\/locationcomputer\/init(for:_:)","title":"init(for: LocationID, () async -> [LocationComputeMatcher])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationcomputer\/compute","title":"let compute: (LocationComputeContext) async -> StateValue?","type":"property"}],"path":"\/documentation\/gnustoengine\/locationcomputer","title":"LocationComputer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationeventcontext\/init(event:location:engine:)","title":"init(event: LocationEvent, location: LocationProxy, engine: GameEngine)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationeventcontext\/engine","title":"let engine: GameEngine","type":"property"},{"path":"\/documentation\/gnustoengine\/locationeventcontext\/event","title":"let event: LocationEvent","type":"property"},{"path":"\/documentation\/gnustoengine\/locationeventcontext\/location","title":"let location: LocationProxy","type":"property"},{"path":"\/documentation\/gnustoengine\/locationeventcontext\/msg","title":"var msg: StandardMessenger","type":"property"},{"path":"\/documentation\/gnustoengine\/locationeventcontext\/player","title":"var player: PlayerProxy","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationeventcontext\/item(_:)","title":"func item(ItemID) async -> ItemProxy","type":"method"},{"path":"\/documentation\/gnustoengine\/locationeventcontext\/location(_:)","title":"func location(LocationID) async -> LocationProxy","type":"method"}],"path":"\/documentation\/gnustoengine\/locationeventcontext","title":"LocationEventContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationeventhandler\/init(_:)","title":"init((GameEngine, LocationEvent) async throws -> ActionResult?)","type":"init"},{"path":"\/documentation\/gnustoengine\/locationeventhandler\/init(for:_:)","title":"init(for: LocationID, () async throws -> [LocationEventMatcher])","type":"init"}],"path":"\/documentation\/gnustoengine\/locationeventhandler","title":"LocationEventHandler","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationeventmatcherbuilder\/buildblock(_:)","title":"static func buildBlock(LocationEventMatcher...) -> [LocationEventMatcher]","type":"method"}],"path":"\/documentation\/gnustoengine\/locationeventmatcherbuilder","title":"LocationEventMatcherBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/'...(_:)-5hk2b","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/'...(_:)-9fipa","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/_(_:_:)-44bgx","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/_=(_:_:)-5n5e8","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/_=(_:_:)-6tp17","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/locationid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/locationid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/_(_:_:)-94joo","title":"static func < (Self, Self) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/locationid\/init(from:)-10xr4","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/locationid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"},{"path":"\/documentation\/gnustoengine\/locationid\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/gnustoengine\/locationid\/gnustoid-implementations","title":"GnustoID Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/init(from:)-8lhho","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/locationid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/locationid","title":"LocationID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproperty\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/locationproperty\/init(id:rawvalue:)","title":"init(id: LocationPropertyID, rawValue: StateValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproperty\/id","title":"let id: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproperty\/rawvalue","title":"let rawValue: StateValue","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproperty\/inherentlylit","title":"static var inherentlyLit: LocationProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproperty\/ischanged","title":"static var isChanged: LocationProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproperty\/island","title":"static var isLand: LocationProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproperty\/isoutside","title":"static var isOutside: LocationProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproperty\/isvisited","title":"static var isVisited: LocationProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproperty\/iswater","title":"static var isWater: LocationProperty","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproperty\/omitarticle","title":"static var omitArticle: LocationProperty","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproperty\/description(_:)","title":"static func description(String) -> LocationProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproperty\/exits(_:)","title":"static func exits(Exit...) -> LocationProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproperty\/firstdescription(_:)","title":"static func firstDescription(String) -> LocationProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproperty\/name(_:)","title":"static func name(String) -> LocationProperty","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproperty\/scenery(_:)","title":"static func scenery(ItemID...) -> LocationProperty","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproperty\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationproperty\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/locationproperty","title":"LocationProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/description","title":"static let description: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/exits","title":"static let exits: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/firstdescription","title":"static let firstDescription: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/inherentlylit","title":"static let inherentlyLit: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/ischanged","title":"static let isChanged: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/island","title":"static let isLand: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/islit","title":"static let isLit: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/isoutside","title":"static let isOutside: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/isvisited","title":"static let isVisited: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/iswater","title":"static let isWater: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/name","title":"static let name: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/omitarticle","title":"static let omitArticle: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/scenery","title":"static let scenery: LocationPropertyID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/shortdescription","title":"static let shortDescription: LocationPropertyID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/'...(_:)-4q5es","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/'...(_:)-70te0","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/_(_:_:)-72x69","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/_=(_:_:)-5yh8p","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/_=(_:_:)-94upn","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationpropertyid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationpropertyid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/locationpropertyid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/locationpropertyid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/_(_:_:)-bcbr","title":"static func < (Self, Self) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/init(from:)-3ea4g","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/description-swift.property","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/gnustoengine\/locationpropertyid\/gnustoid-implementations","title":"GnustoID Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/init(from:)-us90","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationpropertyid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/locationpropertyid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/locationpropertyid","title":"LocationPropertyID","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproxy\/==(_:_:)-4d5tk","title":"static func == (LocationProxy, LocationID) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproxy\/allitems","title":"var allItems: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/exits","title":"var exits: Set<Exit>","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/firstdescription","title":"var firstDescription: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/id","title":"var id: LocationID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/islit","title":"var isLit: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/items","title":"var items: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/scenery","title":"var scenery: Set<ItemID>","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/visibleitems","title":"var visibleItems: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/locationproxy\/withdefinitearticle","title":"var withDefiniteArticle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproxy\/clearflag(_:)","title":"func clearFlag(LocationPropertyID) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproxy\/hasflag(_:)","title":"func hasFlag(LocationPropertyID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproxy\/hasflags(any:)","title":"func hasFlags(any: LocationPropertyID...) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproxy\/property(_:)","title":"func property(LocationPropertyID) async -> StateValue?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproxy\/setdescription(to:)","title":"func setDescription(to: String) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproxy\/setflag(_:)","title":"func setFlag(LocationPropertyID) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproxy\/setproperty(_:to:)-2e2i","title":"func setProperty(LocationPropertyID, to: Bool) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproxy\/setproperty(_:to:)-3m3do","title":"func setProperty(LocationPropertyID, to: String) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproxy\/setproperty(_:to:)-7xl87","title":"func setProperty(LocationPropertyID, to: Int) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationproxy\/setproperty(_:to:)-8x9f2","title":"func setProperty(LocationPropertyID, to: StateValue) async -> StateChange?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproxy\/'...(_:)-1flbr","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationproxy\/'...(_:)-9ng3x","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationproxy\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationproxy\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationproxy\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationproxy\/_(_:_:)","title":"static func < (LocationProxy, LocationProxy) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationproxy\/_(_:_:)-7bgsf","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationproxy\/_=(_:_:)-889wo","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationproxy\/_=(_:_:)-ix06","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationproxy\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproxy\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/locationproxy\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproxy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationproxy\/==(_:_:)-3i2ow","title":"static func == (LocationProxy, LocationProxy) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationproxy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationproxy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/locationproxy\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/locationproxy","title":"LocationProxy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/lockactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/lockactionhandler","title":"LockActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/lookactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/lookactionhandler","title":"LookActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookinsideactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookinsideactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/lookinsideactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/lookinsideactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookinsideactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookinsideactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookinsideactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/lookinsideactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/lookinsideactionhandler","title":"LookInsideActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookunderactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookunderactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/lookunderactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/lookunderactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookunderactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookunderactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookunderactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/lookunderactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/lookunderactionhandler","title":"LookUnderActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/markdownparser\/init(columns:preventorphans:makesmarttypographicsubstitutions:)","title":"init(columns: Int?, preventOrphans: Bool, makeSmartTypographicSubstitutions: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/markdownparser\/parse(_:)","title":"func parse(String) -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/markdownparser\/testparser(columns:preventorphans:makesmarttypographicsubstitutions:)","title":"static func testParser(columns: Int, preventOrphans: Bool, makeSmartTypographicSubstitutions: Bool) -> MarkdownParser","type":"method"}],"path":"\/documentation\/gnustoengine\/markdownparser","title":"MarkdownParser","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/moveactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/moveactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/moveactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/moveactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/moveactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/moveactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/moveactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/moveactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/moveactionhandler","title":"MoveActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/nibbleactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/nibbleactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/nibbleactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/nibbleactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/nibbleactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/nibbleactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/nibbleactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/nibbleactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/nibbleactionhandler","title":"NibbleActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/openactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/openactionhandler","title":"OpenActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/player\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/player\/init(in:charactersheet:)","title":"init(in: LocationID, characterSheet: CharacterSheet)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/player\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/player\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/player","title":"Player","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/playerproxy\/canact","title":"var canAct: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/carryingcapacity","title":"var carryingCapacity: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/charactersheet","title":"var characterSheet: CharacterSheet","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/completeinventory","title":"var completeInventory: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/health","title":"var health: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/healthpercent","title":"var healthPercent: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/inventory","title":"var inventory: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/location","title":"var location: LocationProxy","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/maxhealth","title":"var maxHealth: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/moves","title":"var moves: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/preferredweapon","title":"var preferredWeapon: ItemProxy?","type":"property"},{"path":"\/documentation\/gnustoengine\/playerproxy\/score","title":"var score: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/playerproxy\/cancarry(_:)","title":"func canCarry(ItemID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/playerproxy\/heal(_:)","title":"func heal(Int) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/playerproxy\/isholding(_:)","title":"func isHolding(ItemID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/playerproxy\/move(to:)-50imb","title":"func move(to: LocationID) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/playerproxy\/move(to:)-bdjq","title":"func move(to: ParentEntity) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/playerproxy\/setcharacterattributes(strength:dexterity:constitution:intelligence:wisdom:charisma:bravery:perception:luck:morale:accuracy:intimidation:stealth:level:classification:alignment:armorclass:health:maxhealth:consciousness:combatcondition:genera-3tcfb","title":"func setCharacterAttributes(strength: Int?, dexterity: Int?, constitution: Int?, intelligence: Int?, wisdom: Int?, charisma: Int?, bravery: Int?, perception: Int?, luck: Int?, morale: Int?, accuracy: Int?, intimidation: Int?, stealth: Int?, level: Int?, classification: Classification?, alignment: Alignment?, armorClass: Int?, health: Int?, maxHealth: Int?, consciousness: ConsciousnessLevel?, combatCondition: CombatCondition?, generalCondition: GeneralCondition?, isFighting: Bool?, weaponWeaknesses: [ItemID : Int], weaponResistances: [ItemID : Int], taunts: [String]) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/playerproxy\/sethealth(to:)","title":"func setHealth(to: Int) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/playerproxy\/takedamage(_:)","title":"func takeDamage(Int) async -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/playerproxy\/updatescore(by:)","title":"func updateScore(by: Int) async -> StateChange","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/playerproxy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/playerproxy\/==(_:_:)","title":"static func == (PlayerProxy, PlayerProxy) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/playerproxy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/playerproxy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/playerproxy\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/playerproxy","title":"PlayerProxy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pouractionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pouractionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/pouractionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/pouractionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pouractionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pouractionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pouractionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/pouractionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/pouractionhandler","title":"PourActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/preposition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/preposition\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/preposition\/about","title":"static let about: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/above","title":"static let above: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/across","title":"static let across: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/after","title":"static let after: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/against","title":"static let against: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/along","title":"static let along: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/among","title":"static let among: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/around","title":"static let around: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/at","title":"static let at: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/before","title":"static let before: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/behind","title":"static let behind: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/below","title":"static let below: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/beneath","title":"static let beneath: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/beside","title":"static let beside: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/between","title":"static let between: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/beyond","title":"static let beyond: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/by","title":"static let by: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/down","title":"static let down: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/during","title":"static let during: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/for","title":"static let `for`: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/from","title":"static let from: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/in","title":"static let `in`: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/inside","title":"static let inside: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/into","title":"static let into: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/near","title":"static let near: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/of","title":"static let of: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/off","title":"static let off: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/on","title":"static let on: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/onto","title":"static let onto: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/out","title":"static let out: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/outside","title":"static let outside: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/over","title":"static let over: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/through","title":"static let through: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/to","title":"static let to: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/toward","title":"static let toward: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/under","title":"static let under: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/up","title":"static let up: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/upon","title":"static let upon: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/with","title":"static let with: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/within","title":"static let within: Preposition","type":"property"},{"path":"\/documentation\/gnustoengine\/preposition\/without","title":"static let without: Preposition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/preposition\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/preposition\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/preposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/preposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/preposition\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/preposition\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/preposition\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/preposition\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/preposition","title":"Preposition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pullactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pullactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/pullactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/pullactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pullactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pullactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pullactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/pullactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/pullactionhandler","title":"PullActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pushactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pushactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/pushactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/pushactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pushactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pushactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pushactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/pushactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/pushactionhandler","title":"PushActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/putonactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/putonactionhandler","title":"PutOnActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/quitactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/quitactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/quitactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/quitactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/quitactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/quitactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/quitactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/quitactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/quitactionhandler","title":"QuitActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/raiseactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/raiseactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/raiseactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/raiseactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/raiseactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/raiseactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/raiseactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/raiseactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/raiseactionhandler","title":"RaiseActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/readactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/readactionhandler","title":"ReadActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/removeactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/removeactionhandler","title":"RemoveActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/restartactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/restartactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/restartactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/restartactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/restartactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/restartactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/restartactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/restartactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/restartactionhandler","title":"RestartActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/restoreactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/restoreactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/restoreactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/restoreactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/restoreactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/restoreactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/restoreactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/restoreactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/restoreactionhandler","title":"RestoreActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/rubactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/rubactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/rubactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/rubactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/rubactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/rubactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/rubactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/rubactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/rubactionhandler","title":"RubActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/saveactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/saveactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/saveactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/saveactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/saveactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/saveactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/saveactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/saveactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/saveactionhandler","title":"SaveActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scoreactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scoreactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/scoreactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/scoreactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/scoreactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scoreactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scoreactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/scoreactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/scoreactionhandler","title":"ScoreActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scriptactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scriptactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/scriptactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/scriptactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/scriptactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scriptactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scriptactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/scriptactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/scriptactionhandler","title":"ScriptActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/shakeactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/shakeactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/shakeactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/shakeactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/shakeactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/shakeactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/shakeactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/shakeactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/shakeactionhandler","title":"ShakeActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffect\/init(type:targetid:)","title":"init(type: SideEffectType, targetID: EntityID)","type":"init"},{"path":"\/documentation\/gnustoengine\/sideeffect\/init(type:targetid:payload:)","title":"init<T>(type: SideEffectType, targetID: EntityID, payload: T) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffect\/payload","title":"let payload: AnyCodableSendable?","type":"property"},{"path":"\/documentation\/gnustoengine\/sideeffect\/targetid","title":"let targetID: EntityID","type":"property"},{"path":"\/documentation\/gnustoengine\/sideeffect\/type","title":"let type: SideEffectType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffect\/getpayload(as:)","title":"func getPayload<T>(as: T.Type) -> T?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffect\/rundaemon(_:)","title":"static func runDaemon(DaemonID) throws -> SideEffect","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffect\/rundaemon(_:state:)","title":"static func runDaemon(DaemonID, state: DaemonState) throws -> SideEffect","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffect\/startenemyreturnfuse(enemyid:to:message:turns:)","title":"static func startEnemyReturnFuse(enemyID: ItemID, to: LocationID, message: String, turns: Int) throws -> SideEffect","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffect\/startenemywakeupfuse(enemyid:locationid:message:turns:)","title":"static func startEnemyWakeUpFuse(enemyID: ItemID, locationID: LocationID, message: String, turns: Int) throws -> SideEffect","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffect\/startfuse(_:)","title":"static func startFuse(FuseID) throws -> SideEffect","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffect\/startfuse(_:state:)","title":"static func startFuse(FuseID, state: FuseState) throws -> SideEffect","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffect\/startfuse(_:turns:)","title":"static func startFuse(FuseID, turns: Int) throws -> SideEffect","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffect\/startstatuseffectexpiryfuse(for:effect:turns:)","title":"static func startStatusEffectExpiryFuse(for: ItemID, effect: GeneralCondition, turns: Int) throws -> SideEffect","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffect\/stopdaemon(_:)","title":"static func stopDaemon(DaemonID) throws -> SideEffect","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffect\/stopfuse(_:)","title":"static func stopFuse(FuseID) throws -> SideEffect","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/sideeffect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/sideeffect","title":"SideEffect","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/singactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/singactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/singactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/singactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/singactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/singactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/singactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/singactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/singactionhandler","title":"SingActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/smellactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/smellactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/smellactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/smellactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/smellactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/smellactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/smellactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/smellactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/smellactionhandler","title":"SmellActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/squeezeactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/squeezeactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/squeezeactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/squeezeactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/squeezeactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/squeezeactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/squeezeactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/squeezeactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/squeezeactionhandler","title":"SqueezeActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardcombatsystem\/init(versus:eventhandler:)","title":"init(versus: ItemID, eventHandler: (CombatEvent, ActionContext) async throws -> ActionResult?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardcombatsystem\/enemyid","title":"let enemyID: ItemID","type":"property"},{"path":"\/documentation\/gnustoengine\/standardcombatsystem\/eventhandler","title":"let eventHandler: (CombatEvent, ActionContext) async throws -> ActionResult?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardcombatsystem\/calculateattackoutcome(attacker:defender:weapon:in:)","title":"func calculateAttackOutcome(attacker: Combatant, defender: Combatant, weapon: ItemProxy?, in: ActionContext) async -> CombatEvent","type":"method"},{"path":"\/documentation\/gnustoengine\/standardcombatsystem\/defaultcombatdescription(of:via:)","title":"func defaultCombatDescription(of: CombatEvent, via: CombatMessenger) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/standardcombatsystem\/determineenemyaction(against:enemy:in:)","title":"func determineEnemyAction(against: PlayerAction, enemy: ItemProxy, in: ActionContext) async -> CombatEvent?","type":"method"},{"path":"\/documentation\/gnustoengine\/standardcombatsystem\/processcombatturn(playeraction:in:)","title":"func processCombatTurn(playerAction: PlayerAction, in: ActionContext) async throws -> ActionResult","type":"method"}],"path":"\/documentation\/gnustoengine\/standardcombatsystem","title":"StandardCombatSystem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardfilesystemhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardfilesystemhandler\/basedirectory","title":"let baseDirectory: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardfilesystemhandler\/gnustodirectory(for:)","title":"func gnustoDirectory(for: String) throws -> URL","type":"method"},{"path":"\/documentation\/gnustoengine\/standardfilesystemhandler\/savefileurl(game:filename:)","title":"func saveFileURL(game: String, filename: String) throws -> URL","type":"method"},{"path":"\/documentation\/gnustoengine\/standardfilesystemhandler\/transcriptfileurl(game:date:)","title":"func transcriptFileURL(game: String, date: Date) throws -> URL","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardfilesystemhandler\/timestamp(for:)","title":"static func timestamp(for: Date) -> String","type":"method"}],"path":"\/documentation\/gnustoengine\/standardfilesystemhandler\/filesystemhandler-implementations","title":"FilesystemHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/standardfilesystemhandler","title":"StandardFilesystemHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardparser\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:engine:)","title":"func parse(input: String, vocabulary: Vocabulary, engine: GameEngine) async throws -> Result<Command, ParseError>","type":"method"}],"path":"\/documentation\/gnustoengine\/standardparser","title":"StandardParser","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/expectedpreposition","title":"var expectedPreposition: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/pattern","title":"let pattern: [SyntaxTokenType]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/match(_:)","title":"static func match(SyntaxTokenType...) -> SyntaxRule","type":"method"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/match(_:_:)","title":"static func match(Verb, SyntaxTokenType...) -> SyntaxRule","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/syntaxrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/syntaxrule","title":"SyntaxRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/takeactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/takeactionhandler","title":"TakeActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tasteactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tasteactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/tasteactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/tasteactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tasteactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tasteactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tasteactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/tasteactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/tasteactionhandler","title":"TasteActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tellactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tellactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/tellactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/tellactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tellactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tellactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tellactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/tellactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/tellactionhandler","title":"TellActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/thinkactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/thinkactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/thinkactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/thinkactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/thinkactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/thinkactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/thinkactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/thinkactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/thinkactionhandler","title":"ThinkActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/throwactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/throwactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/throwactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/throwactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/throwactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/throwactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/throwactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/throwactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/throwactionhandler","title":"ThrowActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tieactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tieactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/tieactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/tieactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tieactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tieactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/tieactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/tieactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/tieactionhandler","title":"TieActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/touchactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/touchactionhandler","title":"TouchActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/turnactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/turnactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/turnactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/turnactionhandler","title":"TurnActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/turnoffactionhandler","title":"TurnOffActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/turnonactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/turnonactionhandler","title":"TurnOnActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/unlockactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/unlockactionhandler","title":"UnlockActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unscriptactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unscriptactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/unscriptactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/unscriptactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unscriptactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unscriptactionhandler\/synonyms","title":"var synonyms: [Verb]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unscriptactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/unscriptactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/unscriptactionhandler","title":"UnscriptActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/init(id:gerund:pastparticiple:intents:)","title":"init(id: String, gerund: String?, pastParticiple: String?, intents: Intent...)","type":"init"},{"path":"\/documentation\/gnustoengine\/verb\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/gerund","title":"let gerund: String","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/intents","title":"let intents: [Intent]","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/pastparticiple","title":"let pastParticiple: String","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/ascend","title":"static let ascend: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/ask","title":"static let ask: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/attack","title":"static let attack: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/balance","title":"static let balance: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/bind","title":"static let bind: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/bite","title":"static let bite: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/blow","title":"static let blow: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/brandish","title":"static let brandish: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/break","title":"static let `break`: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/breathe","title":"static let breathe: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/brief","title":"static let brief: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/burn","title":"static let burn: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/chew","title":"static let chew: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/chomp","title":"static let chomp: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/chop","title":"static let chop: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/chortle","title":"static let chortle: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/chuck","title":"static let chuck: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/chuckle","title":"static let chuckle: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/clean","title":"static let clean: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/climb","title":"static let climb: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/close","title":"static let close: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/compress","title":"static let compress: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/consider","title":"static let consider: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/consume","title":"static let consume: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/cry","title":"static let cry: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/curse","title":"static let curse: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/cut","title":"static let cut: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/damn","title":"static let damn: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/dance","title":"static let dance: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/debug","title":"static let debug: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/deflate","title":"static let deflate: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/depress","title":"static let depress: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/describe","title":"static let describe: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/destroy","title":"static let destroy: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/devour","title":"static let devour: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/dig","title":"static let dig: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/discard","title":"static let discard: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/doff","title":"static let doff: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/don","title":"static let don: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/donate","title":"static let donate: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/douse","title":"static let douse: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/drink","title":"static let drink: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/drop","title":"static let drop: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/dump","title":"static let dump: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/eat","title":"static let eat: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/empty","title":"static let empty: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/enter","title":"static let enter: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/examine","title":"static let examine: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/excavate","title":"static let excavate: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/extinguish","title":"static let extinguish: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/fasten","title":"static let fasten: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/feel","title":"static let feel: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/fight","title":"static let fight: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/fill","title":"static let fill: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/find","title":"static let find: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/fuck","title":"static let fuck: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/get","title":"static let get: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/giggle","title":"static let giggle: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/give","title":"static let give: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/go","title":"static let go: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/grab","title":"static let grab: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/hang","title":"static let hang: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/head","title":"static let head: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/help","title":"static let help: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/hike","title":"static let hike: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/hit","title":"static let hit: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/hoist","title":"static let hoist: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/holler","title":"static let holler: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/hop","title":"static let hop: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/hug","title":"static let hug: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/hum","title":"static let hum: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/hurl","title":"static let hurl: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/ignite","title":"static let ignite: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/imbibe","title":"static let imbibe: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/inflate","title":"static let inflate: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/inform","title":"static let inform: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/inquire","title":"static let inquire: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/insert","title":"static let insert: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/inspect","title":"static let inspect: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/inventory","title":"static let inventory: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/jump","title":"static let jump: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/kick","title":"static let kick: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/kill","title":"static let kill: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/kiss","title":"static let kiss: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/knock","title":"static let knock: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/l","title":"static let l: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/laugh","title":"static let laugh: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/leap","title":"static let leap: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/lick","title":"static let lick: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/lift","title":"static let lift: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/light","title":"static let light: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/listen","title":"static let listen: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/load","title":"static let load: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/locate","title":"static let locate: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/lock","title":"static let lock: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/look","title":"static let look: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/massage","title":"static let massage: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/mount","title":"static let mount: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/move","title":"static let move: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/nibble","title":"static let nibble: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/no","title":"static let no: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/offer","title":"static let offer: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/open","title":"static let open: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/peek","title":"static let peek: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/peer","title":"static let peer: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/pick","title":"static let pick: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/place","title":"static let place: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/polish","title":"static let polish: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/ponder","title":"static let ponder: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/pour","title":"static let pour: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/press","title":"static let press: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/proceed","title":"static let proceed: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/prune","title":"static let prune: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/puff","title":"static let puff: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/pull","title":"static let pull: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/push","title":"static let push: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/put","title":"static let put: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/quaff","title":"static let quaff: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/question","title":"static let question: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/quit","title":"static let quit: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/raise","title":"static let raise: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/rap","title":"static let rap: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/rattle","title":"static let rattle: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/read","title":"static let read: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/remove","title":"static let remove: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/restart","title":"static let restart: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/restore","title":"static let restore: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/rip","title":"static let rip: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/rotate","title":"static let rotate: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/rub","title":"static let rub: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/ruin","title":"static let ruin: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/run","title":"static let run: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/save","title":"static let save: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/say","title":"static let say: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/scale","title":"static let scale: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/score","title":"static let score: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/scream","title":"static let scream: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/script","title":"static let script: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/search","title":"static let search: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/serenade","title":"static let serenade: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/set","title":"static let set: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/shake","title":"static let shake: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/shatter","title":"static let shatter: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/shift","title":"static let shift: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/shit","title":"static let shit: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/shout","title":"static let shout: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/shove","title":"static let shove: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/shriek","title":"static let shriek: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/shut","title":"static let shut: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/sing","title":"static let sing: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/sip","title":"static let sip: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/sit","title":"static let sit: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/slay","title":"static let slay: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/slice","title":"static let slice: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/slide","title":"static let slide: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/smash","title":"static let smash: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/smell","title":"static let smell: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/snicker","title":"static let snicker: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/sniff","title":"static let sniff: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/sob","title":"static let sob: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/speak","title":"static let speak: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/spill","title":"static let spill: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/squeeze","title":"static let squeeze: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/stab","title":"static let stab: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/steal","title":"static let steal: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/stroll","title":"static let stroll: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/swear","title":"static let swear: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/switch","title":"static let `switch`: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/take","title":"static let take: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/talk","title":"static let talk: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/tap","title":"static let tap: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/taste","title":"static let taste: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/tear","title":"static let tear: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/tell","title":"static let tell: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/think","title":"static let think: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/throw","title":"static let `throw`: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/tie","title":"static let tie: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/toss","title":"static let toss: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/touch","title":"static let touch: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/travel","title":"static let travel: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/turn","title":"static let turn: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/twist","title":"static let twist: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/unlock","title":"static let unlock: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/unscript","title":"static let unscript: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/verbose","title":"static let verbose: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/wait","title":"static let wait: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/walk","title":"static let walk: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/wave","title":"static let wave: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/wear","title":"static let wear: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/weep","title":"static let weep: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/x","title":"static let x: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/xyzzy","title":"static let xyzzy: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/yell","title":"static let yell: Verb","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/yes","title":"static let yes: Verb","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/'...(_:)-73a16","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verb\/'...(_:)-8cjvh","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verb\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verb\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verb\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verb\/_(_:_:)-45dpl","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/verb\/_=(_:_:)-78415","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/verb\/_=(_:_:)-9allw","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/verb\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/verb\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/verb\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/verb\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/verb\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/verb\/_(_:_:)-92r8s","title":"static func < (Self, Self) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/verb\/init(from:)-8vkdi","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/verb\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/customdumpdescription","title":"var customDumpDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/gnustoengine\/verb\/gnustoid-implementations","title":"GnustoID Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/init(from:)-6falu","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/verb\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/verb","title":"Verb","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verboseactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verboseactionhandler\/consumesturn","title":"let consumesTurn: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/verboseactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/verboseactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/verboseactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verboseactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verboseactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/verboseactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/verboseactionhandler","title":"VerboseActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/init(enhancer:)","title":"init(enhancer: VocabularyEnhancer?)","type":"init"},{"path":"\/documentation\/gnustoengine\/vocabulary\/init(verbs:verbtosyntax:items:adjectives:locationnames:universals:directions:noisewords:playeraliases:prepositions:pronouns:specialkeywords:conjunctions:adverbs:enhancer:)","title":"init(verbs: [Verb], verbToSyntax: [Verb : [SyntaxRule]], items: [String : Set<ItemID>], adjectives: [String : Set<ItemID>], locationNames: [String : LocationID], universals: [String : Set<Universal>], directions: [String : Direction], noiseWords: Set<String>, playerAliases: Set<String>, prepositions: Set<Preposition>, pronouns: Set<String>, specialKeywords: Set<String>, conjunctions: Set<String>, adverbs: Set<String>, enhancer: VocabularyEnhancer?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/adjectives","title":"var adjectives: [String : Set<ItemID>]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/adverbs","title":"var adverbs: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/conjunctions","title":"var conjunctions: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/directions","title":"var directions: [String : Direction]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/enhancer","title":"var enhancer: VocabularyEnhancer?","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/items","title":"var items: [String : Set<ItemID>]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/locationnames","title":"var locationNames: [String : LocationID]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/noisewords","title":"var noiseWords: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/playeraliases","title":"var playerAliases: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/prepositions","title":"var prepositions: Set<Preposition>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/pronouns","title":"var pronouns: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/specialkeywords","title":"var specialKeywords: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/universals","title":"var universals: [String : Set<Universal>]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/verblookup","title":"var verbLookup: [String : Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/verbtosyntax","title":"var verbToSyntax: [Verb : [SyntaxRule]]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/verbs","title":"var verbs: [Verb]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/add(item:)","title":"func add(item: Item)","type":"method"},{"path":"\/documentation\/gnustoengine\/vocabulary\/add(location:)","title":"func add(location: Location)","type":"method"},{"path":"\/documentation\/gnustoengine\/vocabulary\/add(verb:)","title":"func add(verb: Verb)","type":"method"},{"path":"\/documentation\/gnustoengine\/vocabulary\/ispronoun(_:)","title":"func isPronoun(String) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultadverbs","title":"static let defaultAdverbs: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultconjunctions","title":"static let defaultConjunctions: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultnoisewords","title":"static let defaultNoiseWords: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultplayeraliases","title":"static let defaultPlayerAliases: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultprepositions","title":"static let defaultPrepositions: Set<Preposition>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultpronouns","title":"static let defaultPronouns: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultspecialkeywords","title":"static let defaultSpecialKeywords: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultuniversals","title":"static let defaultUniversals: [String : Set<Universal>]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/build(items:locations:verbs:verbtosyntax:enhancer:)","title":"static func build(items: [Item], locations: [Location], verbs: [Verb], verbToSyntax: [Verb : [SyntaxRule]], enhancer: VocabularyEnhancer?) -> Vocabulary","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/vocabulary\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/vocabulary","title":"Vocabulary","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/init(isenabled:shouldmergewithexplicit:minimumwordlength:maxadjectives:maxsynonyms:excludedwords:)","title":"init(isEnabled: Bool, shouldMergeWithExplicit: Bool, minimumWordLength: Int, maxAdjectives: Int, maxSynonyms: Int, excludedWords: Set<String>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/excludedwords","title":"let excludedWords: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/isenabled","title":"let isEnabled: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/maxadjectives","title":"let maxAdjectives: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/maxsynonyms","title":"let maxSynonyms: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/minimumwordlength","title":"let minimumWordLength: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/shouldmergewithexplicit","title":"let shouldMergeWithExplicit: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/defaultexcludedwords","title":"static let defaultExcludedWords: Set<String>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.struct","title":"VocabularyEnhancer.Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/extractionresult\/init(adjectives:synonyms:)","title":"init(adjectives: Set<String>, synonyms: Set<String>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/extractionresult\/adjectives","title":"let adjectives: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/extractionresult\/synonyms","title":"let synonyms: Set<String>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/extractionresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/extractionresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/extractionresult","title":"VocabularyEnhancer.ExtractionResult","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/init(configuration:)","title":"init(configuration: VocabularyEnhancer.Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/configuration-swift.property","title":"let configuration: VocabularyEnhancer.Configuration","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/combineextractedterms(for:extractedadjectives:extractedsynonyms:)","title":"func combineExtractedTerms(for: Item, extractedAdjectives: Set<String>, extractedSynonyms: Set<String>) -> (adjectives: Set<String>, synonyms: Set<String>)","type":"method"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/extractadjectivesandsynonyms(from:)","title":"func extractAdjectivesAndSynonyms(from: Item) -> VocabularyEnhancer.ExtractionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/vocabularyenhancer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/vocabularyenhancer","title":"VocabularyEnhancer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waitactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waitactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/waitactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/waitactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waitactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waitactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waitactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/waitactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/waitactionhandler","title":"WaitActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waveactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waveactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/waveactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/waveactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waveactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waveactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/waveactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/waveactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/waveactionhandler","title":"WaveActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/wearactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/wearactionhandler","title":"WearActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/xyzzyactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/xyzzyactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/xyzzyactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/xyzzyactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/xyzzyactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/xyzzyactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/xyzzyactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/xyzzyactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/xyzzyactionhandler","title":"XyzzyActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yellactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yellactionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/yellactionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/yellactionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yellactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yellactionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yellactionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/yellactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/yellactionhandler","title":"YellActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/requireslight","title":"let requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/synonyms","title":"let synonyms: [Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/syntax","title":"let syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/askconfirmation(question:yescommand:nomessage:sourceid:context:)","title":"static func askConfirmation(question: String, yesCommand: Command, noMessage: String?, sourceID: ItemID, context: ActionContext) async -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/asktoconfirmaction(question:context:)","title":"static func askToConfirmAction(question: String, context: ActionContext) async -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/asktodisambiguate(question:clarifiedcommand:context:)","title":"static func askToDisambiguate(question: String, clarifiedCommand: Command, context: ActionContext) async -> ActionResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/consumesturn","title":"var consumesTurn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/postprocess(command:engine:result:)","title":"func postProcess(command: Command, engine: GameEngine, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/yesnoquestionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/yesnoquestionhandler","title":"YesNoQuestionHandler","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/after(_:result:)","title":"func after(Intent..., result: (ItemEventContext, Command) async throws -> ActionResult?) -> ItemEventMatcher","type":"func"},{"path":"\/documentation\/gnustoengine\/afterturn(_:result:)","title":"func afterTurn(Intent..., result: (LocationEventContext, Command) async throws -> ActionResult?) -> LocationEventMatcher","type":"func"},{"path":"\/documentation\/gnustoengine\/before(_:result:)","title":"func before(Intent..., result: (ItemEventContext, Command) async throws -> ActionResult?) -> ItemEventMatcher","type":"func"},{"path":"\/documentation\/gnustoengine\/beforeturn(_:result:)","title":"func beforeTurn(Intent..., result: (LocationEventContext, Command) async throws -> ActionResult?) -> LocationEventMatcher","type":"func"},{"path":"\/documentation\/gnustoengine\/itemproperty(_:result:)","title":"func itemProperty(ItemPropertyID..., result: (ItemComputeContext) async -> StateValue?) -> ItemComputeMatcher","type":"func"},{"path":"\/documentation\/gnustoengine\/locationproperty(_:result:)","title":"func locationProperty(LocationPropertyID..., result: (LocationComputeContext) async -> StateValue?) -> LocationComputeMatcher","type":"func"},{"path":"\/documentation\/gnustoengine\/onenter(result:)","title":"func onEnter(result: (LocationEventContext) async throws -> ActionResult?) -> LocationEventMatcher","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionid","title":"ActionID","type":"typealias"},{"path":"\/documentation\/gnustoengine\/itemcomputematcher","title":"ItemComputeMatcher","type":"typealias"},{"path":"\/documentation\/gnustoengine\/itemeventmatcher","title":"ItemEventMatcher","type":"typealias"},{"path":"\/documentation\/gnustoengine\/locationcomputematcher","title":"LocationComputeMatcher","type":"typealias"},{"path":"\/documentation\/gnustoengine\/locationeventmatcher","title":"LocationEventMatcher","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresponse\/cannotdo(_:_:)","title":"case cannotDo(ActionContext, ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/cannotdothat(_:)","title":"case cannotDoThat(ActionContext)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/cannotdowiththat(_:_:_:)","title":"case cannotDoWithThat(ActionContext, ItemProxy, ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/cannotdoyourself(_:)","title":"case cannotDoYourself(ActionContext)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/circulardependency(_:)","title":"case circularDependency(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/containerisclosed(_:)","title":"case containerIsClosed(ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/containerisopen(_:)","title":"case containerIsOpen(ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/directionisblocked(_:)","title":"case directionIsBlocked(String?)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/dowhat(_:)","title":"case doWhat(ActionContext)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/feedback(_:)","title":"case feedback(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/filemanagererror(_:)","title":"case fileManagerError(URL)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/internalengineerror(_:)","title":"case internalEngineError(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/invaliddirection","title":"case invalidDirection","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/invalidindirectobject(_:)","title":"case invalidIndirectObject(ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/invalidvalue(_:)","title":"case invalidValue(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotaccessible(_:)","title":"case itemNotAccessible(ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotheld(_:)","title":"case itemNotHeld(ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/multipleobjectsnotsupported(_:)","title":"case multipleObjectsNotSupported(ActionContext)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/playercannotcarrymore","title":"case playerCannotCarryMore","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/roomisdark","title":"case roomIsDark","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/targetisnotacontainer(_:)","title":"case targetIsNotAContainer(ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/unknownitem(_:)","title":"case unknownItem(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/unknownlocation(_:)","title":"case unknownLocation(LocationID)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/actionresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresponse\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/actionresponse\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/actionresponse","title":"ActionResponse","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/alignment\/chaoticevil","title":"case chaoticEvil","type":"case"},{"path":"\/documentation\/gnustoengine\/alignment\/chaoticgood","title":"case chaoticGood","type":"case"},{"path":"\/documentation\/gnustoengine\/alignment\/chaoticneutral","title":"case chaoticNeutral","type":"case"},{"path":"\/documentation\/gnustoengine\/alignment\/lawfulevil","title":"case lawfulEvil","type":"case"},{"path":"\/documentation\/gnustoengine\/alignment\/lawfulgood","title":"case lawfulGood","type":"case"},{"path":"\/documentation\/gnustoengine\/alignment\/lawfulneutral","title":"case lawfulNeutral","type":"case"},{"path":"\/documentation\/gnustoengine\/alignment\/neutralevil","title":"case neutralEvil","type":"case"},{"path":"\/documentation\/gnustoengine\/alignment\/neutralgood","title":"case neutralGood","type":"case"},{"path":"\/documentation\/gnustoengine\/alignment\/trueneutral","title":"case trueNeutral","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/alignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/alignment\/basepacifydc","title":"var basePacifyDC: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/alignment\/canbepacified","title":"var canBePacified: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/alignment\/goodevilaxis","title":"var goodEvilAxis: GoodEvilAxis","type":"property"},{"path":"\/documentation\/gnustoengine\/alignment\/intimidationmodifier","title":"var intimidationModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/alignment\/lawchaosaxis","title":"var lawChaosAxis: LawChaosAxis","type":"property"},{"path":"\/documentation\/gnustoengine\/alignment\/moralemodifier","title":"var moraleModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/alignment\/requiresweapon","title":"var requiresWeapon: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/alignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/alignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/alignment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/alignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/alignment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/alignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/alignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/alignment","title":"Alignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/classification\/feminine","title":"case feminine","type":"case"},{"path":"\/documentation\/gnustoengine\/classification\/masculine","title":"case masculine","type":"case"},{"path":"\/documentation\/gnustoengine\/classification\/neuter","title":"case neuter","type":"case"},{"path":"\/documentation\/gnustoengine\/classification\/plural","title":"case plural","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/classification\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/classification\/objectpronoun","title":"var objectPronoun: String","type":"property"},{"path":"\/documentation\/gnustoengine\/classification\/pasttensebeverb","title":"var pastTenseBeVerb: String","type":"property"},{"path":"\/documentation\/gnustoengine\/classification\/possessiveadjective","title":"var possessiveAdjective: String","type":"property"},{"path":"\/documentation\/gnustoengine\/classification\/possessivepronoun","title":"var possessivePronoun: String","type":"property"},{"path":"\/documentation\/gnustoengine\/classification\/presenttensebeverb","title":"var presentTenseBeVerb: String","type":"property"},{"path":"\/documentation\/gnustoengine\/classification\/reflexivepronoun","title":"var reflexivePronoun: String","type":"property"},{"path":"\/documentation\/gnustoengine\/classification\/subjectpronoun","title":"var subjectPronoun: String","type":"property"},{"path":"\/documentation\/gnustoengine\/classification\/usessingularverbs","title":"var usesSingularVerbs: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/classification\/verb(_:_:)","title":"func verb(String, String?) -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/classification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/classification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/classification\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/classification\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/classification\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/classification\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/classification\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/classification","title":"Classification","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatcondition\/disarmed","title":"case disarmed","type":"case"},{"path":"\/documentation\/gnustoengine\/combatcondition\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/gnustoengine\/combatcondition\/offbalance","title":"case offBalance","type":"case"},{"path":"\/documentation\/gnustoengine\/combatcondition\/surrendered","title":"case surrendered","type":"case"},{"path":"\/documentation\/gnustoengine\/combatcondition\/uncertain","title":"case uncertain","type":"case"},{"path":"\/documentation\/gnustoengine\/combatcondition\/vulnerable","title":"case vulnerable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatcondition\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatcondition\/armorclassmodifier","title":"var armorClassModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/combatcondition\/attackmodifier","title":"var attackModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/combatcondition\/isdefensivelyimpaired","title":"var isDefensivelyImpaired: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/combatcondition\/isoffensivelyimpaired","title":"var isOffensivelyImpaired: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/combatcondition\/willfight","title":"var willFight: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/combatcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatcondition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatcondition\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatcondition\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/combatcondition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/combatcondition\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/combatcondition","title":"CombatCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatevent\/combatinterrupted(reason:)","title":"case combatInterrupted(reason: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemyattacks(enemy:playerweapon:enemyweapon:)","title":"case enemyAttacks(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemyblocked(enemy:playerweapon:enemyweapon:)","title":"case enemyBlocked(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemycriticallywounded(enemy:playerweapon:enemyweapon:damage:)","title":"case enemyCriticallyWounded(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemydisarmed(enemy:playerweapon:enemyweapon:wasfumble:)","title":"case enemyDisarmed(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy, wasFumble: Bool)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemyflees(enemy:enemyweapon:direction:destination:)","title":"case enemyFlees(enemy: ItemProxy, enemyWeapon: ItemProxy?, direction: Direction?, destination: LocationID?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemygravelyinjured(enemy:playerweapon:enemyweapon:damage:)","title":"case enemyGravelyInjured(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemygrazed(enemy:playerweapon:enemyweapon:damage:)","title":"case enemyGrazed(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemyhesitates(enemy:playerweapon:enemyweapon:)","title":"case enemyHesitates(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemyinjured(enemy:playerweapon:enemyweapon:damage:)","title":"case enemyInjured(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemylightlyinjured(enemy:playerweapon:enemyweapon:damage:)","title":"case enemyLightlyInjured(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemymissed(enemy:playerweapon:enemyweapon:)","title":"case enemyMissed(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemypacified(enemy:enemyweapon:)","title":"case enemyPacified(enemy: ItemProxy, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemyslain(enemy:playerweapon:enemyweapon:damage:)","title":"case enemySlain(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemyspecialaction(enemy:enemyweapon:message:)","title":"case enemySpecialAction(enemy: ItemProxy, enemyWeapon: ItemProxy?, message: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemystaggers(enemy:playerweapon:enemyweapon:)","title":"case enemyStaggers(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemysurrenders(enemy:enemyweapon:)","title":"case enemySurrenders(enemy: ItemProxy, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemytaunts(enemy:message:)","title":"case enemyTaunts(enemy: ItemProxy, message: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemyunconscious(enemy:playerweapon:enemyweapon:)","title":"case enemyUnconscious(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemyvulnerable(enemy:playerweapon:enemyweapon:)","title":"case enemyVulnerable(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/error(message:)","title":"case error(message: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/nonweaponattack(enemy:enemyweapon:item:)","title":"case nonWeaponAttack(enemy: ItemProxy, enemyWeapon: ItemProxy?, item: ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerattacks(enemy:playerweapon:enemyweapon:)","title":"case playerAttacks(enemy: ItemProxy, playerWeapon: ItemProxy?, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playercriticallywounded(enemy:enemyweapon:damage:)","title":"case playerCriticallyWounded(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerdisarmed(enemy:playerweapon:enemyweapon:wasfumble:)","title":"case playerDisarmed(enemy: ItemProxy, playerWeapon: ItemProxy, enemyWeapon: ItemProxy?, wasFumble: Bool)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerdistracted(enemy:enemyweapon:command:)","title":"case playerDistracted(enemy: ItemProxy, enemyWeapon: ItemProxy?, command: Command)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerdodged(enemy:enemyweapon:)","title":"case playerDodged(enemy: ItemProxy, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playergravelyinjured(enemy:enemyweapon:damage:)","title":"case playerGravelyInjured(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playergrazed(enemy:enemyweapon:damage:)","title":"case playerGrazed(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerhesitates(enemy:enemyweapon:)","title":"case playerHesitates(enemy: ItemProxy, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerinjured(enemy:enemyweapon:damage:)","title":"case playerInjured(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerlightlyinjured(enemy:enemyweapon:damage:)","title":"case playerLightlyInjured(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playermissed(enemy:enemyweapon:)","title":"case playerMissed(enemy: ItemProxy, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerslain(enemy:enemyweapon:damage:)","title":"case playerSlain(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerstaggers(enemy:enemyweapon:)","title":"case playerStaggers(enemy: ItemProxy, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playerunconscious(enemy:enemyweapon:damage:)","title":"case playerUnconscious(enemy: ItemProxy, enemyWeapon: ItemProxy?, damage: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/playervulnerable(enemy:enemyweapon:)","title":"case playerVulnerable(enemy: ItemProxy, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/stalemate(enemy:enemyweapon:)","title":"case stalemate(enemy: ItemProxy, enemyWeapon: ItemProxy?)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/unarmedattackdenied(enemy:enemyweapon:)","title":"case unarmedAttackDenied(enemy: ItemProxy, enemyWeapon: ItemProxy?)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatevent\/chancetoprovokeenemytaunt","title":"var chanceToProvokeEnemyTaunt: Double","type":"property"},{"path":"\/documentation\/gnustoengine\/combatevent\/enemy","title":"var enemy: ItemProxy?","type":"property"},{"path":"\/documentation\/gnustoengine\/combatevent\/incapacitatesopponent","title":"var incapacitatesOpponent: Bool","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/critical","title":"case critical","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/fatal","title":"case fatal","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/grave","title":"case grave","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/light","title":"case light","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/moderate","title":"case moderate","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/none","title":"case none","type":"case"},{"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/scratch","title":"case scratch","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/init(damage:currenthealth:)","title":"init(damage: Int, currentHealth: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/combatevent\/damagecategory","title":"CombatEvent.DamageCategory","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/combatevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/combatevent","title":"CombatEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatant\/enemy(_:)","title":"case enemy(ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/combatant\/player(_:)","title":"case player(PlayerProxy)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatant\/charactersheet","title":"var characterSheet: CharacterSheet","type":"property"},{"path":"\/documentation\/gnustoengine\/combatant\/health","title":"var health: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/combatant\/maxhealth","title":"var maxHealth: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/combatant\/preferredweapon","title":"var preferredWeapon: ItemProxy?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/combatant\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/combatant\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/combatant","title":"Combatant","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/alert","title":"case alert","type":"case"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/asleep","title":"case asleep","type":"case"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/coma","title":"case coma","type":"case"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/dead","title":"case dead","type":"case"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/drowsy","title":"case drowsy","type":"case"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/unconscious","title":"case unconscious","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/canact","title":"var canAct: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/canbeawakened","title":"var canBeAwakened: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/canperceive","title":"var canPerceive: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/initiativemodifier","title":"var initiativeModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/perceptionmodifier","title":"var perceptionModifier: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/consciousnesslevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/consciousnesslevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/consciousnesslevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/consciousnesslevel","title":"ConsciousnessLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/down","title":"case down","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/east","title":"case east","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/inside","title":"case inside","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/north","title":"case north","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/northeast","title":"case northeast","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/northwest","title":"case northwest","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/outside","title":"case outside","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/south","title":"case south","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/southeast","title":"case southeast","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/southwest","title":"case southwest","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/up","title":"case up","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/west","title":"case west","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/'...(_:)-6yqah","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/'...(_:)-8hf7m","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/_(_:_:)","title":"static func < (Direction, Direction) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/_(_:_:)-2w017","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/_=(_:_:)-1n481","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/_=(_:_:)-819xq","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/direction\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/direction\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/direction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/direction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/direction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/direction","title":"Direction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityid\/daemon(_:)","title":"case daemon(DaemonID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/fuse(_:)","title":"case fuse(FuseID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/global","title":"case global","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/item(_:)","title":"case item(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/location(_:)","title":"case location(LocationID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/player","title":"case player","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/entityid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/entityid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/entityid","title":"EntityID","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityreference\/item(_:)","title":"case item(Item)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityreference\/location(_:)","title":"case location(Location)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityreference\/player","title":"case player","type":"case"},{"path":"\/documentation\/gnustoengine\/entityreference\/universal(_:)","title":"case universal(Universal)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityreference\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityreference\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/entityreference\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/entityreference\/==(_:_:)","title":"static func == (EntityReference, EntityReference) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/entityreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/entityreference","title":"EntityReference","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/executionflow\/append","title":"case append","type":"case"},{"path":"\/documentation\/gnustoengine\/executionflow\/override","title":"case override","type":"case"},{"path":"\/documentation\/gnustoengine\/executionflow\/prepend","title":"case prepend","type":"case"},{"path":"\/documentation\/gnustoengine\/executionflow\/yield","title":"case yield","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/executionflow\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/executionflow\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/executionflow","title":"ExecutionFlow","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/generalcondition\/blessed","title":"case blessed","type":"case"},{"path":"\/documentation\/gnustoengine\/generalcondition\/charmed","title":"case charmed","type":"case"},{"path":"\/documentation\/gnustoengine\/generalcondition\/cursed","title":"case cursed","type":"case"},{"path":"\/documentation\/gnustoengine\/generalcondition\/diseased","title":"case diseased","type":"case"},{"path":"\/documentation\/gnustoengine\/generalcondition\/drunk","title":"case drunk","type":"case"},{"path":"\/documentation\/gnustoengine\/generalcondition\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/gnustoengine\/generalcondition\/poisoned","title":"case poisoned","type":"case"},{"path":"\/documentation\/gnustoengine\/generalcondition\/terrified","title":"case terrified","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/generalcondition\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/generalcondition\/abilitycheckmodifier","title":"var abilityCheckModifier: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/generalcondition\/impairsfreewill","title":"var impairsFreeWill: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/generalcondition\/isbeneficial","title":"var isBeneficial: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/generalcondition\/isharmful","title":"var isHarmful: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/generalcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/generalcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/generalcondition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/generalcondition\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/generalcondition\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/generalcondition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/generalcondition\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/generalcondition","title":"GeneralCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goodevilaxis\/evil","title":"case evil","type":"case"},{"path":"\/documentation\/gnustoengine\/goodevilaxis\/good","title":"case good","type":"case"},{"path":"\/documentation\/gnustoengine\/goodevilaxis\/neutral","title":"case neutral","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goodevilaxis\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goodevilaxis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/goodevilaxis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goodevilaxis\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goodevilaxis\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goodevilaxis\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/goodevilaxis\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/goodevilaxis\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/goodevilaxis","title":"GoodEvilAxis","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/healthcondition\/badlywounded","title":"case badlyWounded","type":"case"},{"path":"\/documentation\/gnustoengine\/healthcondition\/bruised","title":"case bruised","type":"case"},{"path":"\/documentation\/gnustoengine\/healthcondition\/critical","title":"case critical","type":"case"},{"path":"\/documentation\/gnustoengine\/healthcondition\/dead","title":"case dead","type":"case"},{"path":"\/documentation\/gnustoengine\/healthcondition\/healthy","title":"case healthy","type":"case"},{"path":"\/documentation\/gnustoengine\/healthcondition\/wounded","title":"case wounded","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/healthcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/healthcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/healthcondition","title":"HealthCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/intent\/ask","title":"case ask","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/attack","title":"case attack","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/burn","title":"case burn","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/climb","title":"case climb","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/close","title":"case close","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/cut","title":"case cut","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/defend","title":"case defend","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/dig","title":"case dig","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/drink","title":"case drink","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/eat","title":"case eat","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/empty","title":"case empty","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/enter","title":"case enter","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/examine","title":"case examine","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/extinguish","title":"case extinguish","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/give","title":"case give","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/help","title":"case help","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/insert","title":"case insert","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/inventory","title":"case inventory","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/jump","title":"case jump","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/lightsource","title":"case lightSource","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/listen","title":"case listen","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/lock","title":"case lock","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/look","title":"case look","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/meta","title":"case meta","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/move","title":"case move","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/mung","title":"case mung","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/open","title":"case open","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/pour","title":"case pour","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/pull","title":"case pull","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/push","title":"case push","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/quit","title":"case quit","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/read","title":"case read","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/remove","title":"case remove","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/restart","title":"case restart","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/restore","title":"case restore","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/save","title":"case save","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/search","title":"case search","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/sit","title":"case sit","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/smell","title":"case smell","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/swim","title":"case swim","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/take","title":"case take","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/taste","title":"case taste","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/tell","title":"case tell","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/think","title":"case think","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/throw","title":"case `throw`","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/tie","title":"case tie","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/touch","title":"case touch","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/turn","title":"case turn","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/unlock","title":"case unlock","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/wait","title":"case wait","type":"case"},{"path":"\/documentation\/gnustoengine\/intent\/wear","title":"case wear","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/intent\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/intent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/intent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/intent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/intent\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/intent\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/intent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/intent\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/intent","title":"Intent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemevent\/afterturn(_:)","title":"case afterTurn(Command)","type":"case"},{"path":"\/documentation\/gnustoengine\/itemevent\/beforeturn(_:)","title":"case beforeTurn(Command)","type":"case"}],"path":"\/documentation\/gnustoengine\/itemevent","title":"ItemEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lawchaosaxis\/chaotic","title":"case chaotic","type":"case"},{"path":"\/documentation\/gnustoengine\/lawchaosaxis\/lawful","title":"case lawful","type":"case"},{"path":"\/documentation\/gnustoengine\/lawchaosaxis\/neutral","title":"case neutral","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lawchaosaxis\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lawchaosaxis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/lawchaosaxis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lawchaosaxis\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lawchaosaxis\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lawchaosaxis\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/lawchaosaxis\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/lawchaosaxis\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/lawchaosaxis","title":"LawChaosAxis","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationevent\/afterturn(_:)","title":"case afterTurn(Command)","type":"case"},{"path":"\/documentation\/gnustoengine\/locationevent\/beforeturn(_:)","title":"case beforeTurn(Command)","type":"case"},{"path":"\/documentation\/gnustoengine\/locationevent\/onenter","title":"case onEnter","type":"case"}],"path":"\/documentation\/gnustoengine\/locationevent","title":"LocationEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parententity\/item(_:)","title":"case item(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/parententity\/location(_:)","title":"case location(LocationID)","type":"case"},{"path":"\/documentation\/gnustoengine\/parententity\/nowhere","title":"case nowhere","type":"case"},{"path":"\/documentation\/gnustoengine\/parententity\/player","title":"case player","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parententity\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parententity\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/parententity\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parententity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/parententity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/parententity","title":"ParentEntity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parentproxy\/item(_:)","title":"case item(ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/parentproxy\/location(_:)","title":"case location(LocationProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/parentproxy\/nowhere","title":"case nowhere","type":"case"},{"path":"\/documentation\/gnustoengine\/parentproxy\/player","title":"case player","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parentproxy\/entity","title":"var entity: ParentEntity","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parentproxy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/parentproxy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/parentproxy","title":"ParentProxy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parseerror\/allcommandnothingcarrying","title":"case allCommandNothingCarrying","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/allcommandnothinghere","title":"case allCommandNothingHere","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/allcommandnothingtotake","title":"case allCommandNothingToTake","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/ambiguity(_:)","title":"case ambiguity(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/ambiguousobjectreference(noun:options:)","title":"case ambiguousObjectReference(noun: String, options: [String])","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/ambiguousreference(options:)","title":"case ambiguousReference(options: [String])","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/ambiguousverb(phrase:verbs:)","title":"case ambiguousVerb(phrase: String, verbs: [String])","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/badgrammar(_:)","title":"case badGrammar(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/emptyinput","title":"case emptyInput","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/expecteddirection","title":"case expectedDirection","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/expectedparticleafterverb(expectedparticle:verb:found:)","title":"case expectedParticleAfterVerb(expectedParticle: String, verb: Verb, found: Verb)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/expectedparticlebutreachedend(expectedparticle:)","title":"case expectedParticleButReachedEnd(expectedParticle: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/internalerror(_:)","title":"case internalError(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/itemnotinscope(noun:)","title":"case itemNotInScope(noun: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/modifiermismatch(noun:modifiers:)","title":"case modifierMismatch(noun: String, modifiers: [String])","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/playerreferencecannotbemodified(reference:modifiers:)","title":"case playerReferenceCannotBeModified(reference: String, modifiers: [String])","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/prepositionmismatch(verb:expected:found:)","title":"case prepositionMismatch(verb: String, expected: String, found: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/pronouncannotbemodified(pronoun:)","title":"case pronounCannotBeModified(pronoun: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/pronounnotset(pronoun:)","title":"case pronounNotSet(pronoun: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/pronounreferstooutofscopeitem(pronoun:)","title":"case pronounRefersToOutOfScopeItem(pronoun: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/specificverbrequired(requiredverb:)","title":"case specificVerbRequired(requiredVerb: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/unexpectedwordsaftercommand(unexpectedwords:)","title":"case unexpectedWordsAfterCommand(unexpectedWords: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/verbdoesnotsupportmultipleindirectobjects(_:)","title":"case verbDoesNotSupportMultipleIndirectObjects(Verb)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/verbdoesnotsupportmultipleobjects(_:)","title":"case verbDoesNotSupportMultipleObjects(Verb)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/verbsyntaxrulesallfailed(_:)","title":"case verbSyntaxRulesAllFailed(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/verbunderstoodbutsyntaxfailed(_:)","title":"case verbUnderstoodButSyntaxFailed(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/verbunknown(_:)","title":"case verbUnknown(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/parseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/parseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/parseerror","title":"ParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/playeraction\/attack","title":"case attack","type":"case"},{"path":"\/documentation\/gnustoengine\/playeraction\/defend","title":"case defend","type":"case"},{"path":"\/documentation\/gnustoengine\/playeraction\/flee(direction:)","title":"case flee(direction: Direction?)","type":"case"},{"path":"\/documentation\/gnustoengine\/playeraction\/other","title":"case other","type":"case"},{"path":"\/documentation\/gnustoengine\/playeraction\/special(ability:)","title":"case special(ability: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/playeraction\/talk(topic:)","title":"case talk(topic: ProxyReference?)","type":"case"},{"path":"\/documentation\/gnustoengine\/playeraction\/useitem(item:)","title":"case useItem(item: ItemProxy)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/playeraction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/playeraction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/playeraction","title":"PlayerAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pronoun\/her(_:)","title":"case her(EntityReference)","type":"case"},{"path":"\/documentation\/gnustoengine\/pronoun\/him(_:)","title":"case him(EntityReference)","type":"case"},{"path":"\/documentation\/gnustoengine\/pronoun\/it(_:)","title":"case it(EntityReference)","type":"case"},{"path":"\/documentation\/gnustoengine\/pronoun\/them(_:)","title":"case them([EntityReference])","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pronoun\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pronoun\/isplural","title":"var isPlural: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/pronoun\/issingular","title":"var isSingular: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/pronoun\/objectpronountext","title":"var objectPronounText: String","type":"property"},{"path":"\/documentation\/gnustoengine\/pronoun\/possessivepronountext","title":"var possessivePronounText: String","type":"property"},{"path":"\/documentation\/gnustoengine\/pronoun\/subjectpronountext","title":"var subjectPronounText: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pronoun\/forentities(_:)","title":"static func forEntities([EntityReference]) -> Pronoun","type":"method"},{"path":"\/documentation\/gnustoengine\/pronoun\/forentity(_:classification:)","title":"static func forEntity(EntityReference, classification: Classification) -> Pronoun","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/pronoun\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/pronoun\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/pronoun","title":"Pronoun","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/proxyreference\/item(_:)","title":"case item(ItemProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/proxyreference\/location(_:)","title":"case location(LocationProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/proxyreference\/player(_:)","title":"case player(PlayerProxy)","type":"case"},{"path":"\/documentation\/gnustoengine\/proxyreference\/universal(_:)","title":"case universal(Universal)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/proxyreference\/init(from:with:)","title":"init(from: EntityReference, with: GameEngine) async","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/proxyreference\/entityreference","title":"var entityReference: EntityReference","type":"property"},{"path":"\/documentation\/gnustoengine\/proxyreference\/isitem","title":"var isItem: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/proxyreference\/islocation","title":"var isLocation: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/proxyreference\/isplayer","title":"var isPlayer: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/proxyreference\/isuniversal","title":"var isUniversal: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/proxyreference\/itemproxy","title":"var itemProxy: ItemProxy?","type":"property"},{"path":"\/documentation\/gnustoengine\/proxyreference\/locationproxy","title":"var locationProxy: LocationProxy?","type":"property"},{"path":"\/documentation\/gnustoengine\/proxyreference\/withdefinitearticle","title":"var withDefiniteArticle: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/proxyreference\/'...(_:)-5ebzu","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/proxyreference\/'...(_:)-5wsfa","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/proxyreference\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/proxyreference\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/proxyreference\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/proxyreference\/_(_:_:)","title":"static func < (ProxyReference, ProxyReference) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/proxyreference\/_(_:_:)-5b1j5","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/proxyreference\/_=(_:_:)-3nlj7","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/proxyreference\/_=(_:_:)-76rlb","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/proxyreference\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/proxyreference\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/proxyreference\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/proxyreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/proxyreference\/==(_:_:)","title":"static func == (ProxyReference, ProxyReference) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/proxyreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/proxyreference","title":"ProxyReference","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/rundaemon","title":"case runDaemon","type":"case"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/startfuse","title":"case startFuse","type":"case"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/stopdaemon","title":"case stopDaemon","type":"case"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/stopfuse","title":"case stopFuse","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/sideeffecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/sideeffecttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/sideeffecttype","title":"SideEffectType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statechange\/addactivedaemon(daemonid:daemonstate:)","title":"case addActiveDaemon(daemonID: DaemonID, daemonState: DaemonState)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/addactivefuse(fuseid:state:)","title":"case addActiveFuse(fuseID: FuseID, state: FuseState)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/clearflag(_:)","title":"case clearFlag(GlobalID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/clearglobalstate(id:)","title":"case clearGlobalState(id: GlobalID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/incrementplayermoves","title":"case incrementPlayerMoves","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/moveitem(id:to:)","title":"case moveItem(id: ItemID, to: ParentEntity)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/moveplayer(to:)","title":"case movePlayer(to: LocationID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/moveplayerto(parent:)","title":"case movePlayerTo(parent: ParentEntity)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/removeactivedaemon(daemonid:)","title":"case removeActiveDaemon(daemonID: DaemonID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/removeactivefuse(fuseid:)","title":"case removeActiveFuse(fuseID: FuseID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/requestgamequit","title":"case requestGameQuit","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/requestgamerestart","title":"case requestGameRestart","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setcombatstate(_:)","title":"case setCombatState(CombatState?)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setflag(_:)","title":"case setFlag(GlobalID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setglobalbool(id:value:)","title":"case setGlobalBool(id: GlobalID, value: Bool)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setglobalcodable(id:value:)","title":"case setGlobalCodable(id: GlobalID, value: AnyCodableSendable)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setglobalint(id:value:)","title":"case setGlobalInt(id: GlobalID, value: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setglobalitemid(id:value:)","title":"case setGlobalItemID(id: GlobalID, value: ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setgloballocationid(id:value:)","title":"case setGlobalLocationID(id: GlobalID, value: LocationID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setglobalstate(id:value:)","title":"case setGlobalState(id: GlobalID, value: StateValue)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setglobalstring(id:value:)","title":"case setGlobalString(id: GlobalID, value: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setitemadjectives(id:adjectives:)","title":"case setItemAdjectives(id: ItemID, adjectives: [String])","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setitemcapacity(id:capacity:)","title":"case setItemCapacity(id: ItemID, capacity: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setitemname(id:name:)","title":"case setItemName(id: ItemID, name: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setitemproperty(id:property:value:)","title":"case setItemProperty(id: ItemID, property: ItemPropertyID, value: StateValue)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setitemsize(id:size:)","title":"case setItemSize(id: ItemID, size: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setitemsynonyms(id:synonyms:)","title":"case setItemSynonyms(id: ItemID, synonyms: [String])","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setitemvalue(id:value:)","title":"case setItemValue(id: ItemID, value: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setlocationdescription(id:description:)","title":"case setLocationDescription(id: LocationID, description: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setlocationexits(id:exits:)","title":"case setLocationExits(id: LocationID, exits: Set<Exit>)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setlocationname(id:name:)","title":"case setLocationName(id: LocationID, name: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setlocationproperty(id:property:value:)","title":"case setLocationProperty(id: LocationID, property: LocationPropertyID, value: StateValue)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setplayerattributes(attributes:)","title":"case setPlayerAttributes(attributes: CharacterSheet)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/setplayerscore(to:)","title":"case setPlayerScore(to: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/updatedaemonstate(daemonid:daemonstate:)","title":"case updateDaemonState(daemonID: DaemonID, daemonState: DaemonState)","type":"case"},{"path":"\/documentation\/gnustoengine\/statechange\/updatefuseturns(fuseid:turns:)","title":"case updateFuseTurns(fuseID: FuseID, turns: Int)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statechange\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statechange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/statechange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/statechange","title":"StateChange","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/alignment(_:)","title":"case alignment(Alignment)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/bool(_:)","title":"case bool(Bool)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/charactersheet(_:)","title":"case characterSheet(CharacterSheet)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/codable(_:)","title":"case codable(AnyCodableSendable)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/combatcondition(_:)","title":"case combatCondition(CombatCondition)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/combatstate(_:)","title":"case combatState(CombatState?)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/consciousness(_:)","title":"case consciousness(ConsciousnessLevel)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/entityreferenceset(_:)","title":"case entityReferenceSet(Set<EntityReference>?)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/exits(_:)","title":"case exits(Set<Exit>)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/generalcondition(_:)","title":"case generalCondition(GeneralCondition)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/int(_:)","title":"case int(Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/itemid(_:)","title":"case itemID(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/itemidset(_:)","title":"case itemIDSet(Set<ItemID>)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/locationid(_:)","title":"case locationID(LocationID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/locationidset(_:)","title":"case locationIDSet(Set<LocationID>)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/parententity(_:)","title":"case parentEntity(ParentEntity)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/stringset(_:)","title":"case stringSet(Set<String>)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/toalignment","title":"var toAlignment: Alignment?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tobool","title":"var toBool: Bool?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tocharactersheet","title":"var toCharacterSheet: CharacterSheet?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tocombatcondition","title":"var toCombatCondition: CombatCondition?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tocombatstate","title":"var toCombatState: CombatState?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toconsciousnesslevel","title":"var toConsciousnessLevel: ConsciousnessLevel?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toentityreferenceset","title":"var toEntityReferenceSet: Set<EntityReference>?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toexits","title":"var toExits: Set<Exit>?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/togeneralcondition","title":"var toGeneralCondition: GeneralCondition?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toint","title":"var toInt: Int?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toitemid","title":"var toItemID: ItemID?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toitemids","title":"var toItemIDs: Set<ItemID>?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tolocationid","title":"var toLocationID: LocationID?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tolocationids","title":"var toLocationIDs: Set<LocationID>?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toparententity","title":"var toParentEntity: ParentEntity?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tostring","title":"var toString: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tostrings","title":"var toStrings: Set<String>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/tocodable(as:)","title":"func toCodable<T>(as: T.Type) -> T?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/wrap(_:)","title":"static func wrap<T>(T) throws -> StateValue","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/statevalue\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/statevalue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/statevalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(arrayliteral:)","title":"init(arrayLiteral: StateValue.ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/arrayliteralelement","title":"StateValue.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(booleanliteral:)","title":"init(booleanLiteral: BooleanLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/statevalue","title":"StateValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/directobject","title":"case directObject","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/directobjects","title":"case directObjects","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/direction","title":"case direction","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/indirectobject","title":"case indirectObject","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/indirectobjects","title":"case indirectObjects","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/particle(_:)","title":"case particle(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/specificverb(_:)","title":"case specificVerb(Verb)","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/verb","title":"case verb","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/about","title":"static let about: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/at","title":"static let at: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/behind","title":"static let behind: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/below","title":"static let below: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/beneath","title":"static let beneath: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/down","title":"static let down: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/for","title":"static let `for`: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/from","title":"static let from: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/in","title":"static let `in`: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/inside","title":"static let inside: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/into","title":"static let into: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/off","title":"static let off: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/on","title":"static let on: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/onto","title":"static let onto: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/out","title":"static let out: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/over","title":"static let over: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/through","title":"static let through: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/to","title":"static let to: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/under","title":"static let under: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/up","title":"static let up: SyntaxTokenType","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/with","title":"static let with: SyntaxTokenType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/verb(_:)","title":"static func verb(Verb) -> SyntaxTokenType","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/syntaxtokentype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/syntaxtokentype\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/gnustoengine\/syntaxtokentype\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/syntaxtokentype","title":"SyntaxTokenType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/textstyle\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/emphasis","title":"case emphasis","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/input","title":"case input","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/preformatted","title":"case preformatted","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/statusline","title":"case statusLine","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/strong","title":"case strong","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/textstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/textstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/textstyle","title":"TextStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/air","title":"case air","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/ceiling","title":"case ceiling","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/clouds","title":"case clouds","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/darkness","title":"case darkness","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/dirt","title":"case dirt","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/dust","title":"case dust","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/earth","title":"case earth","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/fire","title":"case fire","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/flames","title":"case flames","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/floor","title":"case floor","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/ground","title":"case ground","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/heavens","title":"case heavens","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/lake","title":"case lake","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/light","title":"case light","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/moon","title":"case moon","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/mud","title":"case mud","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/noise","title":"case noise","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/ocean","title":"case ocean","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/pond","title":"case pond","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/river","title":"case river","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/rock","title":"case rock","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/roof","title":"case roof","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/sand","title":"case sand","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/sea","title":"case sea","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/shadows","title":"case shadows","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/silence","title":"case silence","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/sky","title":"case sky","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/smoke","title":"case smoke","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/soil","title":"case soil","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/sound","title":"case sound","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/stars","title":"case stars","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/stone","title":"case stone","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/stream","title":"case stream","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/sun","title":"case sun","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/wall","title":"case wall","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/walls","title":"case walls","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/water","title":"case water","type":"case"},{"path":"\/documentation\/gnustoengine\/universal\/wind","title":"case wind","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/isarchitectural","title":"var isArchitectural: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/isdiggable","title":"var isDiggable: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/isindoorelement","title":"var isIndoorElement: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/isindoors","title":"var isIndoors: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/isoutdoorelement","title":"var isOutdoorElement: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/isoutdoors","title":"var isOutdoors: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/isphysical","title":"var isPhysical: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/iswater","title":"var isWater: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/relateduniversals","title":"var relatedUniversals: Set<Universal>","type":"property"},{"path":"\/documentation\/gnustoengine\/universal\/withdefinitearticle","title":"var withDefiniteArticle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/matches(_:)","title":"func matches(Universal) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/'...(_:)-2kc8z","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/universal\/'...(_:)-5byn1","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/universal\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/universal\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/universal\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/universal\/_(_:_:)","title":"static func < (Universal, Universal) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/universal\/_(_:_:)-8g96x","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/universal\/_=(_:_:)-2z88l","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/universal\/_=(_:_:)-6o5xl","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/universal\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/universal\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/universal\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/universal\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/universal\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/universal\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/universal","title":"Universal","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/foundation\/jsonencoder\/sorted(_:)","title":"static func sorted(JSONEncoder.OutputFormatting) -> JSONEncoder","type":"method"}],"path":"\/documentation\/gnustoengine\/foundation\/jsonencoder","title":"JSONEncoder","type":"extension"}],"path":"\/documentation\/gnustoengine\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/swift\/collection\/isnotempty","title":"var isNotEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/swift\/collection\/intersects(_:)","title":"func intersects<C>(C) -> Bool","type":"method"}],"path":"\/documentation\/gnustoengine\/swift\/collection","title":"Collection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/swift\/rangereplaceablecollection\/appendifpresent(_:)","title":"func appendIfPresent(Self.Element?...)","type":"method"}],"path":"\/documentation\/gnustoengine\/swift\/rangereplaceablecollection","title":"RangeReplaceableCollection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/swift\/sequence\/asynccompactmap(_:)-7nxxi","title":"func asyncCompactMap<T>((Self.Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/gnustoengine\/swift\/sequence\/asynccompactmap(_:)-8ixui","title":"func asyncCompactMap<T>((Self.Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/gnustoengine\/swift\/sequence\/asynccontains(where:)","title":"func asyncContains(where: (Self.Element) async -> Bool) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/swift\/sequence\/asyncfilter(_:)-2391j","title":"func asyncFilter((Self.Element) async throws -> Bool) async throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/gnustoengine\/swift\/sequence\/asyncfilter(_:)-4a6s3","title":"func asyncFilter((Self.Element) async -> Bool) async -> [Self.Element]","type":"method"},{"path":"\/documentation\/gnustoengine\/swift\/sequence\/asyncmap(_:)-12jvs","title":"func asyncMap<T>((Self.Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/gnustoengine\/swift\/sequence\/asyncmap(_:)-264wr","title":"func asyncMap<T>((Self.Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/gnustoengine\/swift\/sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async throws -> Bool","type":"method"}],"path":"\/documentation\/gnustoengine\/swift\/sequence","title":"Sequence","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/swift\/array\/allcontents","title":"var allContents: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/swift\/array\/leavesplayerunconscious","title":"var leavesPlayerUnconscious: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/swift\/array\/sortedbytempvalue","title":"var sortedByTempValue: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/swift\/array\/sortedbyvalue","title":"var sortedByValue: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/swift\/array\/sortedbyweapondamage","title":"var sortedByWeaponDamage: [ItemProxy]","type":"property"},{"path":"\/documentation\/gnustoengine\/swift\/array\/visiblecontents","title":"var visibleContents: [ItemProxy]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/swift\/array\/listwithdefinitearticles(conjunction:)","title":"func listWithDefiniteArticles(conjunction: String) async -> String?","type":"method"},{"path":"\/documentation\/gnustoengine\/swift\/array\/listwithindefinitearticles(conjunction:)","title":"func listWithIndefiniteArticles(conjunction: String) async -> String?","type":"method"}],"path":"\/documentation\/gnustoengine\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/swift\/set\/closestmatch(to:)","title":"func closestMatch(to: String) -> Universal?","type":"method"}],"path":"\/documentation\/gnustoengine\/swift\/set","title":"Set","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/swift\/string\/linebreak","title":"static var linebreak: String","type":"property"},{"path":"\/documentation\/gnustoengine\/swift\/string\/paragraph","title":"static var paragraph: String","type":"property"},{"path":"\/documentation\/gnustoengine\/swift\/string\/space","title":"static var space: String","type":"property"}],"path":"\/documentation\/gnustoengine\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/gnustoengine\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/gnustoengine","title":"GnustoEngine","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}