{"includedArchiveIdentifiers":["GnustoEngine"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameengine\/init(blueprint:parser:iohandler:)","title":"init(blueprint: any GameBlueprint, parser: any Parser, ioHandler: any IOHandler) async","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameengine\/beforeturn","title":"var beforeTurn: ((GameEngine, Command) async -> Bool)?","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/constants","title":"let constants: GameConstants","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/definitionregistry","title":"let definitionRegistry: DefinitionRegistry","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/dynamicattributeregistry","title":"var dynamicAttributeRegistry: DynamicAttributeRegistry","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/gamestate","title":"var gameState: GameState","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/onenterroom","title":"var onEnterRoom: ((GameEngine, LocationID) async -> Bool)?","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/playerinventory","title":"var playerInventory: [Item]","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/playerlocationid","title":"var playerLocationID: LocationID","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/playermoves","title":"var playerMoves: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/gameengine\/playerscore","title":"var playerScore: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameengine\/adjustglobal(_:by:)","title":"func adjustGlobal(GlobalID, by: Int) -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/applygamespecificstatechange(key:value:)","title":"func applyGameSpecificStateChange(key: GlobalID, value: StateValue) async","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/applyitemmove(itemid:newparent:)","title":"func applyItemMove(itemID: ItemID, newParent: ParentEntity) async throws","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/applyplayermove(to:)","title":"func applyPlayerMove(to: LocationID) async throws","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/applypronounchange(pronoun:itemid:)","title":"func applyPronounChange(pronoun: String, itemID: ItemID) async","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/clearflag(_:)","title":"func clearFlag(GlobalID) async","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/clearflag(_:on:)-1s2qu","title":"func clearFlag(AttributeID, on: Item?) -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/clearflag(_:on:)-78eoa","title":"func clearFlag(AttributeID, on: Location?) -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/execute(command:)","title":"func execute(command: Command) async","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/fetch(_:_:)-4h7yx","title":"func fetch(ItemID, AttributeID) async throws -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/fetch(_:_:)-6r8qn","title":"func fetch(LocationID, AttributeID) async throws -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/fetch(_:_:)-87i7c","title":"func fetch(ItemID, AttributeID) async throws -> Int","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/fetch(_:_:)-taub","title":"func fetch(ItemID, AttributeID) async throws -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/generatedescription(for:key:engine:)-1ldg3","title":"func generateDescription(for: ItemID, key: AttributeID, engine: GameEngine) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/generatedescription(for:key:engine:)-50w0v","title":"func generateDescription(for: LocationID, key: AttributeID, engine: GameEngine) async -> String","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/getchangehistory()","title":"func getChangeHistory() -> [StateChange]","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/getpronounreference(pronoun:)","title":"func getPronounReference(pronoun: String) -> Set<EntityReference>?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/getstatevalue(key:)","title":"func getStateValue(key: GlobalID) -> StateValue?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/global(_:)-5rdgs","title":"func global(GlobalID) -> StateValue?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/global(_:)-9g1b4","title":"func global(GlobalID) -> Int?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/global(_:)-nj0o","title":"func global(GlobalID) -> Bool?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/isflagset(_:)","title":"func isFlagSet(GlobalID) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/islocationlit(at:)","title":"func isLocationLit(at: LocationID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/item(_:)","title":"func item(ItemID?) throws -> Item","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/items(in:)","title":"func items(in: ParentEntity) -> [Item]","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/location(_:)","title":"func location(LocationID?) throws -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/move(_:to:)","title":"func move(Item, to: ParentEntity) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/playercancarry(_:)","title":"func playerCanCarry(Item) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/playercanreach(_:)","title":"func playerCanReach(ItemID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/playerisholding(_:)","title":"func playerIsHolding(ItemID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/playerlocation()","title":"func playerLocation() throws -> Location","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/playerlocationislit()","title":"func playerLocationIsLit() async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/registeritemcompute(key:handler:)","title":"func registerItemCompute(key: AttributeID, handler: DynamicAttributeRegistry.ItemComputeHandler)","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/registeritemvalidate(key:handler:)","title":"func registerItemValidate(key: AttributeID, handler: DynamicAttributeRegistry.ItemValidateHandler)","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/registerlocationcompute(key:handler:)","title":"func registerLocationCompute(key: AttributeID, handler: DynamicAttributeRegistry.LocationComputeHandler)","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/registerlocationvalidate(key:handler:)","title":"func registerLocationValidate(key: AttributeID, handler: DynamicAttributeRegistry.LocationValidateHandler)","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/requestquit()","title":"func requestQuit()","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/run()","title":"func run() async","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/setflag(_:)","title":"func setFlag(GlobalID) async","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/setflag(_:on:)-690ms","title":"func setFlag(AttributeID, on: Location?) -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/setflag(_:on:)-wk7b","title":"func setFlag(AttributeID, on: Item?) -> StateChange?","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/updateplayerscore(by:)","title":"func updatePlayerScore(by: Int) -> StateChange","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/updatepronouns(to:)","title":"func updatePronouns(to: Item...) -> StateChange?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameengine\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/gnustoengine\/gameengine\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/gnustoengine\/gameengine\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/gameengine","title":"GameEngine","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actioncontextprovider\/getcontext(for:)","title":"func getContext(for: ActionContext) async throws -> ActionContext","type":"method"}],"path":"\/documentation\/gnustoengine\/actioncontextprovider","title":"ActionContextProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/actionhandler\/postprocess(context:result:)-598hx","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"title":"ActionHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/actionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"},{"path":"\/documentation\/gnustoengine\/actionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/actionhandler\/validate(context:)-tvz9","title":"func validate(context: ActionContext) async throws","type":"method"}],"title":"ActionHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/actionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/actionhandler","title":"ActionHandler","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/areablueprint\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/areablueprint\/itemeventhandlers","title":"static var itemEventHandlers: [ItemID : ItemEventHandler]","type":"property"},{"path":"\/documentation\/gnustoengine\/areablueprint\/items","title":"static var items: [Item]","type":"property"},{"path":"\/documentation\/gnustoengine\/areablueprint\/locationeventhandlers","title":"static var locationEventHandlers: [LocationID : LocationEventHandler]","type":"property"},{"path":"\/documentation\/gnustoengine\/areablueprint\/locations","title":"static var locations: [Location]","type":"property"}],"path":"\/documentation\/gnustoengine\/areablueprint","title":"AreaBlueprint","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attribute\/init(id:rawvalue:)","title":"init(id: AttributeID, rawValue: StateValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attribute\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/exits","title":"var exits: [Direction : Exit]?","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/id","title":"var id: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/itemid","title":"var itemID: ItemID?","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/itemids","title":"var itemIDs: Set<ItemID>?","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/locationid","title":"var locationID: LocationID?","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/parententity","title":"var parentEntity: ParentEntity?","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/rawvalue","title":"var rawValue: StateValue","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/attribute\/strings","title":"var strings: Set<String>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attribute\/get()-48vm","title":"func get() -> String?","type":"method"},{"path":"\/documentation\/gnustoengine\/attribute\/get()-524wx","title":"func get() -> Set<ItemID>?","type":"method"},{"path":"\/documentation\/gnustoengine\/attribute\/get()-60eah","title":"func get() -> Set<String>?","type":"method"},{"path":"\/documentation\/gnustoengine\/attribute\/get()-74e7p","title":"func get() -> [Direction : Exit]?","type":"method"},{"path":"\/documentation\/gnustoengine\/attribute\/get()-8gvnz","title":"func get() -> ItemID?","type":"method"},{"path":"\/documentation\/gnustoengine\/attribute\/get()-989e8","title":"func get() -> ParentEntity?","type":"method"},{"path":"\/documentation\/gnustoengine\/attribute\/get()-kr3c","title":"func get() -> LocationID?","type":"method"}],"path":"\/documentation\/gnustoengine\/attribute","title":"Attribute","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/beforeturn-2ixa5","title":"var beforeTurn: (GameEngine, Command) async -> Bool","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/beforeturn","title":"var beforeTurn: (GameEngine, Command) async -> Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/gameblueprint\/constants","title":"var constants: GameConstants","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/customactionhandlers-74330","title":"var customActionHandlers: [VerbID : any ActionHandler]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/customactionhandlers","title":"var customActionHandlers: [VerbID : any ActionHandler]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/definitionregistry-583kv","title":"var definitionRegistry: DefinitionRegistry","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/definitionregistry","title":"var definitionRegistry: DefinitionRegistry","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/dynamicattributeregistry-31f6i","title":"var dynamicAttributeRegistry: DynamicAttributeRegistry","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/dynamicattributeregistry","title":"var dynamicAttributeRegistry: DynamicAttributeRegistry","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/itemeventhandlers-86fnx","title":"var itemEventHandlers: [ItemID : ItemEventHandler]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/itemeventhandlers","title":"var itemEventHandlers: [ItemID : ItemEventHandler]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/locationeventhandlers-86iss","title":"var locationEventHandlers: [LocationID : LocationEventHandler]","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/locationeventhandlers","title":"var locationEventHandlers: [LocationID : LocationEventHandler]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/gameblueprint\/onenterroom-5kdk","title":"var onEnterRoom: (GameEngine, LocationID) async -> Bool","type":"property"}],"title":"GameBlueprint Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/gameblueprint\/onenterroom","title":"var onEnterRoom: (GameEngine, LocationID) async -> Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/gameblueprint\/state","title":"var state: GameState","type":"property"}],"path":"\/documentation\/gnustoengine\/gameblueprint","title":"GameBlueprint","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/iohandler\/clearscreen()","title":"func clearScreen()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/iohandler\/print(_:)-1thgd","title":"func print(String)","type":"method"}],"title":"IOHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/iohandler\/print(_:)","title":"func print(String)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/gnustoengine\/iohandler\/print(_:style:)-9stqr","title":"func print(String, style: TextStyle)","type":"method"}],"title":"IOHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/gnustoengine\/iohandler\/print(_:style:)","title":"func print(String, style: TextStyle)","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/print(_:style:newline:)","title":"func print(String, style: TextStyle, newline: Bool)","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/readline(prompt:)","title":"func readLine(prompt: String) -> String?","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/showstatusline(roomname:score:turns:)","title":"func showStatusLine(roomName: String, score: Int, turns: Int)","type":"method"},{"path":"\/documentation\/gnustoengine\/iohandler\/teardown()","title":"func teardown()","type":"method"}],"path":"\/documentation\/gnustoengine\/iohandler","title":"IOHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parser\/parse(input:vocabulary:gamestate:)","title":"func parse(input: String, vocabulary: Vocabulary, gameState: GameState) -> Result<Command, ParseError>","type":"method"}],"path":"\/documentation\/gnustoengine\/parser","title":"Parser","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actioncontext\/init(command:engine:statesnapshot:contextdata:)","title":"init(command: Command, engine: GameEngine, stateSnapshot: GameState, contextData: [ContextID : StateValue])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actioncontext\/command","title":"let command: Command","type":"property"},{"path":"\/documentation\/gnustoengine\/actioncontext\/contextdata","title":"let contextData: [ContextID : StateValue]","type":"property"},{"path":"\/documentation\/gnustoengine\/actioncontext\/engine","title":"let engine: GameEngine","type":"property"},{"path":"\/documentation\/gnustoengine\/actioncontext\/statesnapshot","title":"let stateSnapshot: GameState","type":"property"}],"path":"\/documentation\/gnustoengine\/actioncontext","title":"ActionContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresult\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/actionresult\/init(message:statechange:sideeffect:)","title":"init(message: String?, stateChange: StateChange?, sideEffect: SideEffect?)","type":"init"},{"path":"\/documentation\/gnustoengine\/actionresult\/init(message:statechanges:sideeffects:)","title":"init(message: String?, stateChanges: [StateChange], sideEffects: [SideEffect])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresult\/message","title":"let message: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/actionresult\/sideeffects","title":"let sideEffects: [SideEffect]","type":"property"},{"path":"\/documentation\/gnustoengine\/actionresult\/statechanges","title":"let stateChanges: [StateChange]","type":"property"}],"path":"\/documentation\/gnustoengine\/actionresult","title":"ActionResult","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributeid\/_(_:_:)","title":"static func < (AttributeID, AttributeID) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributeid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/attributeid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/attributeid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributeid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributeid\/adjectives","title":"static let adjectives: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/breaksmagic","title":"static let breaksMagic: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/capacity","title":"static let capacity: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/description","title":"static let description: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/exits","title":"static let exits: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/firstdescription","title":"static let firstDescription: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/inherentlylit","title":"static let inherentlyLit: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/ischanged","title":"static let isChanged: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/ischaracter","title":"static let isCharacter: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isclimbable","title":"static let isClimbable: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/iscombatready","title":"static let isCombatReady: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/iscontainer","title":"static let isContainer: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isdevice","title":"static let isDevice: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isdoor","title":"static let isDoor: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isedible","title":"static let isEdible: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isequippable","title":"static let isEquippable: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isfemale","title":"static let isFemale: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isflammable","title":"static let isFlammable: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isinvisible","title":"static let isInvisible: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/iskey","title":"static let isKey: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/island","title":"static let isLand: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/islightsource","title":"static let isLightSource: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/islit","title":"static let isLit: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/islockable","title":"static let isLockable: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/islocked","title":"static let isLocked: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/ison","title":"static let isOn: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isopen","title":"static let isOpen: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isopenable","title":"static let isOpenable: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isoutside","title":"static let isOutside: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isperson","title":"static let isPerson: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isplural","title":"static let isPlural: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isreadable","title":"static let isReadable: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/issacred","title":"static let isSacred: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isscenery","title":"static let isScenery: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/issearchable","title":"static let isSearchable: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/issurface","title":"static let isSurface: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/istakable","title":"static let isTakable: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/istool","title":"static let isTool: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/istouched","title":"static let isTouched: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/istransparent","title":"static let isTransparent: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isvehicle","title":"static let isVehicle: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isvisited","title":"static let isVisited: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/iswater","title":"static let isWater: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isweapon","title":"static let isWeapon: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/iswearable","title":"static let isWearable: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/isworn","title":"static let isWorn: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/localglobals","title":"static let localGlobals: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/lockkey","title":"static let lockKey: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/name","title":"static let name: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/parententity","title":"static let parentEntity: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/readtext","title":"static let readText: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/readwhileheldtext","title":"static let readWhileHeldText: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/requirestrytake","title":"static let requiresTryTake: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/shortdescription","title":"static let shortDescription: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/size","title":"static let size: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/startswithvowel","title":"static let startsWithVowel: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/suppressarticle","title":"static let suppressArticle: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/suppressdescription","title":"static let suppressDescription: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/attributeid\/synonyms","title":"static let synonyms: AttributeID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributeid\/'...(_:)-1hhe0","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/attributeid\/'...(_:)-9awqg","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/attributeid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/attributeid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/attributeid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/attributeid\/_(_:_:)-9uhc4","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/attributeid\/_=(_:_:)-4jobj","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/attributeid\/_=(_:_:)-8an4x","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/attributeid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributeid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/attributeid\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributeid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/attributeid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributeid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/attributeid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributeid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/attributeid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/attributeid","title":"AttributeID","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/closeactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/closeactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/closeactionhandler","title":"CloseActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/command\/init(verb:directobject:directobjectmodifiers:indirectobject:indirectobjectmodifiers:preposition:direction:rawinput:)","title":"init(verb: VerbID, directObject: EntityReference?, directObjectModifiers: [String], indirectObject: EntityReference?, indirectObjectModifiers: [String], preposition: String?, direction: Direction?, rawInput: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/command\/directobject","title":"var directObject: EntityReference?","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/directobjectmodifiers","title":"let directObjectModifiers: [String]","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/direction","title":"var direction: Direction?","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/indirectobject","title":"var indirectObject: EntityReference?","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/indirectobjectmodifiers","title":"let indirectObjectModifiers: [String]","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/preposition","title":"let preposition: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/rawinput","title":"let rawInput: String","type":"property"},{"path":"\/documentation\/gnustoengine\/command\/verb","title":"let verb: VerbID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/command\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/command\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/command","title":"Command","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/clearscreen()","title":"func clearScreen()","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/print(_:style:newline:)","title":"func print(String, style: TextStyle, newline: Bool)","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/readline(prompt:)","title":"func readLine(prompt: String) -> String?","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/showstatusline(roomname:score:turns:)","title":"func showStatusLine(roomName: String, score: Int, turns: Int)","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/teardown()","title":"func teardown()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/print(_:)","title":"func print(String)","type":"method"},{"path":"\/documentation\/gnustoengine\/consoleiohandler\/print(_:style:)","title":"func print(String, style: TextStyle)","type":"method"}],"path":"\/documentation\/gnustoengine\/consoleiohandler\/iohandler-implementations","title":"IOHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/consoleiohandler","title":"ConsoleIOHandler","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/contextid\/_(_:_:)","title":"static func < (ContextID, ContextID) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/contextid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/contextid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/contextid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/contextid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/contextid\/'...(_:)-1jzc5","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/contextid\/'...(_:)-21kyg","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/contextid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/contextid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/contextid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/contextid\/_(_:_:)-69fq","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/contextid\/_=(_:_:)-43i48","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/contextid\/_=(_:_:)-qhlz","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/contextid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/contextid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/contextid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/contextid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/contextid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/contextid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/contextid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/contextid","title":"ContextID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemon\/init(id:frequency:action:)","title":"init(id: Daemon.ID, frequency: Int, action: (GameEngine) async -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemon\/action","title":"var action: (GameEngine) async -> Void","type":"property"},{"path":"\/documentation\/gnustoengine\/daemon\/frequency","title":"let frequency: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/daemon\/id-swift.property","title":"let id: Daemon.ID","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemon\/id-swift.typealias","title":"Daemon.ID","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/daemon\/==(_:_:)","title":"static func == (Daemon, Daemon) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/daemon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemon\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/daemon\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/daemon","title":"Daemon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemondefinition\/init(id:frequency:action:)","title":"init(id: DaemonID, frequency: Int, action: (GameEngine) async -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemondefinition\/action","title":"let action: (GameEngine) async -> Void","type":"property"},{"path":"\/documentation\/gnustoengine\/daemondefinition\/frequency","title":"let frequency: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/daemondefinition\/id","title":"let id: DaemonID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemondefinition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/daemondefinition\/==(_:_:)","title":"static func == (DaemonDefinition, DaemonDefinition) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/daemondefinition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemondefinition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/daemondefinition\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/daemondefinition","title":"DaemonDefinition","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/_(_:_:)","title":"static func < (DaemonID, DaemonID) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/'...(_:)-3xxgf","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/'...(_:)-94jth","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/_(_:_:)-8rh4","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/_=(_:_:)-1vlhk","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/daemonid\/_=(_:_:)-63hu0","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/daemonid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/daemonid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/daemonid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/daemonid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/daemonid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/daemonid","title":"DaemonID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/debugactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/debugactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/debugactionhandler","title":"DebugActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/definitionregistry\/init(fusedefinitions:daemondefinitions:)","title":"init(fuseDefinitions: [FuseDefinition], daemonDefinitions: [DaemonDefinition])","type":"init"}],"path":"\/documentation\/gnustoengine\/definitionregistry","title":"DefinitionRegistry","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dropactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/dropactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/dropactionhandler","title":"DropActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dynamicattributeregistry\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dynamicattributeregistry\/registeritemcompute(key:handler:)","title":"func registerItemCompute(key: AttributeID, handler: DynamicAttributeRegistry.ItemComputeHandler)","type":"method"},{"path":"\/documentation\/gnustoengine\/dynamicattributeregistry\/registeritemvalidate(key:handler:)","title":"func registerItemValidate(key: AttributeID, handler: DynamicAttributeRegistry.ItemValidateHandler)","type":"method"},{"path":"\/documentation\/gnustoengine\/dynamicattributeregistry\/registerlocationcompute(key:handler:)","title":"func registerLocationCompute(key: AttributeID, handler: DynamicAttributeRegistry.LocationComputeHandler)","type":"method"},{"path":"\/documentation\/gnustoengine\/dynamicattributeregistry\/registerlocationvalidate(key:handler:)","title":"func registerLocationValidate(key: AttributeID, handler: DynamicAttributeRegistry.LocationValidateHandler)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/dynamicattributeregistry\/itemcomputehandler","title":"DynamicAttributeRegistry.ItemComputeHandler","type":"typealias"},{"path":"\/documentation\/gnustoengine\/dynamicattributeregistry\/itemvalidatehandler","title":"DynamicAttributeRegistry.ItemValidateHandler","type":"typealias"},{"path":"\/documentation\/gnustoengine\/dynamicattributeregistry\/locationcomputehandler","title":"DynamicAttributeRegistry.LocationComputeHandler","type":"typealias"},{"path":"\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler","title":"DynamicAttributeRegistry.LocationValidateHandler","type":"typealias"}],"path":"\/documentation\/gnustoengine\/dynamicattributeregistry","title":"DynamicAttributeRegistry","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/examineactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/examineactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/examineactionhandler","title":"ExamineActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/init(destination:blockedmessage:doorid:)","title":"init(destination: LocationID, blockedMessage: String?, doorID: ItemID?)","type":"init"},{"path":"\/documentation\/gnustoengine\/exit\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/blockedmessage","title":"var blockedMessage: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/exit\/destinationid","title":"var destinationID: LocationID","type":"property"},{"path":"\/documentation\/gnustoengine\/exit\/doorid","title":"let doorID: ItemID?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/exit\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/exit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/exit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/exit","title":"Exit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuse\/init(id:turns:action:)","title":"init(id: Fuse.ID, turns: Int, action: (GameEngine) async -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuse\/action","title":"var action: (GameEngine) async -> Void","type":"property"},{"path":"\/documentation\/gnustoengine\/fuse\/id-swift.property","title":"let id: Fuse.ID","type":"property"},{"path":"\/documentation\/gnustoengine\/fuse\/turnsremaining","title":"var turnsRemaining: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuse\/id-swift.typealias","title":"Fuse.ID","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/fuse\/==(_:_:)","title":"static func == (Fuse, Fuse) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/fuse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuse\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/fuse\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/fuse","title":"Fuse","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusedefinition\/==(_:_:)","title":"static func == (FuseDefinition, FuseDefinition) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusedefinition\/init(id:initialturns:action:)","title":"init(id: FuseID, initialTurns: Int, action: (GameEngine) async -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusedefinition\/action","title":"let action: (GameEngine) async -> Void","type":"property"},{"path":"\/documentation\/gnustoengine\/fusedefinition\/id","title":"let id: FuseID","type":"property"},{"path":"\/documentation\/gnustoengine\/fusedefinition\/initialturns","title":"let initialTurns: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusedefinition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fusedefinition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/fusedefinition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/fusedefinition","title":"FuseDefinition","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/_(_:_:)","title":"static func < (FuseID, FuseID) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/'...(_:)-1e029","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/'...(_:)-4udas","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/_(_:_:)-3zgg1","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/_=(_:_:)-4s0b3","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/fuseid\/_=(_:_:)-8uons","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/fuseid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/fuseid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/fuseid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/fuseid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/fuseid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/fuseid","title":"FuseID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gameconstants\/init(storytitle:introduction:release:maximumscore:deathmessage:)","title":"init(storyTitle: String, introduction: String, release: String, maximumScore: Int, deathMessage: String)","type":"init"}],"path":"\/documentation\/gnustoengine\/gameconstants","title":"GameConstants","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gamestate\/init(areas:player:vocabulary:activefuses:activedaemons:)","title":"init(areas: any AreaBlueprint.Type..., player: Player, vocabulary: Vocabulary?, activeFuses: [FuseID : Int], activeDaemons: DaemonID...)","type":"init"},{"path":"\/documentation\/gnustoengine\/gamestate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/gamestate\/init(locations:items:player:vocabulary:pronouns:activefuses:activedaemons:globalstate:changehistory:)","title":"init(locations: [Location], items: [Item], player: Player, vocabulary: Vocabulary?, pronouns: [String : Set<EntityReference>], activeFuses: [FuseID : Int], activeDaemons: Set<DaemonID>, globalState: [GlobalID : StateValue], changeHistory: [StateChange])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gamestate\/activedaemons","title":"var activeDaemons: Set<DaemonID>","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/activefuses","title":"var activeFuses: [FuseID : Int]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/changehistory","title":"var changeHistory: [StateChange]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/globalstate","title":"var globalState: [GlobalID : StateValue]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/items","title":"var items: [ItemID : Item]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/locations","title":"var locations: [LocationID : Location]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/player","title":"var player: Player","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/pronouns","title":"var pronouns: [String : Set<EntityReference>]","type":"property"},{"path":"\/documentation\/gnustoengine\/gamestate\/vocabulary","title":"let vocabulary: Vocabulary","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gamestate\/apply(_:)","title":"func apply(StateChange?...) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/gamestate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/gamestate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/gamestate","title":"GameState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/globalid\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/globalid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/globalid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"path":"\/documentation\/gnustoengine\/globalid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/gnustoengine\/globalid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/init(from:)-4re6s","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/globalid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/globalid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/globalid","title":"GlobalID","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/goactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/goactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/goactionhandler","title":"GoActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/insertactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/insertactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/insertactionhandler","title":"InsertActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/inventoryactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/inventoryactionhandler","title":"InventoryActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/item\/init(id:_:)","title":"init(id: ItemID, ItemAttribute...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/adjectives","title":"var adjectives: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/attributes","title":"var attributes: [AttributeID : StateValue]","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/capacity","title":"var capacity: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/id","title":"let id: ItemID","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/parent","title":"var parent: ParentEntity","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/item\/synonyms","title":"var synonyms: Set<String>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/hasflag(_:)","title":"func hasFlag(AttributeID) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/'...(_:)-5qjpa","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/'...(_:)-67f5b","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/_(_:_:)","title":"static func < (Item, Item) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/_(_:_:)-283gu","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/_=(_:_:)-60ql8","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/item\/_=(_:_:)-85n12","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/item\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/item\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/item\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/item","title":"Item","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemattribute\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/itemattribute\/init(id:rawvalue:)","title":"init(id: AttributeID, rawValue: StateValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemattribute\/id","title":"let id: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/rawvalue","title":"let rawValue: StateValue","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemattribute\/ischaracter","title":"static var isCharacter: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isclimbable","title":"static var isClimbable: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/iscombatready","title":"static var isCombatReady: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/iscontainer","title":"static var isContainer: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isdevice","title":"static var isDevice: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isdoor","title":"static var isDoor: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isedible","title":"static var isEdible: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isequippable","title":"static var isEquippable: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isfemale","title":"static var isFemale: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isflammable","title":"static var isFlammable: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isinvisible","title":"static var isInvisible: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/iskey","title":"static var isKey: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/islightsource","title":"static var isLightSource: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/islit","title":"static var isLit: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/islockable","title":"static var isLockable: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/islocked","title":"static var isLocked: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/ison","title":"static var isOn: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isopen","title":"static var isOpen: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isopenable","title":"static var isOpenable: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isperson","title":"static var isPerson: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isplural","title":"static var isPlural: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isreadable","title":"static var isReadable: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isscenery","title":"static var isScenery: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/issearchable","title":"static var isSearchable: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/issurface","title":"static var isSurface: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/istakable","title":"static var isTakable: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/istool","title":"static var isTool: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/istouched","title":"static var isTouched: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/istransparent","title":"static var isTransparent: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isvehicle","title":"static var isVehicle: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isweapon","title":"static var isWeapon: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/iswearable","title":"static var isWearable: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/isworn","title":"static var isWorn: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/requirestrytake","title":"static var requiresTryTake: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/startswithvowel","title":"static var startsWithVowel: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/suppressarticle","title":"static var suppressArticle: ItemAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/suppressdescription","title":"static var suppressDescription: ItemAttribute","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemattribute\/adjectives(_:)","title":"static func adjectives(String...) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/capacity(_:)","title":"static func capacity(Int) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/description(_:)","title":"static func description(String) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/firstdescription(_:)","title":"static func firstDescription(String) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/in(_:)","title":"static func `in`(ParentEntity) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/lockkey(_:)","title":"static func lockKey(ItemID) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/name(_:)","title":"static func name(String) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/readtext(_:)","title":"static func readText(String) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/readwhileheldtext(_:)","title":"static func readWhileHeldText(String) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/shortdescription(_:)","title":"static func shortDescription(String) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/size(_:)","title":"static func size(Int) -> ItemAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/synonyms(_:)","title":"static func synonyms(String...) -> ItemAttribute","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemattribute\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/exits","title":"var exits: [Direction : Exit]?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/itemid","title":"var itemID: ItemID?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/itemids","title":"var itemIDs: Set<ItemID>?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/locationid","title":"var locationID: LocationID?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/parententity","title":"var parentEntity: ParentEntity?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/itemattribute\/strings","title":"var strings: Set<String>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemattribute\/get()-2x6ci","title":"func get() -> [Direction : Exit]?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/get()-72gco","title":"func get() -> ItemID?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/get()-738n2","title":"func get() -> ParentEntity?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/get()-7jctu","title":"func get() -> Set<ItemID>?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/get()-815ye","title":"func get() -> String?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/get()-86ync","title":"func get() -> Set<String>?","type":"method"},{"path":"\/documentation\/gnustoengine\/itemattribute\/get()-8c7se","title":"func get() -> LocationID?","type":"method"}],"path":"\/documentation\/gnustoengine\/itemattribute\/attribute-implementations","title":"Attribute Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itemattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/itemattribute","title":"ItemAttribute","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemeventhandler\/init(_:)","title":"init((GameEngine, ItemEvent) async throws -> ActionResult?)","type":"init"}],"path":"\/documentation\/gnustoengine\/itemeventhandler","title":"ItemEventHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/itemid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/player","title":"static let player: ItemID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/'...(_:)-6d8c","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/'...(_:)-94dqi","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/_(_:_:)","title":"static func < (ItemID, ItemID) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/_(_:_:)-17005","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/_=(_:_:)-46sum","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/itemid\/_=(_:_:)-4ylnj","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itemid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/itemid\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/itemid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/itemid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/itemid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"path":"\/documentation\/gnustoengine\/itemid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/gnustoengine\/itemid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/itemid","title":"ItemID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/location\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/location\/init(id:_:)","title":"init(id: LocationID, LocationAttribute...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/location\/attributes","title":"var attributes: [AttributeID : StateValue]","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/exits","title":"var exits: [Direction : Exit]","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/id","title":"let id: LocationID","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/localglobals","title":"var localGlobals: Set<ItemID>","type":"property"},{"path":"\/documentation\/gnustoengine\/location\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/location\/hasflag(_:)","title":"func hasFlag(AttributeID) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/location\/isinherentlylit()","title":"func isInherentlyLit() -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/location\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/location","title":"Location","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationattribute\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/locationattribute\/init(id:rawvalue:)","title":"init(id: AttributeID, rawValue: StateValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationattribute\/id","title":"let id: AttributeID","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/rawvalue","title":"let rawValue: StateValue","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationattribute\/breaksmagic","title":"static var breaksMagic: LocationAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/inherentlylit","title":"static var inherentlyLit: LocationAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/ischanged","title":"static var isChanged: LocationAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/island","title":"static var isLand: LocationAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/isoutside","title":"static var isOutside: LocationAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/issacred","title":"static var isSacred: LocationAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/isvisited","title":"static var isVisited: LocationAttribute","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/iswater","title":"static var isWater: LocationAttribute","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationattribute\/description(_:)","title":"static func description(String) -> LocationAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/locationattribute\/exits(_:)","title":"static func exits([Direction : Exit]) -> LocationAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/locationattribute\/localglobals(_:)","title":"static func localGlobals(ItemID...) -> LocationAttribute","type":"method"},{"path":"\/documentation\/gnustoengine\/locationattribute\/name(_:)","title":"static func name(String) -> LocationAttribute","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationattribute\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/exits","title":"var exits: [Direction : Exit]?","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/itemid","title":"var itemID: ItemID?","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/itemids","title":"var itemIDs: Set<ItemID>?","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/locationid","title":"var locationID: LocationID?","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/parententity","title":"var parentEntity: ParentEntity?","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/locationattribute\/strings","title":"var strings: Set<String>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationattribute\/get()-1p701","title":"func get() -> ParentEntity?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationattribute\/get()-3dpn0","title":"func get() -> ItemID?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationattribute\/get()-3iub7","title":"func get() -> Set<ItemID>?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationattribute\/get()-4n4o5","title":"func get() -> String?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationattribute\/get()-4qe69","title":"func get() -> [Direction : Exit]?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationattribute\/get()-5b70j","title":"func get() -> LocationID?","type":"method"},{"path":"\/documentation\/gnustoengine\/locationattribute\/get()-7o1ep","title":"func get() -> Set<String>?","type":"method"}],"path":"\/documentation\/gnustoengine\/locationattribute\/attribute-implementations","title":"Attribute Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/locationattribute","title":"LocationAttribute","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationeventhandler\/init(_:)","title":"init((GameEngine, LocationEvent) async throws -> ActionResult?)","type":"init"}],"path":"\/documentation\/gnustoengine\/locationeventhandler","title":"LocationEventHandler","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/_(_:_:)","title":"static func < (LocationID, LocationID) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/locationid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/locationid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/'...(_:)-5hk2b","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/'...(_:)-9fipa","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/_(_:_:)-44bgx","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/_=(_:_:)-5n5e8","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/locationid\/_=(_:_:)-6tp17","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/locationid\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/locationid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/locationid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/locationid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/locationid","title":"LocationID","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lockactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/lockactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/lockactionhandler","title":"LockActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/lookactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/lookactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/lookactionhandler","title":"LookActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/objectcondition\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/objectcondition\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/objectcondition\/allowsmultiple","title":"static let allowsMultiple: ObjectCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/objectcondition\/container","title":"static let container: ObjectCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/objectcondition\/held","title":"static let held: ObjectCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/objectcondition\/inroom","title":"static let inRoom: ObjectCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/objectcondition\/none","title":"static let none: ObjectCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/objectcondition\/onground","title":"static let onGround: ObjectCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/objectcondition\/person","title":"static let person: ObjectCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/objectcondition\/worn","title":"static let worn: ObjectCondition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/objectcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/objectcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/objectcondition\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/objectcondition\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gnustoengine\/objectcondition\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/objectcondition\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gnustoengine\/objectcondition\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/objectcondition\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/objectcondition\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gnustoengine\/objectcondition\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gnustoengine\/objectcondition\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/objectcondition","title":"ObjectCondition","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/openactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/openactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/openactionhandler","title":"OpenActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/player\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/player\/init(in:carryingcapacity:health:moves:score:)","title":"init(in: LocationID, carryingCapacity: Int, health: Int, moves: Int, score: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/player\/carryingcapacity","title":"var carryingCapacity: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/player\/currentlocationid","title":"var currentLocationID: LocationID","type":"property"},{"path":"\/documentation\/gnustoengine\/player\/health","title":"var health: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/player\/moves","title":"var moves: Int","type":"property"},{"path":"\/documentation\/gnustoengine\/player\/score","title":"var score: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/player\/currentinventoryweight(allitems:)","title":"func currentInventoryWeight(allItems: [ItemID : Item]) -> Int","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/player\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/player\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/player","title":"Player","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/putonactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/putonactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/putonactionhandler","title":"PutOnActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/readactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/readactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/readactionhandler","title":"ReadActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/removeactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/removeactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/removeactionhandler","title":"RemoveActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scoperesolver\/init(engine:)","title":"init(engine: GameEngine)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/scoperesolver\/islocationlit(locationid:)","title":"func isLocationLit(locationID: LocationID) async -> Bool","type":"method"},{"path":"\/documentation\/gnustoengine\/scoperesolver\/itemsreachablebyplayer()","title":"func itemsReachableByPlayer() async -> Set<ItemID>","type":"method"},{"path":"\/documentation\/gnustoengine\/scoperesolver\/visibleitemsin(locationid:)","title":"func visibleItemsIn(locationID: LocationID) async -> [ItemID]","type":"method"}],"path":"\/documentation\/gnustoengine\/scoperesolver","title":"ScopeResolver","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffect\/init(type:targetid:parameters:)","title":"init(type: SideEffectType, targetID: EntityID, parameters: [String : StateValue])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffect\/parameters","title":"let parameters: [String : StateValue]","type":"property"},{"path":"\/documentation\/gnustoengine\/sideeffect\/targetid","title":"let targetID: EntityID","type":"property"},{"path":"\/documentation\/gnustoengine\/sideeffect\/type","title":"let type: SideEffectType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/sideeffect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/sideeffect","title":"SideEffect","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardparser\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:gamestate:)","title":"func parse(input: String, vocabulary: Vocabulary, gameState: GameState) -> Result<Command, ParseError>","type":"method"}],"path":"\/documentation\/gnustoengine\/standardparser","title":"StandardParser","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statechange\/init(entityid:attributekey:oldvalue:newvalue:)","title":"init(entityID: EntityID, attributeKey: AttributeKey, oldValue: StateValue?, newValue: StateValue)","type":"init"},{"path":"\/documentation\/gnustoengine\/statechange\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statechange\/attributekey","title":"let attributeKey: AttributeKey","type":"property"},{"path":"\/documentation\/gnustoengine\/statechange\/created","title":"let created: Date","type":"property"},{"path":"\/documentation\/gnustoengine\/statechange\/entityid","title":"let entityID: EntityID","type":"property"},{"path":"\/documentation\/gnustoengine\/statechange\/newvalue","title":"let newValue: StateValue","type":"property"},{"path":"\/documentation\/gnustoengine\/statechange\/oldvalue","title":"let oldValue: StateValue?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statechange\/'...(_:)-3k0bi","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/statechange\/'...(_:)-4rd5f","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/statechange\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/statechange\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/statechange\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/statechange\/_(_:_:)","title":"static func < (StateChange, StateChange) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/statechange\/_(_:_:)-7it8d","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/statechange\/_=(_:_:)-3kx43","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/statechange\/_=(_:_:)-6khkw","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/statechange\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statechange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/statechange\/==(_:_:)","title":"static func == (StateChange, StateChange) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/statechange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/statechange","title":"StateChange","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/init(_:)","title":"init(SyntaxTokenType...)","type":"init"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/init(pattern:directobjectconditions:indirectobjectconditions:requiredpreposition:)","title":"init(pattern: [SyntaxTokenType], directObjectConditions: ObjectCondition, indirectObjectConditions: ObjectCondition, requiredPreposition: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/directobjectconditions","title":"let directObjectConditions: ObjectCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/indirectobjectconditions","title":"let indirectObjectConditions: ObjectCondition","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/pattern","title":"let pattern: [SyntaxTokenType]","type":"property"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/requiredpreposition","title":"let requiredPreposition: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/syntaxrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/syntaxrule","title":"SyntaxRule","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/takeactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/takeactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/takeactionhandler","title":"TakeActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/thinkaboutactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/thinkaboutactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/thinkaboutactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/thinkaboutactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/thinkaboutactionhandler","title":"ThinkAboutActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/touchactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/touchactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/touchactionhandler","title":"TouchActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/turnoffactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/turnoffactionhandler","title":"TurnOffActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/turnonactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/turnonactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/turnonactionhandler","title":"TurnOnActionHandler","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/unlockactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/unlockactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/unlockactionhandler","title":"UnlockActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/verb\/init(id:synonyms:syntax:requireslight:)","title":"init(id: VerbID, synonyms: String..., syntax: [SyntaxRule], requiresLight: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/id","title":"let id: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/requireslight","title":"var requiresLight: Bool","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/synonyms","title":"var synonyms: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/verb\/syntax","title":"var syntax: [SyntaxRule]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verb\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/verb\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/verb","title":"Verb","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/_(_:_:)","title":"static func < (VerbID, VerbID) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/gnustoengine\/verbid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/verbid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/brief","title":"static let brief: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/close","title":"static let close: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/debug","title":"static let debug: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/drop","title":"static let drop: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/examine","title":"static let examine: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/go","title":"static let go: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/help","title":"static let help: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/insert","title":"static let insert: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/inventory","title":"static let inventory: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/listen","title":"static let listen: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/lock","title":"static let lock: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/look","title":"static let look: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/open","title":"static let open: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/puton","title":"static let putOn: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/quit","title":"static let quit: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/read","title":"static let read: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/remove","title":"static let remove: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/restore","title":"static let restore: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/save","title":"static let save: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/score","title":"static let score: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/smell","title":"static let smell: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/take","title":"static let take: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/taste","title":"static let taste: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/thinkabout","title":"static let thinkAbout: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/touch","title":"static let touch: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/turnoff","title":"static let turnOff: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/turnon","title":"static let turnOn: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/unlock","title":"static let unlock: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/verbose","title":"static let verbose: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/wait","title":"static let wait: VerbID","type":"property"},{"path":"\/documentation\/gnustoengine\/verbid\/wear","title":"static let wear: VerbID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/'...(_:)-67quf","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verbid\/'...(_:)-9xr91","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verbid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verbid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verbid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/verbid\/_(_:_:)-9eazy","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/verbid\/_=(_:_:)-16ti5","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/verbid\/_=(_:_:)-okzm","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/verbid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/verbid\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/verbid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/verbid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/verbid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/verbid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/verbid\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/verbid","title":"VerbID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/gnustoengine\/vocabulary\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/gnustoengine\/vocabulary\/init(verbdefinitions:items:adjectives:locationnames:directions:noisewords:prepositions:pronouns:)","title":"init(verbDefinitions: [VerbID : Verb], items: [String : Set<ItemID>], adjectives: [String : Set<ItemID>], locationNames: [String : LocationID], directions: [String : Direction], noiseWords: Set<String>, prepositions: Set<String>, pronouns: Set<String>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/adjectives","title":"var adjectives: [String : Set<ItemID>]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/directions","title":"var directions: [String : Direction]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/items","title":"var items: [String : Set<ItemID>]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/locationnames","title":"var locationNames: [String : LocationID]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/noisewords","title":"var noiseWords: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/prepositions","title":"var prepositions: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/pronouns","title":"var pronouns: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/verbdefinitions","title":"var verbDefinitions: [VerbID : Verb]","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/verbsynonyms","title":"var verbSynonyms: [String : Set<VerbID>]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/add(item:)","title":"func add(item: Item)","type":"method"},{"path":"\/documentation\/gnustoengine\/vocabulary\/add(location:)","title":"func add(location: Location)","type":"method"},{"path":"\/documentation\/gnustoengine\/vocabulary\/add(verb:)","title":"func add(verb: Verb)","type":"method"},{"path":"\/documentation\/gnustoengine\/vocabulary\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/vocabulary\/ispronoun(_:)","title":"func isPronoun(String) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultnoisewords","title":"static let defaultNoiseWords: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultprepositions","title":"static let defaultPrepositions: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultpronouns","title":"static let defaultPronouns: Set<String>","type":"property"},{"path":"\/documentation\/gnustoengine\/vocabulary\/defaultverbs","title":"static let defaultVerbs: [Verb]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/build(items:locations:verbs:usedefaultverbs:)","title":"static func build(items: [Item], locations: [Location], verbs: [Verb], useDefaultVerbs: Bool) -> Vocabulary","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/vocabulary\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/vocabulary\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/vocabulary","title":"Vocabulary","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/process(context:)","title":"func process(context: ActionContext) async throws -> ActionResult","type":"method"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/validate(context:)","title":"func validate(context: ActionContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/wearactionhandler\/postprocess(context:result:)","title":"func postProcess(context: ActionContext, result: ActionResult) async throws","type":"method"}],"path":"\/documentation\/gnustoengine\/wearactionhandler\/actionhandler-implementations","title":"ActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/wearactionhandler","title":"WearActionHandler","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresponse\/containerisclosed(_:)","title":"case containerIsClosed(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/containerisopen(_:)","title":"case containerIsOpen(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/directionisblocked(_:)","title":"case directionIsBlocked(String?)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/internalengineerror(_:)","title":"case internalEngineError(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/invaliddirection","title":"case invalidDirection","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/invalidindirectobject(_:)","title":"case invalidIndirectObject(String?)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/invalidvalue(_:)","title":"case invalidValue(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemalreadyclosed(_:)","title":"case itemAlreadyClosed(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemalreadyopen(_:)","title":"case itemAlreadyOpen(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemisalreadyworn(_:)","title":"case itemIsAlreadyWorn(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemislocked(_:)","title":"case itemIsLocked(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemisnotworn(_:)","title":"case itemIsNotWorn(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemisunlocked(_:)","title":"case itemIsUnlocked(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotaccessible(_:)","title":"case itemNotAccessible(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotclosable(_:)","title":"case itemNotClosable(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotdroppable(_:)","title":"case itemNotDroppable(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotedible(_:)","title":"case itemNotEdible(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotheld(_:)","title":"case itemNotHeld(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotincontainer(item:container:)","title":"case itemNotInContainer(item: ItemID, container: ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotlockable(_:)","title":"case itemNotLockable(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotonsurface(item:surface:)","title":"case itemNotOnSurface(item: ItemID, surface: ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotopenable(_:)","title":"case itemNotOpenable(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotreadable(_:)","title":"case itemNotReadable(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotremovable(_:)","title":"case itemNotRemovable(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnottakable(_:)","title":"case itemNotTakable(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotunlockable(_:)","title":"case itemNotUnlockable(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemnotwearable(_:)","title":"case itemNotWearable(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/itemtoolargeforcontainer(item:container:)","title":"case itemTooLargeForContainer(item: ItemID, container: ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/playercannotcarrymore","title":"case playerCannotCarryMore","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/prerequisitenotmet(_:)","title":"case prerequisiteNotMet(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/roomisdark","title":"case roomIsDark","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/statevalidationfailed(change:actualoldvalue:)","title":"case stateValidationFailed(change: StateChange, actualOldValue: StateValue?)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/targetisnotacontainer(_:)","title":"case targetIsNotAContainer(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/targetisnotasurface(_:)","title":"case targetIsNotASurface(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/toolmissing(_:)","title":"case toolMissing(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/unknownentity(_:)","title":"case unknownEntity(EntityReference)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/unknownverb(_:)","title":"case unknownVerb(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/actionresponse\/wrongkey(keyid:lockid:)","title":"case wrongKey(keyID: ItemID, lockID: ItemID)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/actionresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/actionresponse\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/actionresponse\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/actionresponse","title":"ActionResponse","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributekey\/addactivedaemon(daemonid:)","title":"case addActiveDaemon(daemonID: DaemonID)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/addactivefuse(fuseid:initialturns:)","title":"case addActiveFuse(fuseID: FuseID, initialTurns: Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/clearflag(_:)","title":"case clearFlag(GlobalID)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/exits","title":"case exits","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/globalstate(key:)","title":"case globalState(key: GlobalID)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/itemadjectives","title":"case itemAdjectives","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/itemattribute(_:)","title":"case itemAttribute(AttributeID)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/itemcapacity","title":"case itemCapacity","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/itemname","title":"case itemName","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/itemparent","title":"case itemParent","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/itemsize","title":"case itemSize","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/itemsynonyms","title":"case itemSynonyms","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/itemvalue","title":"case itemValue","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/locationattribute(_:)","title":"case locationAttribute(AttributeID)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/locationdescription","title":"case locationDescription","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/locationname","title":"case locationName","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/playerhealth","title":"case playerHealth","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/playerinventorylimit","title":"case playerInventoryLimit","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/playerlocation","title":"case playerLocation","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/playermoves","title":"case playerMoves","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/playerscore","title":"case playerScore","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/playerstrength","title":"case playerStrength","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/pronounreference(pronoun:)","title":"case pronounReference(pronoun: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/removeactivedaemon(daemonid:)","title":"case removeActiveDaemon(daemonID: DaemonID)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/removeactivefuse(fuseid:)","title":"case removeActiveFuse(fuseID: FuseID)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/setflag(_:)","title":"case setFlag(GlobalID)","type":"case"},{"path":"\/documentation\/gnustoengine\/attributekey\/updatefuseturns(fuseid:)","title":"case updateFuseTurns(fuseID: FuseID)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributekey\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributekey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/attributekey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/attributekey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/attributekey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/attributekey","title":"AttributeKey","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/down","title":"case down","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/east","title":"case east","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/inside","title":"case inside","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/north","title":"case north","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/northeast","title":"case northeast","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/northwest","title":"case northwest","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/outside","title":"case outside","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/south","title":"case south","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/southeast","title":"case southeast","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/southwest","title":"case southwest","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/up","title":"case up","type":"case"},{"path":"\/documentation\/gnustoengine\/direction\/west","title":"case west","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/'...(_:)-6yqah","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/'...(_:)-8hf7m","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/_(_:_:)","title":"static func < (Direction, Direction) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/_(_:_:)-2w017","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/_=(_:_:)-1n481","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/gnustoengine\/direction\/_=(_:_:)-819xq","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/direction\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/direction\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/direction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/direction\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/direction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/direction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/direction","title":"Direction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityid\/daemon(_:)","title":"case daemon(DaemonID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/fuse(_:)","title":"case fuse(FuseID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/global","title":"case global","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/item(_:)","title":"case item(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/location(_:)","title":"case location(LocationID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityid\/player","title":"case player","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/entityid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/entityid","title":"EntityID","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityreference\/item(_:)","title":"case item(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityreference\/location(_:)","title":"case location(LocationID)","type":"case"},{"path":"\/documentation\/gnustoengine\/entityreference\/player","title":"case player","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityreference\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityreference\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/entityreference\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityreference\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/gnustoengine\/entityreference\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/entityreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/entityreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/entityreference","title":"EntityReference","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/itemevent\/afterturn(_:)","title":"case afterTurn(Command)","type":"case"},{"path":"\/documentation\/gnustoengine\/itemevent\/beforeturn(_:)","title":"case beforeTurn(Command)","type":"case"}],"path":"\/documentation\/gnustoengine\/itemevent","title":"ItemEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/locationevent\/afterturn(_:)","title":"case afterTurn(Command)","type":"case"},{"path":"\/documentation\/gnustoengine\/locationevent\/beforeturn(_:)","title":"case beforeTurn(Command)","type":"case"},{"path":"\/documentation\/gnustoengine\/locationevent\/onenter","title":"case onEnter","type":"case"}],"path":"\/documentation\/gnustoengine\/locationevent","title":"LocationEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parententity\/item(_:)","title":"case item(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/parententity\/location(_:)","title":"case location(LocationID)","type":"case"},{"path":"\/documentation\/gnustoengine\/parententity\/nowhere","title":"case nowhere","type":"case"},{"path":"\/documentation\/gnustoengine\/parententity\/player","title":"case player","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parententity\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parententity\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/parententity\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parententity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/parententity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/parententity","title":"ParentEntity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parseerror\/ambiguity(_:)","title":"case ambiguity(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/ambiguouspronounreference(_:)","title":"case ambiguousPronounReference(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/badgrammar(_:)","title":"case badGrammar(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/emptyinput","title":"case emptyInput","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/internalerror(_:)","title":"case internalError(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/itemnotinscope(noun:)","title":"case itemNotInScope(noun: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/modifiermismatch(noun:modifiers:)","title":"case modifierMismatch(noun: String, modifiers: [String])","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/pronounnotset(pronoun:)","title":"case pronounNotSet(pronoun: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/pronounreferstooutofscopeitem(pronoun:)","title":"case pronounRefersToOutOfScopeItem(pronoun: String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/unknownnoun(_:)","title":"case unknownNoun(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/parseerror\/unknownverb(_:)","title":"case unknownVerb(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/parseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/parseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/parseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/parseerror","title":"ParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/rundaemon","title":"case runDaemon","type":"case"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/scheduleevent","title":"case scheduleEvent","type":"case"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/startfuse","title":"case startFuse","type":"case"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/stopdaemon","title":"case stopDaemon","type":"case"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/stopfuse","title":"case stopFuse","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/sideeffecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/gnustoengine\/sideeffecttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/gnustoengine\/sideeffecttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/sideeffecttype","title":"SideEffectType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/bool(_:)","title":"case bool(Bool)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/entityreferenceset(_:)","title":"case entityReferenceSet(Set<EntityReference>?)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/exits(_:)","title":"case exits([Direction : Exit])","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/int(_:)","title":"case int(Int)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/itemid(_:)","title":"case itemID(ItemID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/itemidset(_:)","title":"case itemIDSet(Set<ItemID>)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/locationid(_:)","title":"case locationID(LocationID)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/parententity(_:)","title":"case parentEntity(ParentEntity)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/stringset(_:)","title":"case stringSet(Set<String>)","type":"case"},{"path":"\/documentation\/gnustoengine\/statevalue\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/tobool","title":"var toBool: Bool?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toentityreferenceset","title":"var toEntityReferenceSet: Set<EntityReference>?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toint","title":"var toInt: Int?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toitemid","title":"var toItemID: ItemID?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toitemids","title":"var toItemIDs: Set<ItemID>?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tolocationexits","title":"var toLocationExits: [Direction : Exit]?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tolocationid","title":"var toLocationID: LocationID?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/toparententity","title":"var toParentEntity: ParentEntity?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tostring","title":"var toString: String?","type":"property"},{"path":"\/documentation\/gnustoengine\/statevalue\/tostrings","title":"var toStrings: Set<String>?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/statevalue\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/statevalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(arrayliteral:)","title":"init(arrayLiteral: StateValue.ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/arrayliteralelement","title":"StateValue.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(booleanliteral:)","title":"init(booleanLiteral: BooleanLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"path":"\/documentation\/gnustoengine\/statevalue\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/gnustoengine\/statevalue\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/statevalue","title":"StateValue","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/==(_:_:)","title":"static func == (SyntaxTokenType, SyntaxTokenType) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/directobject","title":"case directObject","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/direction","title":"case direction","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/indirectobject","title":"case indirectObject","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/particle(_:)","title":"case particle(String)","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/preposition","title":"case preposition","type":"case"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/verb","title":"case verb","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/syntaxtokentype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/syntaxtokentype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/syntaxtokentype","title":"SyntaxTokenType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/textstyle\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/emphasis","title":"case emphasis","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/input","title":"case input","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/preformatted","title":"case preformatted","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/statusline","title":"case statusLine","type":"case"},{"path":"\/documentation\/gnustoengine\/textstyle\/strong","title":"case strong","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/textstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gnustoengine\/textstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/textstyle","title":"TextStyle","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gnustoengine\/swift\/dictionary\/customdumpdescription","title":"var customDumpDescription: String","type":"property"}],"path":"\/documentation\/gnustoengine\/swift\/dictionary\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/gnustoengine\/swift\/dictionary","title":"Dictionary","type":"extension"}],"path":"\/documentation\/gnustoengine\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/gnustoengine","title":"GnustoEngine","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}