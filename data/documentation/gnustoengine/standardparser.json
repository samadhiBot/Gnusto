{"abstract":[{"text":"A standard, ZIL-inspired implementation of the ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" protocol, designed to","type":"text"},{"text":" ","type":"text"},{"text":"interpret player input in a manner reminiscent of classic text-adventure games.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"relationshipsSections":[{"identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","doc:\/\/GnustoEngine\/s8SendableP","doc:\/\/GnustoEngine\/s16SendableMetatypeP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"StandardParser"},{"text":" takes a raw input string from the player and attempts to","type":"text"},{"text":" ","type":"text"},{"text":"transform it into a structured ","type":"text"},{"type":"codeVoice","code":"Command"},{"text":" object that the ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"text":" can execute.","type":"text"},{"text":" ","type":"text"},{"text":"If it cannot understand the input, it returns a descriptive ","type":"text"},{"type":"codeVoice","code":"ParseError"},{"text":".","type":"text"}]},{"anchor":"Parsing-Process-Overview","level":3,"text":"Parsing Process Overview:","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Tokenization & Normalization:","type":"text"}]},{"text":" The input string is broken into individual words (tokens),","type":"text"},{"text":" ","type":"text"},{"text":"and typically converted to lowercase for case-insensitive matching.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Noise Word Removal:"}]},{"type":"text","text":" Common, grammatically necessary but semantically unimportant"},{"type":"text","text":" "},{"type":"text","text":"words (e.g., “the”, “a”, “to”) are filtered out. These are defined in the"},{"type":"text","text":" "},{"type":"text","text":"game’s "},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Adverb Removal:","type":"text"}],"type":"strong"},{"text":" Words that are adverbs (e.g., “quickly”, “slowly”) are filtered out.","type":"text"},{"text":" ","type":"text"},{"text":"These are defined in the game’s ","type":"text"},{"code":"Vocabulary","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Verb Identification:","type":"text"}]},{"type":"text","text":" The parser identifies the primary action word (verb)."},{"type":"text","text":" "},{"type":"text","text":"It can recognize multi-word verb synonyms (e.g., “pick up” for “take”) if"},{"type":"text","text":" "},{"type":"text","text":"they are defined in the "},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Syntax Rule Matching:","type":"text"}],"type":"strong"},{"text":" The sequence of significant tokens is compared against","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"SyntaxRule","type":"codeVoice"},{"text":"s associated with the identified verb (also from ","type":"text"},{"code":"Vocabulary","type":"codeVoice"},{"text":").","type":"text"},{"text":" ","type":"text"},{"text":"Each rule defines a valid grammatical pattern (e.g., VERB-DIRECT_OBJECT,","type":"text"},{"text":" ","type":"text"},{"text":"VERB-DIRECT_OBJECT-PREPOSITION-INDIRECT_OBJECT).","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Object Resolution:","type":"text"}]},{"type":"text","text":" Noun phrases are identified as potential direct and indirect"},{"type":"text","text":" "},{"type":"text","text":"objects. This involves:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Looking up nouns in the "},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Considering their context within the ","type":"text"},{"type":"codeVoice","code":"GameState"},{"text":" (e.g., what items are","type":"text"},{"text":" ","type":"text"},{"text":"currently visible or held by the player, what pronouns like “it” or “them”","type":"text"},{"text":" ","type":"text"},{"text":"currently refer to).","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Applying ","type":"text"},{"code":"ObjectCondition","type":"codeVoice"},{"text":"s specified by the matched ","type":"text"},{"code":"SyntaxRule","type":"codeVoice"},{"text":" (e.g.,","type":"text"},{"text":" ","type":"text"},{"text":"an object might need to be ","type":"text"},{"code":".held","type":"codeVoice"},{"text":" or be a ","type":"text"},{"code":".container","type":"codeVoice"},{"text":").","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Attempting to resolve ambiguities (e.g., if “take lamp” is typed and multiple"},{"type":"text","text":" "},{"type":"text","text":"lamps are present)."}]}]}],"type":"unorderedList"}]}],"type":"orderedList"},{"anchor":"For-Game-Developers","level":3,"text":"For Game Developers:","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Game developers typically do not need to call "},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":" methods directly."},{"type":"text","text":" "},{"type":"text","text":"An instance of a "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" (like "},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":") is provided to the "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"during initialization, and the engine uses it internally to process player input."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To influence parsing behavior, game developers should focus on:"}]},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Defining a comprehensive "},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"text","text":" This includes all recognizable verbs"},{"type":"text","text":" "},{"type":"text","text":"(with their synonyms and "},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s), nouns (items, characters, with their"},{"type":"text","text":" "},{"type":"text","text":"adjectives and properties), prepositions, directions, and noise words."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Crafting clear "},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s:"}]},{"text":" Ensure that the grammatical patterns defined for","type":"text"},{"text":" ","type":"text"},{"text":"each verb accurately reflect how players are expected to phrase commands.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Setting appropriate "},{"type":"codeVoice","code":"ObjectCondition"},{"type":"text","text":"s:"}]},{"type":"text","text":" Use these within "},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s to help"},{"type":"text","text":" "},{"type":"text","text":"the parser disambiguate objects and ensure actions are contextually valid."},{"type":"text","text":" "},{"type":"text","text":"Result of attempting to match a syntax rule against input tokens."}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/gnustoengine\/standardparser"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"GnustoEngine"}],"roleHeading":"Structure","navigatorTitle":[{"text":"StandardParser","kind":"identifier"}],"externalID":"s:12GnustoEngine14StandardParserV","title":"StandardParser","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardParser"}],"role":"symbol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:engine:)"]}],"references":{"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","url":"\/documentation\/gnustoengine","title":"GnustoEngine"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"type":"topic","title":"StandardParser","role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","kind":"symbol","url":"\/documentation\/gnustoengine\/standardparser","abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" protocol, designed to"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"navigatorTitle":[{"text":"StandardParser","kind":"identifier"}]},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","url":"\/documentation\/gnustoengine\/standardparser\/init()","abstract":[{"type":"text","text":"Initializes a new "},{"type":"codeVoice","code":"StandardParser"},{"type":"text","text":" instance."}],"type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()","title":"init()","kind":"symbol"},"doc://GnustoEngine/s8SendableP":{"identifier":"doc:\/\/GnustoEngine\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://GnustoEngine/s16SendableMetatypeP":{"identifier":"doc:\/\/GnustoEngine\/s16SendableMetatypeP","title":"Swift.SendableMetatype","type":"unresolvable"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:engine:)":{"abstract":[{"type":"text","text":"Parses a raw input string from the player into a structured "},{"code":"Command","type":"codeVoice"},{"text":" or a ","type":"text"},{"code":"ParseError","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:engine:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"input","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"vocabulary","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Vocabulary","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10VocabularyV"},{"text":", ","kind":"text"},{"text":"engine","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GameEngine","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine04GameB0C"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Command","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"text":", ","kind":"text"},{"text":"ParseError","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10ParseErrorO"},{"text":">","kind":"text"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:engine:)","type":"topic","title":"parse(input:vocabulary:engine:)"},"doc://GnustoEngine/documentation/GnustoEngine/Parser":{"abstract":[{"text":"Defines the interface for turning raw player input strings into structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" ","type":"text"},{"text":"objects that the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"text":" can understand and process.","type":"text"}],"kind":"symbol","url":"\/documentation\/gnustoengine\/parser","type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]}}}