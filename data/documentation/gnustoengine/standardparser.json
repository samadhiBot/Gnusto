{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/standardparser"]}],"metadata":{"role":"symbol","externalID":"s:12GnustoEngine14StandardParserV","title":"StandardParser","modules":[{"name":"GnustoEngine"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"StandardParser"}],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StandardParser","kind":"identifier"}]},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","interfaceLanguage":"swift"},"abstract":[{"text":"A standard, ZIL-inspired implementation of the ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" protocol, designed to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()"],"generated":true},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)"]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","doc:\/\/GnustoEngine\/s8SendableP"],"title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StandardParser"}]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"StandardParser"},{"type":"text","text":" takes a raw input string from the player and attempts to"},{"type":"text","text":" "},{"text":"transform it into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" object that the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" can execute."},{"type":"text","text":" "},{"type":"text","text":"If it cannot understand the input, it returns a descriptive "},{"code":"ParseError","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","anchor":"Parsing-Process-Overview","text":"Parsing Process Overview:","level":3},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Tokenization & Normalization:"}]},{"type":"text","text":" The input string is broken into individual words (tokens),"},{"text":" ","type":"text"},{"type":"text","text":"and typically converted to lowercase for case-insensitive matching."}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Noise Word Removal:"}],"type":"strong"},{"text":" Common, grammatically necessary but semantically unimportant","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"words (e.g., “the”, “a”, “to”) are filtered out. These are defined in the"},{"type":"text","text":" "},{"text":"game’s ","type":"text"},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Verb Identification:"}],"type":"strong"},{"text":" The parser identifies the primary action word (verb).","type":"text"},{"text":" ","type":"text"},{"text":"It can recognize multi-word verb synonyms (e.g., “pick up” for “take”) if","type":"text"},{"type":"text","text":" "},{"type":"text","text":"they are defined in the "},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Syntax Rule Matching:"}]},{"type":"text","text":" The sequence of significant tokens is compared against"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"code":"SyntaxRule","type":"codeVoice"},{"type":"text","text":"s associated with the identified verb (also from "},{"code":"Vocabulary","type":"codeVoice"},{"text":").","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each rule defines a valid grammatical pattern (e.g., VERB-DIRECT_OBJECT,"},{"type":"text","text":" "},{"type":"text","text":"VERB-DIRECT_OBJECT-PREPOSITION-INDIRECT_OBJECT)."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Object Resolution:"}]},{"text":" Noun phrases are identified as potential direct and indirect","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"objects. This involves:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Looking up nouns in the ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Considering their context within the ","type":"text"},{"code":"GameState","type":"codeVoice"},{"text":" (e.g., what items are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"currently visible or held by the player, what pronouns like “it” or “them”"},{"type":"text","text":" "},{"type":"text","text":"currently refer to)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Applying "},{"type":"codeVoice","code":"ObjectCondition"},{"type":"text","text":"s specified by the matched "},{"code":"SyntaxRule","type":"codeVoice"},{"type":"text","text":" (e.g.,"},{"type":"text","text":" "},{"text":"an object might need to be ","type":"text"},{"type":"codeVoice","code":".held"},{"type":"text","text":" or be a "},{"type":"codeVoice","code":".container"},{"text":").","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Attempting to resolve ambiguities (e.g., if “take lamp” is typed and multiple"},{"type":"text","text":" "},{"text":"lamps are present).","type":"text"}]}]}]}]}]},{"anchor":"For-Game-Developers","type":"heading","level":3,"text":"For Game Developers:"},{"inlineContent":[{"type":"text","text":"Game developers typically do not need to call "},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":" methods directly."},{"type":"text","text":" "},{"text":"An instance of a ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" (like ","type":"text"},{"type":"codeVoice","code":"StandardParser"},{"text":") is provided to the ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" "},{"type":"text","text":"during initialization, and the engine uses it internally to process player input."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To influence parsing behavior, game developers should focus on:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Defining a comprehensive ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":":"}],"type":"strong"},{"type":"text","text":" This includes all recognizable verbs"},{"text":" ","type":"text"},{"text":"(with their synonyms and ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s), nouns (items, characters, with their"},{"text":" ","type":"text"},{"type":"text","text":"adjectives and properties), prepositions, directions, and noise words."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Crafting clear "},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s:"}]},{"type":"text","text":" Ensure that the grammatical patterns defined for"},{"text":" ","type":"text"},{"text":"each verb accurately reflect how players are expected to phrase commands.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Setting appropriate "},{"code":"ObjectCondition","type":"codeVoice"},{"text":"s:","type":"text"}]},{"type":"text","text":" Use these within "},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s to help"},{"type":"text","text":" "},{"type":"text","text":"the parser disambiguate objects and ensure actions are contextually valid."}],"type":"paragraph"}]}]}],"kind":"content"}],"references":{"doc://GnustoEngine/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/GnustoEngine\/s8SendableP","type":"unresolvable"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:gameState:)":{"type":"topic","url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:gamestate:)","abstract":[{"text":"Parses a raw input string from the player into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" or a ","type":"text"},{"type":"codeVoice","code":"ParseError"},{"type":"text","text":"."}],"title":"parse(input:vocabulary:gameState:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"input"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"vocabulary","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Vocabulary","preciseIdentifier":"s:12GnustoEngine10VocabularyV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"gameState","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GameState","preciseIdentifier":"s:12GnustoEngine9GameStateV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:12GnustoEngine7CommandV","text":"Command","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ParseError","preciseIdentifier":"s:12GnustoEngine10ParseErrorO","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","role":"symbol","url":"\/documentation\/gnustoengine\/standardparser","navigatorTitle":[{"kind":"identifier","text":"StandardParser"}],"abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"type":"codeVoice","code":"Parser"},{"text":" protocol, designed to","type":"text"},{"text":" ","type":"text"},{"text":"interpret player input in a manner reminiscent of classic text-adventure games.","type":"text"}],"title":"StandardParser"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/init()":{"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","abstract":[{"text":"Initializes a new ","type":"text"},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":" instance."}],"kind":"symbol","url":"\/documentation\/gnustoengine\/standardparser\/init()","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()","role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","url":"\/documentation\/gnustoengine","abstract":[],"title":"GnustoEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic","kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/Parser":{"kind":"symbol","abstract":[{"type":"text","text":"Defines the interface for turning raw player input strings into structured "},{"code":"Command","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"objects that the "},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" can understand and process."}],"role":"symbol","type":"topic","url":"\/documentation\/gnustoengine\/parser","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}]}}}