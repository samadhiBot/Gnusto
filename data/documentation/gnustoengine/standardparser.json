{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/standardparser"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"The "},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":" takes a raw input string from the player and attempts to"},{"type":"text","text":" "},{"text":"transform it into a structured ","type":"text"},{"type":"codeVoice","code":"Command"},{"text":" object that the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"text":" can execute.","type":"text"},{"type":"text","text":" "},{"text":"If it cannot understand the input, it returns a descriptive ","type":"text"},{"code":"ParseError","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"text":"Parsing Process Overview:","type":"heading","anchor":"Parsing-Process-Overview","level":3},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Tokenization & Normalization:","type":"text"}],"type":"strong"},{"type":"text","text":" The input string is broken into individual words (tokens),"},{"text":" ","type":"text"},{"text":"and typically converted to lowercase for case-insensitive matching.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Noise Word Removal:"}]},{"text":" Common, grammatically necessary but semantically unimportant","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"words (e.g., “the”, “a”, “to”) are filtered out. These are defined in the"},{"text":" ","type":"text"},{"text":"game’s ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Verb Identification:"}],"type":"strong"},{"type":"text","text":" The parser identifies the primary action word (verb)."},{"text":" ","type":"text"},{"text":"It can recognize multi-word verb synonyms (e.g., “pick up” for “take”) if","type":"text"},{"type":"text","text":" "},{"text":"they are defined in the ","type":"text"},{"code":"Vocabulary","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Syntax Rule Matching:","type":"text"}]},{"type":"text","text":" The sequence of significant tokens is compared against"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s associated with the identified verb (also from "},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":")."},{"type":"text","text":" "},{"text":"Each rule defines a valid grammatical pattern (e.g., VERB-DIRECT_OBJECT,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"VERB-DIRECT_OBJECT-PREPOSITION-INDIRECT_OBJECT)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Object Resolution:"}]},{"type":"text","text":" Noun phrases are identified as potential direct and indirect"},{"type":"text","text":" "},{"type":"text","text":"objects. This involves:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Looking up nouns in the "},{"code":"Vocabulary","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Considering their context within the "},{"type":"codeVoice","code":"GameState"},{"type":"text","text":" (e.g., what items are"},{"type":"text","text":" "},{"text":"currently visible or held by the player, what pronouns like “it” or “them”","type":"text"},{"type":"text","text":" "},{"type":"text","text":"currently refer to)."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Applying "},{"type":"codeVoice","code":"ObjectCondition"},{"type":"text","text":"s specified by the matched "},{"code":"SyntaxRule","type":"codeVoice"},{"text":" (e.g.,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an object might need to be "},{"type":"codeVoice","code":".held"},{"text":" or be a ","type":"text"},{"code":".container","type":"codeVoice"},{"text":").","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Attempting to resolve ambiguities (e.g., if “take lamp” is typed and multiple"},{"text":" ","type":"text"},{"type":"text","text":"lamps are present)."}]}]}],"type":"unorderedList"}]}]},{"type":"heading","level":3,"text":"For Game Developers:","anchor":"For-Game-Developers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Game developers typically do not need to call "},{"type":"codeVoice","code":"StandardParser"},{"type":"text","text":" methods directly."},{"type":"text","text":" "},{"type":"text","text":"An instance of a "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" (like "},{"code":"StandardParser","type":"codeVoice"},{"text":") is provided to the ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" "},{"type":"text","text":"during initialization, and the engine uses it internally to process player input."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To influence parsing behavior, game developers should focus on:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Defining a comprehensive ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"text":":","type":"text"}]},{"text":" This includes all recognizable verbs","type":"text"},{"text":" ","type":"text"},{"text":"(with their synonyms and ","type":"text"},{"code":"SyntaxRule","type":"codeVoice"},{"text":"s), nouns (items, characters, with their","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"adjectives and properties), prepositions, directions, and noise words."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Crafting clear "},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s:"}]},{"text":" Ensure that the grammatical patterns defined for","type":"text"},{"type":"text","text":" "},{"text":"each verb accurately reflect how players are expected to phrase commands.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Setting appropriate "},{"type":"codeVoice","code":"ObjectCondition"},{"text":"s:","type":"text"}],"type":"strong"},{"text":" Use these within ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"text":"s to help","type":"text"},{"text":" ","type":"text"},{"text":"the parser disambiguate objects and ensure actions are contextually valid.","type":"text"}],"type":"paragraph"}]}]}]}],"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","interfaceLanguage":"swift"},"abstract":[{"text":"A standard, ZIL-inspired implementation of the ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" protocol, designed to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","doc:\/\/GnustoEngine\/s8SendableP"]}],"kind":"symbol","topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)"],"generated":true,"anchor":"Instance-Methods"}],"metadata":{"externalID":"s:12GnustoEngine14StandardParserV","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StandardParser"}],"navigatorTitle":[{"kind":"identifier","text":"StandardParser"}],"title":"StandardParser","symbolKind":"struct","modules":[{"name":"GnustoEngine"}],"roleHeading":"Structure","role":"symbol"},"references":{"doc://GnustoEngine/documentation/GnustoEngine/Parser":{"type":"topic","title":"Parser","url":"\/documentation\/gnustoengine\/parser","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","abstract":[{"type":"text","text":"Defines the interface for turning raw player input strings into structured "},{"code":"Command","type":"codeVoice"},{"type":"text","text":" "},{"text":"objects that the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" can understand and process."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}]},"doc://GnustoEngine/s8SendableP":{"identifier":"doc:\/\/GnustoEngine\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://GnustoEngine/documentation/GnustoEngine":{"url":"\/documentation\/gnustoengine","role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","title":"GnustoEngine","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:gameState:)":{"abstract":[{"text":"Parses a raw input string from the player into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" or a ","type":"text"},{"type":"codeVoice","code":"ParseError"},{"text":".","type":"text"}],"url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:gamestate:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"kind":"text","text":"("},{"text":"input","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"vocabulary"},{"text":": ","kind":"text"},{"text":"Vocabulary","preciseIdentifier":"s:12GnustoEngine10VocabularyV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"gameState"},{"kind":"text","text":": "},{"text":"GameState","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine9GameStateV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Command","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"text":", ","kind":"text"},{"text":"ParseError","preciseIdentifier":"s:12GnustoEngine10ParseErrorO","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"parse(input:vocabulary:gameState:)","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/init()":{"type":"topic","title":"init()","url":"\/documentation\/gnustoengine\/standardparser\/init()","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()","abstract":[{"text":"Initializes a new ","type":"text"},{"type":"codeVoice","code":"StandardParser"},{"type":"text","text":" instance."}],"role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"abstract":[{"text":"A standard, ZIL-inspired implementation of the ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" protocol, designed to"},{"type":"text","text":" "},{"text":"interpret player input in a manner reminiscent of classic text-adventure games.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"navigatorTitle":[{"text":"StandardParser","kind":"identifier"}],"role":"symbol","url":"\/documentation\/gnustoengine\/standardparser","type":"topic","title":"StandardParser","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser"}}}