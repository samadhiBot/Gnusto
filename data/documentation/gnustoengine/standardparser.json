{"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardParser"}],"externalID":"s:12GnustoEngine14StandardParserV","modules":[{"name":"GnustoEngine"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"StandardParser"}],"symbolKind":"struct","title":"StandardParser","role":"symbol"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StandardParser","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"StandardParser"},{"type":"text","text":" takes a raw input string from the player and attempts to"},{"text":" ","type":"text"},{"text":"transform it into a structured ","type":"text"},{"type":"codeVoice","code":"Command"},{"text":" object that the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" can execute."},{"type":"text","text":" "},{"type":"text","text":"If it cannot understand the input, it returns a descriptive "},{"type":"codeVoice","code":"ParseError"},{"type":"text","text":"."}],"type":"paragraph"},{"level":3,"type":"heading","text":"Parsing Process Overview:","anchor":"Parsing-Process-Overview"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Tokenization & Normalization:"}]},{"text":" The input string is broken into individual words (tokens),","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and typically converted to lowercase for case-insensitive matching."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Noise Word Removal:"}]},{"text":" Common, grammatically necessary but semantically unimportant","type":"text"},{"text":" ","type":"text"},{"text":"words (e.g., “the”, “a”, “to”) are filtered out. These are defined in the","type":"text"},{"type":"text","text":" "},{"text":"game’s ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Verb Identification:","type":"text"}]},{"text":" The parser identifies the primary action word (verb).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It can recognize multi-word verb synonyms (e.g., “pick up” for “take”) if"},{"type":"text","text":" "},{"text":"they are defined in the ","type":"text"},{"code":"Vocabulary","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Syntax Rule Matching:"}],"type":"strong"},{"type":"text","text":" The sequence of significant tokens is compared against"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"code":"SyntaxRule","type":"codeVoice"},{"text":"s associated with the identified verb (also from ","type":"text"},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":")."},{"type":"text","text":" "},{"text":"Each rule defines a valid grammatical pattern (e.g., VERB-DIRECT_OBJECT,","type":"text"},{"type":"text","text":" "},{"text":"VERB-DIRECT_OBJECT-PREPOSITION-INDIRECT_OBJECT).","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Object Resolution:","type":"text"}],"type":"strong"},{"type":"text","text":" Noun phrases are identified as potential direct and indirect"},{"type":"text","text":" "},{"text":"objects. This involves:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Looking up nouns in the "},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Considering their context within the "},{"type":"codeVoice","code":"GameState"},{"text":" (e.g., what items are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"currently visible or held by the player, what pronouns like “it” or “them”"},{"text":" ","type":"text"},{"type":"text","text":"currently refer to)."}]}]},{"content":[{"inlineContent":[{"text":"Applying ","type":"text"},{"type":"codeVoice","code":"ObjectCondition"},{"text":"s specified by the matched ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":" (e.g.,"},{"text":" ","type":"text"},{"text":"an object might need to be ","type":"text"},{"code":".held","type":"codeVoice"},{"text":" or be a ","type":"text"},{"type":"codeVoice","code":".container"},{"text":").","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Attempting to resolve ambiguities (e.g., if “take lamp” is typed and multiple","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"lamps are present)."}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"text":"For Game Developers:","level":3,"anchor":"For-Game-Developers","type":"heading"},{"inlineContent":[{"type":"text","text":"Game developers typically do not need to call "},{"code":"StandardParser","type":"codeVoice"},{"text":" methods directly.","type":"text"},{"type":"text","text":" "},{"text":"An instance of a ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" (like ","type":"text"},{"type":"codeVoice","code":"StandardParser"},{"type":"text","text":") is provided to the "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"during initialization, and the engine uses it internally to process player input."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To influence parsing behavior, game developers should focus on:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Defining a comprehensive "},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"text","text":" This includes all recognizable verbs"},{"text":" ","type":"text"},{"type":"text","text":"(with their synonyms and "},{"type":"codeVoice","code":"SyntaxRule"},{"text":"s), nouns (items, characters, with their","type":"text"},{"type":"text","text":" "},{"text":"adjectives and properties), prepositions, directions, and noise words.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Crafting clear "},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s:"}]},{"type":"text","text":" Ensure that the grammatical patterns defined for"},{"text":" ","type":"text"},{"type":"text","text":"each verb accurately reflect how players are expected to phrase commands."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Setting appropriate ","type":"text"},{"type":"codeVoice","code":"ObjectCondition"},{"type":"text","text":"s:"}]},{"text":" Use these within ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s to help"},{"type":"text","text":" "},{"type":"text","text":"the parser disambiguate objects and ensure actions are contextually valid."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()"]},{"identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true}],"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"type":"codeVoice","code":"Parser"},{"text":" protocol, designed to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","doc:\/\/GnustoEngine\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"sections":[],"variants":[{"paths":["\/documentation\/gnustoengine\/standardparser"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://GnustoEngine/documentation/GnustoEngine/Parser":{"url":"\/documentation\/gnustoengine\/parser","title":"Parser","abstract":[{"text":"Defines the interface for turning raw player input strings into structured ","type":"text"},{"type":"codeVoice","code":"Command"},{"type":"text","text":" "},{"text":"objects that the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" can understand and process."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StandardParser","kind":"identifier"}],"title":"StandardParser","url":"\/documentation\/gnustoengine\/standardparser","kind":"symbol","role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","type":"topic","abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"code":"Parser","type":"codeVoice"},{"text":" protocol, designed to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"navigatorTitle":[{"kind":"identifier","text":"StandardParser"}]},"doc://GnustoEngine/s8SendableP":{"identifier":"doc:\/\/GnustoEngine\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:gameState:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"kind":"text","text":"("},{"text":"input","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"vocabulary","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Vocabulary","preciseIdentifier":"s:12GnustoEngine10VocabularyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"gameState","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine9GameStateV","kind":"typeIdentifier","text":"GameState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine7CommandV","text":"Command","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ParseError","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10ParseErrorO"},{"text":">","kind":"text"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)","type":"topic","kind":"symbol","title":"parse(input:vocabulary:gameState:)","url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:gamestate:)","abstract":[{"text":"Parses a raw input string from the player into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" or a ","type":"text"},{"code":"ParseError","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine":{"title":"GnustoEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","kind":"symbol","type":"topic","url":"\/documentation\/gnustoengine","abstract":[],"role":"collection"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/init()":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Initializes a new "},{"type":"codeVoice","code":"StandardParser"},{"text":" instance.","type":"text"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()","url":"\/documentation\/gnustoengine\/standardparser\/init()","role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]}}}