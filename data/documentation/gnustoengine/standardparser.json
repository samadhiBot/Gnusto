{"abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" protocol, designed to"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/standardparser"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()"]},{"anchor":"Instance-Methods","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)"],"title":"Instance Methods","generated":true}],"metadata":{"externalID":"s:12GnustoEngine14StandardParserV","title":"StandardParser","navigatorTitle":[{"text":"StandardParser","kind":"identifier"}],"symbolKind":"struct","role":"symbol","modules":[{"name":"GnustoEngine"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardParser"}]},"sections":[],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","doc:\/\/GnustoEngine\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"StandardParser"},{"text":" takes a raw input string from the player and attempts to","type":"text"},{"text":" ","type":"text"},{"text":"transform it into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" object that the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" can execute."},{"text":" ","type":"text"},{"type":"text","text":"If it cannot understand the input, it returns a descriptive "},{"code":"ParseError","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"heading","text":"Parsing Process Overview:","level":3,"anchor":"Parsing-Process-Overview"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Tokenization & Normalization:","type":"text"}],"type":"strong"},{"text":" The input string is broken into individual words (tokens),","type":"text"},{"text":" ","type":"text"},{"text":"and typically converted to lowercase for case-insensitive matching.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Noise Word Removal:","type":"text"}],"type":"strong"},{"type":"text","text":" Common, grammatically necessary but semantically unimportant"},{"type":"text","text":" "},{"type":"text","text":"words (e.g., “the”, “a”, “to”) are filtered out. These are defined in the"},{"type":"text","text":" "},{"type":"text","text":"game’s "},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Verb Identification:","type":"text"}]},{"text":" The parser identifies the primary action word (verb).","type":"text"},{"type":"text","text":" "},{"text":"It can recognize multi-word verb synonyms (e.g., “pick up” for “take”) if","type":"text"},{"type":"text","text":" "},{"type":"text","text":"they are defined in the "},{"type":"codeVoice","code":"Vocabulary"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Syntax Rule Matching:","type":"text"}]},{"type":"text","text":" The sequence of significant tokens is compared against"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"text":"s associated with the identified verb (also from ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"Each rule defines a valid grammatical pattern (e.g., VERB-DIRECT_OBJECT,"},{"text":" ","type":"text"},{"text":"VERB-DIRECT_OBJECT-PREPOSITION-INDIRECT_OBJECT).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Object Resolution:"}]},{"type":"text","text":" Noun phrases are identified as potential direct and indirect"},{"type":"text","text":" "},{"type":"text","text":"objects. This involves:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Looking up nouns in the "},{"type":"codeVoice","code":"Vocabulary"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Considering their context within the ","type":"text"},{"code":"GameState","type":"codeVoice"},{"text":" (e.g., what items are","type":"text"},{"type":"text","text":" "},{"text":"currently visible or held by the player, what pronouns like “it” or “them”","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"currently refer to)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Applying "},{"code":"ObjectCondition","type":"codeVoice"},{"type":"text","text":"s specified by the matched "},{"code":"SyntaxRule","type":"codeVoice"},{"type":"text","text":" (e.g.,"},{"type":"text","text":" "},{"type":"text","text":"an object might need to be "},{"code":".held","type":"codeVoice"},{"type":"text","text":" or be a "},{"type":"codeVoice","code":".container"},{"text":").","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Attempting to resolve ambiguities (e.g., if “take lamp” is typed and multiple","type":"text"},{"type":"text","text":" "},{"type":"text","text":"lamps are present)."}],"type":"paragraph"}]}]}]}]},{"anchor":"For-Game-Developers","type":"heading","text":"For Game Developers:","level":3},{"inlineContent":[{"type":"text","text":"Game developers typically do not need to call "},{"type":"codeVoice","code":"StandardParser"},{"text":" methods directly.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"An instance of a "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" (like "},{"type":"codeVoice","code":"StandardParser"},{"text":") is provided to the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" "},{"text":"during initialization, and the engine uses it internally to process player input.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To influence parsing behavior, game developers should focus on:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Defining a comprehensive ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":":"}]},{"text":" This includes all recognizable verbs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(with their synonyms and "},{"type":"codeVoice","code":"SyntaxRule"},{"text":"s), nouns (items, characters, with their","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"adjectives and properties), prepositions, directions, and noise words."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Crafting clear ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"text":"s:","type":"text"}]},{"type":"text","text":" Ensure that the grammatical patterns defined for"},{"text":" ","type":"text"},{"type":"text","text":"each verb accurately reflect how players are expected to phrase commands."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Setting appropriate ","type":"text"},{"code":"ObjectCondition","type":"codeVoice"},{"text":"s:","type":"text"}]},{"text":" Use these within ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s to help"},{"type":"text","text":" "},{"text":"the parser disambiguate objects and ensure actions are contextually valid.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"kind":"symbol","references":{"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/init()":{"kind":"symbol","url":"\/documentation\/gnustoengine\/standardparser\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"init()","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()","role":"symbol","abstract":[{"text":"Initializes a new ","type":"text"},{"type":"codeVoice","code":"StandardParser"},{"text":" instance.","type":"text"}]},"doc://GnustoEngine/documentation/GnustoEngine":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic","url":"\/documentation\/gnustoengine","kind":"symbol","abstract":[],"title":"GnustoEngine","role":"collection"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:gameState:)":{"title":"parse(input:vocabulary:gameState:)","role":"symbol","abstract":[{"text":"Parses a raw input string from the player into a structured ","type":"text"},{"type":"codeVoice","code":"Command"},{"text":" or a ","type":"text"},{"type":"codeVoice","code":"ParseError"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:gamestate:)","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"vocabulary"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10VocabularyV","text":"Vocabulary"},{"text":", ","kind":"text"},{"text":"gameState","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12GnustoEngine9GameStateV","text":"GameState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine7CommandV","text":"Command","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:12GnustoEngine10ParseErrorO","text":"ParseError","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://GnustoEngine/documentation/GnustoEngine/Parser":{"type":"topic","kind":"symbol","url":"\/documentation\/gnustoengine\/parser","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","role":"symbol","abstract":[{"type":"text","text":"Defines the interface for turning raw player input strings into structured "},{"code":"Command","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"objects that the "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" can understand and process."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}]},"doc://GnustoEngine/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/GnustoEngine\/s8SendableP"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"type":"topic","kind":"symbol","url":"\/documentation\/gnustoengine\/standardparser","title":"StandardParser","navigatorTitle":[{"text":"StandardParser","kind":"identifier"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","role":"symbol","abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" protocol, designed to"},{"text":" ","type":"text"},{"text":"interpret player input in a manner reminiscent of classic text-adventure games.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}]}}}