{"kind":"symbol","abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"code":"Parser","type":"codeVoice"},{"text":" protocol, designed to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"metadata":{"role":"symbol","roleHeading":"Structure","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StandardParser","kind":"identifier"}],"modules":[{"name":"GnustoEngine"}],"externalID":"s:12GnustoEngine14StandardParserV","title":"StandardParser","navigatorTitle":[{"text":"StandardParser","kind":"identifier"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()"],"generated":true,"title":"Initializers"},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StandardParser"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"text":"The ","type":"text"},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":" takes a raw input string from the player and attempts to"},{"text":" ","type":"text"},{"text":"transform it into a structured ","type":"text"},{"type":"codeVoice","code":"Command"},{"text":" object that the ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"text":" can execute.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If it cannot understand the input, it returns a descriptive "},{"type":"codeVoice","code":"ParseError"},{"type":"text","text":"."}],"type":"paragraph"},{"level":3,"type":"heading","text":"Parsing Process Overview:","anchor":"Parsing-Process-Overview"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Tokenization & Normalization:","type":"text"}]},{"type":"text","text":" The input string is broken into individual words (tokens),"},{"text":" ","type":"text"},{"text":"and typically converted to lowercase for case-insensitive matching.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Noise Word Removal:"}],"type":"strong"},{"text":" Common, grammatically necessary but semantically unimportant","type":"text"},{"type":"text","text":" "},{"text":"words (e.g., “the”, “a”, “to”) are filtered out. These are defined in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"game’s "},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Verb Identification:","type":"text"}],"type":"strong"},{"type":"text","text":" The parser identifies the primary action word (verb)."},{"type":"text","text":" "},{"text":"It can recognize multi-word verb synonyms (e.g., “pick up” for “take”) if","type":"text"},{"type":"text","text":" "},{"text":"they are defined in the ","type":"text"},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Syntax Rule Matching:"}]},{"type":"text","text":" The sequence of significant tokens is compared against"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"SyntaxRule"},{"text":"s associated with the identified verb (also from ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"text":").","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each rule defines a valid grammatical pattern (e.g., VERB-DIRECT_OBJECT,"},{"text":" ","type":"text"},{"text":"VERB-DIRECT_OBJECT-PREPOSITION-INDIRECT_OBJECT).","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Object Resolution:"}]},{"text":" Noun phrases are identified as potential direct and indirect","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"objects. This involves:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Looking up nouns in the ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Considering their context within the ","type":"text"},{"type":"codeVoice","code":"GameState"},{"text":" (e.g., what items are","type":"text"},{"type":"text","text":" "},{"text":"currently visible or held by the player, what pronouns like “it” or “them”","type":"text"},{"type":"text","text":" "},{"type":"text","text":"currently refer to)."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Applying "},{"type":"codeVoice","code":"ObjectCondition"},{"type":"text","text":"s specified by the matched "},{"type":"codeVoice","code":"SyntaxRule"},{"text":" (e.g.,","type":"text"},{"type":"text","text":" "},{"text":"an object might need to be ","type":"text"},{"code":".held","type":"codeVoice"},{"text":" or be a ","type":"text"},{"type":"codeVoice","code":".container"},{"type":"text","text":")."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Attempting to resolve ambiguities (e.g., if “take lamp” is typed and multiple","type":"text"},{"type":"text","text":" "},{"type":"text","text":"lamps are present)."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"orderedList"},{"type":"heading","anchor":"For-Game-Developers","text":"For Game Developers:","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Game developers typically do not need to call "},{"type":"codeVoice","code":"StandardParser"},{"text":" methods directly.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"An instance of a "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" (like "},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":") is provided to the "},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" "},{"text":"during initialization, and the engine uses it internally to process player input.","type":"text"}]},{"inlineContent":[{"text":"To influence parsing behavior, game developers should focus on:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Defining a comprehensive "},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":":"}]},{"type":"text","text":" This includes all recognizable verbs"},{"type":"text","text":" "},{"type":"text","text":"(with their synonyms and "},{"code":"SyntaxRule","type":"codeVoice"},{"type":"text","text":"s), nouns (items, characters, with their"},{"type":"text","text":" "},{"text":"adjectives and properties), prepositions, directions, and noise words.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Crafting clear ","type":"text"},{"code":"SyntaxRule","type":"codeVoice"},{"type":"text","text":"s:"}],"type":"strong"},{"type":"text","text":" Ensure that the grammatical patterns defined for"},{"type":"text","text":" "},{"type":"text","text":"each verb accurately reflect how players are expected to phrase commands."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Setting appropriate "},{"type":"codeVoice","code":"ObjectCondition"},{"text":"s:","type":"text"}],"type":"strong"},{"text":" Use these within ","type":"text"},{"code":"SyntaxRule","type":"codeVoice"},{"text":"s to help","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the parser disambiguate objects and ensure actions are contextually valid."}]}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/standardparser"]}],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","doc:\/\/GnustoEngine\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"sections":[],"references":{"doc://GnustoEngine/documentation/GnustoEngine/Parser":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Defines the interface for turning raw player input strings into structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"objects that the "},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" can understand and process."}],"url":"\/documentation\/gnustoengine\/parser","role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:gameState:)":{"type":"topic","url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:gamestate:)","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"input"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"vocabulary","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Vocabulary","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10VocabularyV"},{"text":", ","kind":"text"},{"text":"gameState","kind":"externalParam"},{"kind":"text","text":": "},{"text":"GameState","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine9GameStateV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"text":"Command","preciseIdentifier":"s:12GnustoEngine7CommandV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10ParseErrorO","text":"ParseError"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"text":"Parses a raw input string from the player into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" or a ","type":"text"},{"type":"codeVoice","code":"ParseError"},{"type":"text","text":"."}],"title":"parse(input:vocabulary:gameState:)","kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/init()":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializes a new "},{"type":"codeVoice","code":"StandardParser"},{"text":" instance.","type":"text"}],"url":"\/documentation\/gnustoengine\/standardparser\/init()","role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"title":"init()"},"doc://GnustoEngine/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/GnustoEngine\/s8SendableP","type":"unresolvable"},"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","abstract":[],"title":"GnustoEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","url":"\/documentation\/gnustoengine","kind":"symbol","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"StandardParser","kind":"identifier"}],"abstract":[{"text":"A standard, ZIL-inspired implementation of the ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" protocol, designed to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"url":"\/documentation\/gnustoengine\/standardparser","role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StandardParser","kind":"identifier"}],"title":"StandardParser"}}}