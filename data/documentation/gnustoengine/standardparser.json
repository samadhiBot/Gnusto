{"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"sections":[],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","doc:\/\/GnustoEngine\/s8SendableP"],"title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/standardparser"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"StandardParser"},{"text":" is designed to understand player input in a way that emulates","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the behavior of classic text-adventure parsers, particularly those from Infocom’s"},{"text":" ","type":"text"},{"text":"Z-machine Implementation Language (ZIL).","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Its primary role is to take a raw input string from the player and transform it into a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"structured "},{"type":"codeVoice","code":"Command"},{"text":" object that the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" can then execute. If it cannot"},{"text":" ","type":"text"},{"text":"understand the input, it returns a descriptive ","type":"text"},{"code":"ParseError","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Key steps in its parsing process include:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Tokenization:","type":"text"}],"type":"strong"},{"text":" Breaking the input string into individual words or tokens.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Noise Word Removal:","type":"text"}]},{"type":"text","text":" Filtering out common, grammatically necessary but semantically"},{"text":" ","type":"text"},{"text":"unimportant words (e.g., “the”, “a”, “to”) based on the game’s ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Verb Identification:"}]},{"text":" Recognizing the primary action word (verb), potentially","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"handling multi-word verb synonyms (e.g., “pick up”)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Syntax Rule Matching:","type":"text"}],"type":"strong"},{"type":"text","text":" Comparing the sequence of significant tokens against known"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"text":"s associated with the identified verb. Each rule defines a valid","type":"text"},{"type":"text","text":" "},{"text":"grammatical pattern (e.g., VERB-DIRECT_OBJECT, VERB-DIRECT_OBJECT-PREPOSITION-INDIRECT_OBJECT).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Object Resolution:","type":"text"}]},{"text":" Identifying the direct and indirect objects mentioned in the input.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This involves looking up nouns in the "},{"code":"Vocabulary","type":"codeVoice"},{"text":", considering their context within","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"GameState"},{"text":" (e.g., what items are in scope, what pronouns like “it” refer to),","type":"text"},{"type":"text","text":" "},{"text":"applying ","type":"text"},{"code":"ObjectCondition","type":"codeVoice"},{"type":"text","text":"s from the matched syntax rule, and resolving ambiguities."}]}]}]},{"inlineContent":[{"text":"Game developers typically do not need to interact with ","type":"text"},{"type":"codeVoice","code":"StandardParser"},{"type":"text","text":" methods other"},{"type":"text","text":" "},{"type":"text","text":"than potentially instantiating it. The "},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" uses a "},{"type":"codeVoice","code":"Parser"},{"text":" instance (like","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"StandardParser"},{"text":") to process player input as part of the main game loop.","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()"],"title":"Initializers"},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"type":"codeVoice","code":"Parser"},{"text":" protocol.","type":"text"}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"navigatorTitle":[{"text":"StandardParser","kind":"identifier"}],"role":"symbol","title":"StandardParser","symbolKind":"struct","roleHeading":"Structure","externalID":"s:12GnustoEngine14StandardParserV","modules":[{"name":"GnustoEngine"}]},"references":{"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","type":"topic","abstract":[{"text":"A standard, ZIL-inspired implementation of the ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" protocol.","type":"text"}],"url":"\/documentation\/gnustoengine\/standardparser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"StandardParser"}],"title":"StandardParser"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/init()":{"kind":"symbol","type":"topic","abstract":[],"title":"init()","url":"\/documentation\/gnustoengine\/standardparser\/init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()","role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:gameState:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"kind":"text","text":"("},{"text":"input","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"vocabulary","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Vocabulary","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10VocabularyV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"gameState"},{"text":": ","kind":"text"},{"text":"GameState","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine9GameStateV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Command","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10ParseErrorO","text":"ParseError"},{"kind":"text","text":">"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)","type":"topic","abstract":[{"text":"Parses a raw input string from the player into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" or a ","type":"text"},{"type":"codeVoice","code":"ParseError"},{"type":"text","text":"."}],"url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:gamestate:)","kind":"symbol","title":"parse(input:vocabulary:gameState:)","role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/Parser":{"kind":"symbol","role":"symbol","title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Defines the interface for a command parser."}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","type":"topic","url":"\/documentation\/gnustoengine\/parser"},"doc://GnustoEngine/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/GnustoEngine\/s8SendableP"},"doc://GnustoEngine/documentation/GnustoEngine":{"type":"topic","kind":"symbol","title":"GnustoEngine","role":"collection","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","abstract":[],"url":"\/documentation\/gnustoengine"}}}