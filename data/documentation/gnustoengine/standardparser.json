{"kind":"symbol","abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" protocol, designed to"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"metadata":{"navigatorTitle":[{"text":"StandardParser","kind":"identifier"}],"symbolKind":"struct","role":"symbol","roleHeading":"Structure","modules":[{"name":"GnustoEngine"}],"externalID":"s:12GnustoEngine14StandardParserV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StandardParser","kind":"identifier"}],"title":"StandardParser"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"StandardParser"},{"text":" takes a raw input string from the player and attempts to","type":"text"},{"type":"text","text":" "},{"text":"transform it into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"type":"text","text":" object that the "},{"code":"GameEngine","type":"codeVoice"},{"text":" can execute.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If it cannot understand the input, it returns a descriptive "},{"type":"codeVoice","code":"ParseError"},{"type":"text","text":"."}]},{"type":"heading","text":"Parsing Process Overview:","level":3,"anchor":"Parsing-Process-Overview"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Tokenization & Normalization:"}],"type":"strong"},{"type":"text","text":" The input string is broken into individual words (tokens),"},{"type":"text","text":" "},{"type":"text","text":"and typically converted to lowercase for case-insensitive matching."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Noise Word Removal:","type":"text"}]},{"type":"text","text":" Common, grammatically necessary but semantically unimportant"},{"type":"text","text":" "},{"type":"text","text":"words (e.g., “the”, “a”, “to”) are filtered out. These are defined in the"},{"text":" ","type":"text"},{"type":"text","text":"game’s "},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Verb Identification:"}],"type":"strong"},{"text":" The parser identifies the primary action word (verb).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It can recognize multi-word verb synonyms (e.g., “pick up” for “take”) if"},{"text":" ","type":"text"},{"text":"they are defined in the ","type":"text"},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Syntax Rule Matching:"}]},{"type":"text","text":" The sequence of significant tokens is compared against"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"text":"s associated with the identified verb (also from ","type":"text"},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":")."},{"type":"text","text":" "},{"text":"Each rule defines a valid grammatical pattern (e.g., VERB-DIRECT_OBJECT,","type":"text"},{"text":" ","type":"text"},{"text":"VERB-DIRECT_OBJECT-PREPOSITION-INDIRECT_OBJECT).","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Object Resolution:","type":"text"}]},{"type":"text","text":" Noun phrases are identified as potential direct and indirect"},{"text":" ","type":"text"},{"type":"text","text":"objects. This involves:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Looking up nouns in the "},{"code":"Vocabulary","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Considering their context within the ","type":"text"},{"type":"codeVoice","code":"GameState"},{"text":" (e.g., what items are","type":"text"},{"text":" ","type":"text"},{"text":"currently visible or held by the player, what pronouns like “it” or “them”","type":"text"},{"type":"text","text":" "},{"text":"currently refer to).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Applying "},{"code":"ObjectCondition","type":"codeVoice"},{"text":"s specified by the matched ","type":"text"},{"type":"codeVoice","code":"SyntaxRule"},{"text":" (e.g.,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an object might need to be "},{"code":".held","type":"codeVoice"},{"type":"text","text":" or be a "},{"type":"codeVoice","code":".container"},{"text":").","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Attempting to resolve ambiguities (e.g., if “take lamp” is typed and multiple","type":"text"},{"text":" ","type":"text"},{"text":"lamps are present).","type":"text"}]}]}]}]}]},{"type":"heading","text":"For Game Developers:","level":3,"anchor":"For-Game-Developers"},{"type":"paragraph","inlineContent":[{"text":"Game developers typically do not need to call ","type":"text"},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":" methods directly."},{"type":"text","text":" "},{"text":"An instance of a ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" (like "},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":") is provided to the "},{"code":"GameEngine","type":"codeVoice"},{"text":" ","type":"text"},{"text":"during initialization, and the engine uses it internally to process player input.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To influence parsing behavior, game developers should focus on:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Defining a comprehensive "},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":":"}],"type":"strong"},{"text":" This includes all recognizable verbs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(with their synonyms and "},{"code":"SyntaxRule","type":"codeVoice"},{"text":"s), nouns (items, characters, with their","type":"text"},{"text":" ","type":"text"},{"text":"adjectives and properties), prepositions, directions, and noise words.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Crafting clear "},{"type":"codeVoice","code":"SyntaxRule"},{"type":"text","text":"s:"}],"type":"strong"},{"text":" Ensure that the grammatical patterns defined for","type":"text"},{"type":"text","text":" "},{"text":"each verb accurately reflect how players are expected to phrase commands.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Setting appropriate ","type":"text"},{"type":"codeVoice","code":"ObjectCondition"},{"type":"text","text":"s:"}],"type":"strong"},{"text":" Use these within ","type":"text"},{"code":"SyntaxRule","type":"codeVoice"},{"text":"s to help","type":"text"},{"type":"text","text":" "},{"text":"the parser disambiguate objects and ensure actions are contextually valid.","type":"text"}]}]}],"type":"unorderedList"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser"},"topicSections":[{"identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()"],"title":"Initializers","anchor":"Initializers","generated":true},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)"]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","doc:\/\/GnustoEngine\/s8SendableP"],"type":"conformsTo"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"variants":[{"paths":["\/documentation\/gnustoengine\/standardparser"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://GnustoEngine/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/GnustoEngine\/s8SendableP","title":"Swift.Sendable"},"doc://GnustoEngine/documentation/GnustoEngine/Parser":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"role":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/gnustoengine\/parser","type":"topic","abstract":[{"type":"text","text":"Defines the interface for turning raw player input strings into structured "},{"type":"codeVoice","code":"Command"},{"type":"text","text":" "},{"type":"text","text":"objects that the "},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" can understand and process."}],"kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","title":"GnustoEngine","abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","url":"\/documentation\/gnustoengine","type":"topic","kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/init()":{"abstract":[{"text":"Initializes a new ","type":"text"},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":" instance."}],"url":"\/documentation\/gnustoengine\/standardparser\/init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","title":"init()","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/init()","kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:gameState:)":{"abstract":[{"type":"text","text":"Parses a raw input string from the player into a structured "},{"code":"Command","type":"codeVoice"},{"type":"text","text":" or a "},{"code":"ParseError","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:gamestate:)","role":"symbol","type":"topic","title":"parse(input:vocabulary:gameState:)","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:gameState:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"input"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"vocabulary","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Vocabulary","preciseIdentifier":"s:12GnustoEngine10VocabularyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"gameState"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12GnustoEngine9GameStateV","text":"GameState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"text":"Command","preciseIdentifier":"s:12GnustoEngine7CommandV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ParseError","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10ParseErrorO"},{"kind":"text","text":">"}]},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"kind":"symbol","navigatorTitle":[{"text":"StandardParser","kind":"identifier"}],"abstract":[{"text":"A standard, ZIL-inspired implementation of the ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" protocol, designed to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","title":"StandardParser","url":"\/documentation\/gnustoengine\/standardparser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StandardParser","kind":"identifier"}],"type":"topic"}}}