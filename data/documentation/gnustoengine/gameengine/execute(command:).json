{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/gameengine\/execute(command:)"]}],"sections":[],"abstract":[{"type":"text","text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers."}],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","externalID":"s:12GnustoEngine04GameB0C7execute7commandyAA7CommandV_tYaF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"command"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine7CommandV","text":"Command","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"title":"execute(command:)","extendedModule":"GnustoEngine","modules":[{"name":"GnustoEngine"}],"roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"kind":"text","text":"("},{"text":"command","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine7CommandV","kind":"typeIdentifier","text":"Command","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}]}]},{"kind":"parameters","parameters":[{"name":"command","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Command"},{"type":"text","text":" object to execute."}]}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"This is a central method in processing player actions. It performs the following sequence:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Item "},{"code":"beforeTurn","type":"codeVoice"},{"type":"text","text":" Events"}],"type":"strong"},{"text":": For every item in the player’s current location or","type":"text"},{"type":"text","text":" "},{"text":"inventory that has an ","type":"text"},{"type":"codeVoice","code":"ItemEventHandler"},{"type":"text","text":" registered for "},{"code":".beforeTurn","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"executes that handler. If any handler returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" (indicating it fully handled"},{"type":"text","text":" "},{"text":"the command or turn) or sets ","type":"text"},{"code":"shouldQuit","type":"codeVoice"},{"type":"text","text":", further processing of the command stops."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Location "},{"code":"beforeTurn","type":"codeVoice"},{"text":" Events","type":"text"}]},{"text":": If the player’s current location has a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"LocationEventHandler"},{"text":" registered for ","type":"text"},{"type":"codeVoice","code":".beforeTurn"},{"text":", executes it. If it returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" "},{"text":"or sets ","type":"text"},{"type":"codeVoice","code":"shouldQuit"},{"type":"text","text":", further processing stops."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Main Action Handling"}]},{"text":": If the command was not fully handled by ","type":"text"},{"type":"codeVoice","code":"beforeTurn"},{"type":"text","text":" events:"},{"type":"text","text":" "},{"type":"text","text":"a. Retrieves the appropriate "},{"code":"ActionHandler","type":"codeVoice"},{"text":" for the command’s verb from the","type":"text"},{"text":" ","type":"text"},{"text":"engine’s ","type":"text"},{"type":"codeVoice","code":"actionHandlers"},{"type":"text","text":" registry."},{"type":"text","text":" "},{"text":"b. If a handler is found:","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"i. Calls the handler’s "},{"type":"codeVoice","code":"validate(context:)"},{"type":"text","text":" method. If validation throws an"},{"type":"text","text":" "},{"type":"codeVoice","code":"ActionResponse"},{"text":", reports it and stops.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ii. Calls the handler’s "},{"type":"codeVoice","code":"process(context:)"},{"type":"text","text":" method. This typically returns an"},{"type":"text","text":" "},{"code":"ActionResult","type":"codeVoice"},{"text":" containing state changes and a message.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iii. Applies any "},{"code":"StateChange","type":"codeVoice"},{"text":"s from the ","type":"text"},{"code":"ActionResult","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"gameState","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"iv. Prints the "},{"type":"codeVoice","code":"ActionResult.message"},{"text":" to the player.","type":"text"},{"type":"text","text":" "},{"text":"v. Calls the handler’s ","type":"text"},{"type":"codeVoice","code":"postProcess(context:result:)"},{"type":"text","text":" method for any final actions."},{"type":"text","text":" "},{"type":"text","text":"vi. Processes any "},{"type":"codeVoice","code":"SideEffect"},{"type":"text","text":"s from the "},{"type":"codeVoice","code":"ActionResult"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"c. If no ","type":"text"},{"type":"codeVoice","code":"ActionHandler"},{"text":" is found for the verb, reports an ","type":"text"},{"type":"codeVoice","code":"ActionResponse.unknownVerb"},{"text":" error.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Item "},{"code":"afterTurn","type":"codeVoice"},{"type":"text","text":" Events"}]},{"type":"text","text":": Similar to "},{"type":"codeVoice","code":"beforeTurn"},{"type":"text","text":", executes "},{"code":".afterTurn","type":"codeVoice"},{"text":" item event handlers.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Location "},{"type":"codeVoice","code":"afterTurn"},{"text":" Events","type":"text"}],"type":"strong"},{"text":": Similar to ","type":"text"},{"type":"codeVoice","code":"beforeTurn"},{"type":"text","text":", executes "},{"type":"codeVoice","code":".afterTurn"},{"type":"text","text":" location event handlers."}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Any ","type":"text"},{"code":"ActionResponse","type":"codeVoice"},{"type":"text","text":" errors thrown during this process are caught and reported to the player."},{"type":"text","text":" "},{"type":"text","text":"Other errors are logged."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)","interfaceLanguage":"swift"},"references":{"doc://GnustoEngine/documentation/GnustoEngine/GameEngine/execute(command:)":{"abstract":[{"text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers.","type":"text"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)","title":"execute(command:)","url":"\/documentation\/gnustoengine\/gameengine\/execute(command:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"command","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV","text":"Command"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}]},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine","url":"\/documentation\/gnustoengine\/gameengine","title":"GameEngine","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"text":"GameEngine","kind":"identifier"}],"navigatorTitle":[{"text":"GameEngine","kind":"identifier"}],"abstract":[{"text":"The main orchestrator for an interactive fiction game, responsible for managing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the game’s state, running the primary game loop, and coordinating interactions"},{"type":"text","text":" "},{"type":"text","text":"between the player (via an "},{"type":"codeVoice","code":"IOHandler"},{"type":"text","text":"), the command "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and the various"},{"type":"text","text":" "},{"type":"text","text":"game logic handlers ("},{"type":"codeVoice","code":"ActionHandler"},{"type":"text","text":", "},{"code":"ItemEventHandler","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"LocationEventHandler"},{"type":"text","text":")."}]},"doc://GnustoEngine/documentation/GnustoEngine/Command":{"role":"symbol","url":"\/documentation\/gnustoengine\/command","kind":"symbol","navigatorTitle":[{"text":"Command","kind":"identifier"}],"title":"Command","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Command"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","abstract":[{"type":"text","text":"Represents a structured and validated player command, ready for the "},{"type":"codeVoice","code":"GameEngine"},{"text":" to execute.","type":"text"}],"type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","title":"GnustoEngine","abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","url":"\/documentation\/gnustoengine","type":"topic","kind":"symbol"}}}