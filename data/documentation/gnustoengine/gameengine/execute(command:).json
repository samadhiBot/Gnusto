{"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)"},"abstract":[{"text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers.","type":"text"}],"variants":[{"paths":["\/documentation\/gnustoengine\/gameengine\/execute(command:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"execute(command:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"command"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine7CommandV","text":"Command","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"modules":[{"name":"GnustoEngine"}],"extendedModule":"GnustoEngine","externalID":"s:12GnustoEngine04GameB0C7execute7commandyAA7CommandV_tYaF","role":"symbol","symbolKind":"method","roleHeading":"Instance Method"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"command","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Command","preciseIdentifier":"s:12GnustoEngine7CommandV","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"command","content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Command"},{"type":"text","text":" object to execute."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This is a central method in processing player actions. It performs the following sequence:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Item ","type":"text"},{"code":"beforeTurn","type":"codeVoice"},{"type":"text","text":" Events"}],"type":"strong"},{"text":": For every item in the player’s current location or","type":"text"},{"text":" ","type":"text"},{"text":"inventory that has an ","type":"text"},{"type":"codeVoice","code":"ItemEventHandler"},{"type":"text","text":" registered for "},{"type":"codeVoice","code":".beforeTurn"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"executes that handler. If any handler returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" (indicating it fully handled"},{"text":" ","type":"text"},{"type":"text","text":"the command or turn) or sets "},{"type":"codeVoice","code":"shouldQuit"},{"type":"text","text":", further processing of the command stops."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Location ","type":"text"},{"code":"beforeTurn","type":"codeVoice"},{"text":" Events","type":"text"}]},{"type":"text","text":": If the player’s current location has a"},{"type":"text","text":" "},{"type":"codeVoice","code":"LocationEventHandler"},{"text":" registered for ","type":"text"},{"type":"codeVoice","code":".beforeTurn"},{"type":"text","text":", executes it. If it returns "},{"code":"true","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"or sets "},{"type":"codeVoice","code":"shouldQuit"},{"type":"text","text":", further processing stops."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Main Action Handling","type":"text"}]},{"text":": If the command was not fully handled by ","type":"text"},{"code":"beforeTurn","type":"codeVoice"},{"text":" events:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a. Retrieves the appropriate "},{"type":"codeVoice","code":"ActionHandler"},{"text":" for the command’s verb from the","type":"text"},{"type":"text","text":" "},{"text":"engine’s ","type":"text"},{"code":"actionHandlers","type":"codeVoice"},{"type":"text","text":" registry."},{"text":" ","type":"text"},{"type":"text","text":"b. If a handler is found:"},{"text":" ","type":"text"},{"type":"text","text":"i. Calls the handler’s "},{"type":"codeVoice","code":"validate(context:)"},{"type":"text","text":" method. If validation throws an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ActionResponse"},{"type":"text","text":", reports it and stops."},{"text":" ","type":"text"},{"text":"ii. Calls the handler’s ","type":"text"},{"type":"codeVoice","code":"process(context:)"},{"type":"text","text":" method. This typically returns an"},{"type":"text","text":" "},{"code":"ActionResult","type":"codeVoice"},{"text":" containing state changes and a message.","type":"text"},{"text":" ","type":"text"},{"text":"iii. Applies any ","type":"text"},{"code":"StateChange","type":"codeVoice"},{"type":"text","text":"s from the "},{"code":"ActionResult","type":"codeVoice"},{"type":"text","text":" to "},{"code":"gameState","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"iv. Prints the "},{"type":"codeVoice","code":"ActionResult.message"},{"type":"text","text":" to the player."},{"text":" ","type":"text"},{"text":"v. Calls the handler’s ","type":"text"},{"type":"codeVoice","code":"postProcess(context:result:)"},{"type":"text","text":" method for any final actions."},{"type":"text","text":" "},{"text":"vi. Processes any ","type":"text"},{"type":"codeVoice","code":"SideEffect"},{"text":"s from the ","type":"text"},{"type":"codeVoice","code":"ActionResult"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"c. If no "},{"type":"codeVoice","code":"ActionHandler"},{"text":" is found for the verb, reports an ","type":"text"},{"type":"codeVoice","code":"ActionResponse.unknownVerb"},{"type":"text","text":" error."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Item "},{"code":"afterTurn","type":"codeVoice"},{"text":" Events","type":"text"}]},{"type":"text","text":": Similar to "},{"code":"beforeTurn","type":"codeVoice"},{"type":"text","text":", executes "},{"type":"codeVoice","code":".afterTurn"},{"type":"text","text":" item event handlers."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Location "},{"type":"codeVoice","code":"afterTurn"},{"text":" Events","type":"text"}]},{"type":"text","text":": Similar to "},{"type":"codeVoice","code":"beforeTurn"},{"text":", executes ","type":"text"},{"type":"codeVoice","code":".afterTurn"},{"text":" location event handlers.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Any ","type":"text"},{"code":"ActionResponse","type":"codeVoice"},{"text":" errors thrown during this process are caught and reported to the player.","type":"text"},{"type":"text","text":" "},{"text":"Other errors are logged.","type":"text"}]}]}],"references":{"doc://GnustoEngine/documentation/GnustoEngine/GameEngine":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine","url":"\/documentation\/gnustoengine\/gameengine","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"text":"GameEngine","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"The main orchestrator for an interactive fiction game, responsible for managing","type":"text"},{"type":"text","text":" "},{"text":"the game’s state, running the primary game loop, and coordinating interactions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"between the player (via an "},{"type":"codeVoice","code":"IOHandler"},{"text":"), the command ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", and the various","type":"text"},{"text":" ","type":"text"},{"text":"game logic handlers (","type":"text"},{"code":"ActionHandler","type":"codeVoice"},{"type":"text","text":", "},{"code":"ItemEventHandler","type":"codeVoice"},{"type":"text","text":", "},{"code":"LocationEventHandler","type":"codeVoice"},{"type":"text","text":")."}],"title":"GameEngine","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GameEngine"}]},"doc://GnustoEngine/documentation/GnustoEngine/Command":{"title":"Command","url":"\/documentation\/gnustoengine\/command","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Represents a structured and validated player command, ready for the "},{"type":"codeVoice","code":"GameEngine"},{"text":" to execute.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Command","kind":"identifier"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","navigatorTitle":[{"kind":"identifier","text":"Command"}]},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine/execute(command:)":{"title":"execute(command:)","kind":"symbol","abstract":[{"type":"text","text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers."}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)","type":"topic","role":"symbol","url":"\/documentation\/gnustoengine\/gameengine\/execute(command:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"command"},{"kind":"text","text":": "},{"text":"Command","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}]},"doc://GnustoEngine/documentation/GnustoEngine":{"abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","role":"collection","url":"\/documentation\/gnustoengine","kind":"symbol","type":"topic","title":"GnustoEngine"}}}