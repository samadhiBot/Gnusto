{"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine"]]},"metadata":{"modules":[{"name":"GnustoEngine"}],"symbolKind":"method","externalID":"s:12GnustoEngine04GameB0C7execute7commandyAA7CommandV_tYaF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"("},{"text":"command","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Command","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"title":"execute(command:)","role":"symbol","roleHeading":"Instance Method","extendedModule":"GnustoEngine"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"command"},{"kind":"text","text":": "},{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","text":"Command","preciseIdentifier":"s:12GnustoEngine7CommandV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Command"},{"type":"text","text":" object to execute."}]}],"name":"command"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This is a central method in processing player actions. It performs the following sequence:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Item ","type":"text"},{"code":"beforeTurn","type":"codeVoice"},{"text":" Events","type":"text"}]},{"type":"text","text":": For every item in the player’s current location or"},{"text":" ","type":"text"},{"text":"inventory that has an ","type":"text"},{"type":"codeVoice","code":"ItemEventHandler"},{"type":"text","text":" registered for "},{"code":".beforeTurn","type":"codeVoice"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"executes that handler. If any handler returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" (indicating it fully handled"},{"type":"text","text":" "},{"type":"text","text":"the command or turn) or sets "},{"type":"codeVoice","code":"shouldQuit"},{"type":"text","text":", further processing of the command stops."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Location ","type":"text"},{"type":"codeVoice","code":"beforeTurn"},{"text":" Events","type":"text"}],"type":"strong"},{"text":": If the player’s current location has a","type":"text"},{"type":"text","text":" "},{"code":"LocationEventHandler","type":"codeVoice"},{"text":" registered for ","type":"text"},{"code":".beforeTurn","type":"codeVoice"},{"type":"text","text":", executes it. If it returns "},{"type":"codeVoice","code":"true"},{"text":" ","type":"text"},{"text":"or sets ","type":"text"},{"type":"codeVoice","code":"shouldQuit"},{"type":"text","text":", further processing stops."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Main Action Handling"}],"type":"strong"},{"type":"text","text":": If the command was not fully handled by "},{"type":"codeVoice","code":"beforeTurn"},{"type":"text","text":" events:"},{"type":"text","text":" "},{"text":"a. Retrieves the appropriate ","type":"text"},{"code":"ActionHandler","type":"codeVoice"},{"type":"text","text":" for the command’s verb from the"},{"type":"text","text":" "},{"text":"engine’s ","type":"text"},{"type":"codeVoice","code":"actionHandlers"},{"type":"text","text":" registry."},{"text":" ","type":"text"},{"text":"b. If a handler is found:","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"i. Calls the handler’s "},{"type":"codeVoice","code":"validate(context:)"},{"text":" method. If validation throws an","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ActionResponse"},{"type":"text","text":", reports it and stops."},{"text":" ","type":"text"},{"text":"ii. Calls the handler’s ","type":"text"},{"code":"process(context:)","type":"codeVoice"},{"text":" method. This typically returns an","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ActionResult"},{"text":" containing state changes and a message.","type":"text"},{"type":"text","text":" "},{"text":"iii. Applies any ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"text":"s from the ","type":"text"},{"code":"ActionResult","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"gameState"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iv. Prints the "},{"type":"codeVoice","code":"ActionResult.message"},{"text":" to the player.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"v. Calls the handler’s "},{"type":"codeVoice","code":"postProcess(context:result:)"},{"text":" method for any final actions.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"vi. Processes any "},{"type":"codeVoice","code":"SideEffect"},{"text":"s from the ","type":"text"},{"code":"ActionResult","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"c. If no "},{"type":"codeVoice","code":"ActionHandler"},{"text":" is found for the verb, reports an ","type":"text"},{"code":"ActionResponse.unknownVerb","type":"codeVoice"},{"type":"text","text":" error."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Item "},{"type":"codeVoice","code":"afterTurn"},{"type":"text","text":" Events"}]},{"text":": Similar to ","type":"text"},{"type":"codeVoice","code":"beforeTurn"},{"text":", executes ","type":"text"},{"type":"codeVoice","code":".afterTurn"},{"text":" item event handlers.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Location ","type":"text"},{"code":"afterTurn","type":"codeVoice"},{"type":"text","text":" Events"}]},{"text":": Similar to ","type":"text"},{"type":"codeVoice","code":"beforeTurn"},{"type":"text","text":", executes "},{"type":"codeVoice","code":".afterTurn"},{"text":" location event handlers.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Any ","type":"text"},{"type":"codeVoice","code":"ActionResponse"},{"text":" errors thrown during this process are caught and reported to the player.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Other errors are logged."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers.","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/gameengine\/execute(command:)"]}],"references":{"doc://GnustoEngine/documentation/GnustoEngine":{"kind":"symbol","abstract":[],"url":"\/documentation\/gnustoengine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic","title":"GnustoEngine","role":"collection"},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine/execute(command:)":{"title":"execute(command:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"command","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Command","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers."}],"kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)","url":"\/documentation\/gnustoengine\/gameengine\/execute(command:)"},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine":{"fragments":[{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"text":"GameEngine","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The main orchestrator for an interactive fiction game, responsible for managing"},{"type":"text","text":" "},{"text":"the game’s state, running the primary game loop, and coordinating interactions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"between the player (via an "},{"type":"codeVoice","code":"IOHandler"},{"type":"text","text":"), the command "},{"type":"codeVoice","code":"Parser"},{"text":", and the various","type":"text"},{"type":"text","text":" "},{"text":"game logic handlers (","type":"text"},{"type":"codeVoice","code":"ActionHandler"},{"text":", ","type":"text"},{"code":"ItemEventHandler","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"LocationEventHandler"},{"text":").","type":"text"}],"title":"GameEngine","navigatorTitle":[{"text":"GameEngine","kind":"identifier"}],"url":"\/documentation\/gnustoengine\/gameengine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine","kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/Command":{"navigatorTitle":[{"kind":"identifier","text":"Command"}],"url":"\/documentation\/gnustoengine\/command","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Command","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"Represents a structured and validated player command, ready for the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" to execute."}],"role":"symbol","title":"Command","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command"}}}