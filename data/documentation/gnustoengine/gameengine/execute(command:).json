{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)"},"abstract":[{"text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"modules":[{"name":"GnustoEngine"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"command"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV","text":"Command"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"roleHeading":"Instance Method","title":"execute(command:)","externalID":"s:12GnustoEngine04GameB0C7execute7commandyAA7CommandV_tYaF","symbolKind":"method","extendedModule":"GnustoEngine"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"command"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","text":"Command"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"command","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"Command","type":"codeVoice"},{"type":"text","text":" object to execute."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This is a central method in processing player actions. It performs the following sequence:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Item "},{"code":"beforeTurn","type":"codeVoice"},{"text":" Events","type":"text"}]},{"type":"text","text":": For every item in the player’s current location or"},{"type":"text","text":" "},{"type":"text","text":"inventory that has an "},{"code":"ItemEventHandler","type":"codeVoice"},{"text":" registered for ","type":"text"},{"type":"codeVoice","code":".beforeTurn"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"executes that handler. If any handler returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" (indicating it fully handled"},{"type":"text","text":" "},{"type":"text","text":"the command or turn) or sets "},{"type":"codeVoice","code":"shouldQuit"},{"text":", further processing of the command stops.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Location ","type":"text"},{"type":"codeVoice","code":"beforeTurn"},{"type":"text","text":" Events"}]},{"type":"text","text":": If the player’s current location has a"},{"type":"text","text":" "},{"code":"LocationEventHandler","type":"codeVoice"},{"text":" registered for ","type":"text"},{"code":".beforeTurn","type":"codeVoice"},{"text":", executes it. If it returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" ","type":"text"},{"type":"text","text":"or sets "},{"code":"shouldQuit","type":"codeVoice"},{"type":"text","text":", further processing stops."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Main Action Handling","type":"text"}]},{"type":"text","text":": If the command was not fully handled by "},{"type":"codeVoice","code":"beforeTurn"},{"text":" events:","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a. Retrieves the appropriate "},{"type":"codeVoice","code":"ActionHandler"},{"text":" for the command’s verb from the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"engine’s "},{"type":"codeVoice","code":"actionHandlers"},{"type":"text","text":" registry."},{"text":" ","type":"text"},{"type":"text","text":"b. If a handler is found:"},{"text":" ","type":"text"},{"text":"i. Calls the handler’s ","type":"text"},{"type":"codeVoice","code":"validate(context:)"},{"type":"text","text":" method. If validation throws an"},{"type":"text","text":" "},{"type":"codeVoice","code":"ActionResponse"},{"type":"text","text":", reports it and stops."},{"text":" ","type":"text"},{"type":"text","text":"ii. Calls the handler’s "},{"code":"process(context:)","type":"codeVoice"},{"type":"text","text":" method. This typically returns an"},{"type":"text","text":" "},{"code":"ActionResult","type":"codeVoice"},{"text":" containing state changes and a message.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iii. Applies any "},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":"s from the "},{"type":"codeVoice","code":"ActionResult"},{"type":"text","text":" to "},{"type":"codeVoice","code":"gameState"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"iv. Prints the "},{"type":"codeVoice","code":"ActionResult.message"},{"type":"text","text":" to the player."},{"text":" ","type":"text"},{"type":"text","text":"v. Calls the handler’s "},{"code":"postProcess(context:result:)","type":"codeVoice"},{"text":" method for any final actions.","type":"text"},{"type":"text","text":" "},{"text":"vi. Processes any ","type":"text"},{"code":"SideEffect","type":"codeVoice"},{"text":"s from the ","type":"text"},{"type":"codeVoice","code":"ActionResult"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"c. If no "},{"code":"ActionHandler","type":"codeVoice"},{"text":" is found for the verb, reports an ","type":"text"},{"code":"ActionResponse.unknownVerb","type":"codeVoice"},{"text":" error.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Item ","type":"text"},{"type":"codeVoice","code":"afterTurn"},{"text":" Events","type":"text"}],"type":"strong"},{"type":"text","text":": Similar to "},{"type":"codeVoice","code":"beforeTurn"},{"type":"text","text":", executes "},{"code":".afterTurn","type":"codeVoice"},{"type":"text","text":" item event handlers."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Location ","type":"text"},{"type":"codeVoice","code":"afterTurn"},{"type":"text","text":" Events"}]},{"type":"text","text":": Similar to "},{"code":"beforeTurn","type":"codeVoice"},{"text":", executes ","type":"text"},{"type":"codeVoice","code":".afterTurn"},{"type":"text","text":" location event handlers."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any "},{"code":"ActionResponse","type":"codeVoice"},{"text":" errors thrown during this process are caught and reported to the player.","type":"text"},{"text":" ","type":"text"},{"text":"Other errors are logged.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine"]]},"variants":[{"paths":["\/documentation\/gnustoengine\/gameengine\/execute(command:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://GnustoEngine/documentation/GnustoEngine/Command":{"url":"\/documentation\/gnustoengine\/command","kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","type":"topic","title":"Command","abstract":[{"text":"Represents a structured and validated player command, ready for the ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" to execute."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Command"}],"navigatorTitle":[{"text":"Command","kind":"identifier"}]},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine/execute(command:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"command"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV","text":"Command"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"url":"\/documentation\/gnustoengine\/gameengine\/execute(command:)","role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)","title":"execute(command:)"},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine":{"navigatorTitle":[{"kind":"identifier","text":"GameEngine"}],"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"GameEngine"}],"title":"GameEngine","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/gnustoengine\/gameengine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine","abstract":[{"type":"text","text":"The main orchestrator for an interactive fiction game, responsible for managing"},{"text":" ","type":"text"},{"text":"the game’s state, running the primary game loop, and coordinating interactions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"between the player (via an "},{"code":"IOHandler","type":"codeVoice"},{"type":"text","text":"), the command "},{"code":"Parser","type":"codeVoice"},{"text":", and the various","type":"text"},{"type":"text","text":" "},{"text":"game logic handlers (","type":"text"},{"type":"codeVoice","code":"ActionHandler"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ItemEventHandler"},{"type":"text","text":", "},{"type":"codeVoice","code":"LocationEventHandler"},{"type":"text","text":")."}]},"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","type":"topic","url":"\/documentation\/gnustoengine","abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","title":"GnustoEngine","kind":"symbol"}}}