{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"command","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Command","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"command","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Command"},{"type":"text","text":" object to execute."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This is a central method in processing player actions. It performs the following sequence:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Item ","type":"text"},{"type":"codeVoice","code":"beforeTurn"},{"text":" Events","type":"text"}]},{"type":"text","text":": For every item in the player’s current location or"},{"text":" ","type":"text"},{"type":"text","text":"inventory that has an "},{"type":"codeVoice","code":"ItemEventHandler"},{"text":" registered for ","type":"text"},{"type":"codeVoice","code":".beforeTurn"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"executes that handler. If any handler returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" (indicating it fully handled"},{"type":"text","text":" "},{"type":"text","text":"the command or turn) or sets "},{"code":"shouldQuit","type":"codeVoice"},{"type":"text","text":", further processing of the command stops."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Location ","type":"text"},{"code":"beforeTurn","type":"codeVoice"},{"text":" Events","type":"text"}],"type":"strong"},{"text":": If the player’s current location has a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"LocationEventHandler"},{"type":"text","text":" registered for "},{"code":".beforeTurn","type":"codeVoice"},{"text":", executes it. If it returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" ","type":"text"},{"text":"or sets ","type":"text"},{"type":"codeVoice","code":"shouldQuit"},{"type":"text","text":", further processing stops."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Main Action Handling"}],"type":"strong"},{"type":"text","text":": If the command was not fully handled by "},{"code":"beforeTurn","type":"codeVoice"},{"text":" events:","type":"text"},{"type":"text","text":" "},{"text":"a. Retrieves the appropriate ","type":"text"},{"code":"ActionHandler","type":"codeVoice"},{"text":" for the command’s verb from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"engine’s "},{"code":"actionHandlers","type":"codeVoice"},{"type":"text","text":" registry."},{"text":" ","type":"text"},{"type":"text","text":"b. If a handler is found:"},{"text":" ","type":"text"},{"text":"i. Calls the handler’s ","type":"text"},{"type":"codeVoice","code":"validate(context:)"},{"type":"text","text":" method. If validation throws an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ActionResponse"},{"text":", reports it and stops.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ii. Calls the handler’s "},{"code":"process(context:)","type":"codeVoice"},{"type":"text","text":" method. This typically returns an"},{"type":"text","text":" "},{"type":"codeVoice","code":"ActionResult"},{"type":"text","text":" containing state changes and a message."},{"type":"text","text":" "},{"text":"iii. Applies any ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":"s from the "},{"code":"ActionResult","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"gameState"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"iv. Prints the "},{"code":"ActionResult.message","type":"codeVoice"},{"text":" to the player.","type":"text"},{"type":"text","text":" "},{"text":"v. Calls the handler’s ","type":"text"},{"code":"postProcess(context:result:)","type":"codeVoice"},{"type":"text","text":" method for any final actions."},{"text":" ","type":"text"},{"type":"text","text":"vi. Processes any "},{"type":"codeVoice","code":"SideEffect"},{"text":"s from the ","type":"text"},{"type":"codeVoice","code":"ActionResult"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"c. If no "},{"type":"codeVoice","code":"ActionHandler"},{"type":"text","text":" is found for the verb, reports an "},{"type":"codeVoice","code":"ActionResponse.unknownVerb"},{"text":" error.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Item ","type":"text"},{"code":"afterTurn","type":"codeVoice"},{"type":"text","text":" Events"}],"type":"strong"},{"type":"text","text":": Similar to "},{"type":"codeVoice","code":"beforeTurn"},{"type":"text","text":", executes "},{"type":"codeVoice","code":".afterTurn"},{"text":" item event handlers.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Location ","type":"text"},{"type":"codeVoice","code":"afterTurn"},{"type":"text","text":" Events"}],"type":"strong"},{"type":"text","text":": Similar to "},{"type":"codeVoice","code":"beforeTurn"},{"text":", executes ","type":"text"},{"code":".afterTurn","type":"codeVoice"},{"type":"text","text":" location event handlers."}]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any "},{"code":"ActionResponse","type":"codeVoice"},{"text":" errors thrown during this process are caught and reported to the player.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Other errors are logged."}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/gameengine\/execute(command:)"]}],"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"GnustoEngine"}],"title":"execute(command:)","role":"symbol","extendedModule":"GnustoEngine","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:12GnustoEngine04GameB0C7execute7commandyAA7CommandV_tYaF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"command","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Command","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}]},"kind":"symbol","abstract":[{"type":"text","text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers."}],"references":{"doc://GnustoEngine/documentation/GnustoEngine/GameEngine/execute(command:)":{"url":"\/documentation\/gnustoengine\/gameengine\/execute(command:)","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"command","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine7CommandV","text":"Command","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic","title":"execute(command:)","role":"symbol","kind":"symbol","abstract":[{"text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers.","type":"text"}]},"doc://GnustoEngine/documentation/GnustoEngine/Command":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Command","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","navigatorTitle":[{"text":"Command","kind":"identifier"}],"title":"Command","abstract":[{"type":"text","text":"Represents a structured and validated player command, ready for the "},{"type":"codeVoice","code":"GameEngine"},{"text":" to execute.","type":"text"}],"url":"\/documentation\/gnustoengine\/command"},"doc://GnustoEngine/documentation/GnustoEngine":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic","url":"\/documentation\/gnustoengine","kind":"symbol","abstract":[],"title":"GnustoEngine","role":"collection"},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine":{"navigatorTitle":[{"text":"GameEngine","kind":"identifier"}],"title":"GameEngine","url":"\/documentation\/gnustoengine\/gameengine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine","abstract":[{"text":"The main orchestrator for an interactive fiction game, responsible for managing","type":"text"},{"type":"text","text":" "},{"text":"the game’s state, running the primary game loop, and coordinating interactions","type":"text"},{"text":" ","type":"text"},{"text":"between the player (via an ","type":"text"},{"code":"IOHandler","type":"codeVoice"},{"type":"text","text":"), the command "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", and the various"},{"text":" ","type":"text"},{"type":"text","text":"game logic handlers ("},{"type":"codeVoice","code":"ActionHandler"},{"type":"text","text":", "},{"type":"codeVoice","code":"ItemEventHandler"},{"text":", ","type":"text"},{"type":"codeVoice","code":"LocationEventHandler"},{"type":"text","text":")."}],"fragments":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"text":"GameEngine","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol"}}}