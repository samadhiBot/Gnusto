{"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"text":"(","kind":"text"},{"text":"command","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","text":"Command","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" object to execute.","type":"text"}]}],"name":"command"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This is a central method in processing player actions. It performs the following sequence:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Item ","type":"text"},{"type":"codeVoice","code":"beforeTurn"},{"text":" Events","type":"text"}]},{"text":": For every item in the player’s current location or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"inventory that has an "},{"code":"ItemEventHandler","type":"codeVoice"},{"text":" registered for ","type":"text"},{"code":".beforeTurn","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"executes that handler. If any handler returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" (indicating it fully handled"},{"text":" ","type":"text"},{"type":"text","text":"the command or turn) or sets "},{"code":"shouldQuit","type":"codeVoice"},{"text":", further processing of the command stops.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Location "},{"code":"beforeTurn","type":"codeVoice"},{"type":"text","text":" Events"}]},{"type":"text","text":": If the player’s current location has a"},{"type":"text","text":" "},{"code":"LocationEventHandler","type":"codeVoice"},{"text":" registered for ","type":"text"},{"type":"codeVoice","code":".beforeTurn"},{"type":"text","text":", executes it. If it returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"or sets "},{"code":"shouldQuit","type":"codeVoice"},{"text":", further processing stops.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Main Action Handling"}],"type":"strong"},{"type":"text","text":": If the command was not fully handled by "},{"code":"beforeTurn","type":"codeVoice"},{"text":" events:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a. Retrieves the appropriate "},{"type":"codeVoice","code":"ActionHandler"},{"text":" for the command’s verb from the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"engine’s "},{"code":"actionHandlers","type":"codeVoice"},{"text":" registry.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"b. If a handler is found:"},{"type":"text","text":" "},{"type":"text","text":"i. Calls the handler’s "},{"code":"validate(context:)","type":"codeVoice"},{"text":" method. If validation throws an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ActionResponse"},{"type":"text","text":", reports it and stops."},{"type":"text","text":" "},{"type":"text","text":"ii. Calls the handler’s "},{"type":"codeVoice","code":"process(context:)"},{"type":"text","text":" method. This typically returns an"},{"type":"text","text":" "},{"type":"codeVoice","code":"ActionResult"},{"type":"text","text":" containing state changes and a message."},{"type":"text","text":" "},{"text":"iii. Applies any ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"text":"s from the ","type":"text"},{"type":"codeVoice","code":"ActionResult"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"gameState"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"iv. Prints the "},{"type":"codeVoice","code":"ActionResult.message"},{"type":"text","text":" to the player."},{"type":"text","text":" "},{"text":"v. Calls the handler’s ","type":"text"},{"code":"postProcess(context:result:)","type":"codeVoice"},{"text":" method for any final actions.","type":"text"},{"text":" ","type":"text"},{"text":"vi. Processes any ","type":"text"},{"code":"SideEffect","type":"codeVoice"},{"type":"text","text":"s from the "},{"type":"codeVoice","code":"ActionResult"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"c. If no "},{"code":"ActionHandler","type":"codeVoice"},{"type":"text","text":" is found for the verb, reports an "},{"type":"codeVoice","code":"ActionResponse.unknownVerb"},{"text":" error.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Item "},{"type":"codeVoice","code":"afterTurn"},{"type":"text","text":" Events"}]},{"type":"text","text":": Similar to "},{"type":"codeVoice","code":"beforeTurn"},{"type":"text","text":", executes "},{"code":".afterTurn","type":"codeVoice"},{"type":"text","text":" item event handlers."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Location "},{"code":"afterTurn","type":"codeVoice"},{"type":"text","text":" Events"}]},{"type":"text","text":": Similar to "},{"code":"beforeTurn","type":"codeVoice"},{"text":", executes ","type":"text"},{"type":"codeVoice","code":".afterTurn"},{"type":"text","text":" location event handlers."}]}]}]},{"inlineContent":[{"type":"text","text":"Any "},{"code":"ActionResponse","type":"codeVoice"},{"type":"text","text":" errors thrown during this process are caught and reported to the player."},{"type":"text","text":" "},{"type":"text","text":"Other errors are logged."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/gameengine\/execute(command:)"]}],"sections":[],"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:12GnustoEngine04GameB0C7execute7commandyAA7CommandV_tYaF","modules":[{"name":"GnustoEngine"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"kind":"text","text":"("},{"text":"command","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine7CommandV","kind":"typeIdentifier","text":"Command"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"extendedModule":"GnustoEngine","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"execute(command:)"},"references":{"doc://GnustoEngine/documentation/GnustoEngine":{"url":"\/documentation\/gnustoengine","role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","title":"GnustoEngine","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine/execute(command:)":{"type":"topic","url":"\/documentation\/gnustoengine\/gameengine\/execute(command:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"command","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Command","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Executes a parsed game command, orchestrating calls to event handlers and action handlers."}],"kind":"symbol","title":"execute(command:)","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine\/execute(command:)"},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine":{"navigatorTitle":[{"text":"GameEngine","kind":"identifier"}],"fragments":[{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"text":"GameEngine","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/gnustoengine\/gameengine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine","abstract":[{"type":"text","text":"The main orchestrator for an interactive fiction game, responsible for managing"},{"text":" ","type":"text"},{"text":"the game’s state, running the primary game loop, and coordinating interactions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"between the player (via an "},{"type":"codeVoice","code":"IOHandler"},{"text":"), the command ","type":"text"},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and the various"},{"type":"text","text":" "},{"type":"text","text":"game logic handlers ("},{"code":"ActionHandler","type":"codeVoice"},{"type":"text","text":", "},{"code":"ItemEventHandler","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"LocationEventHandler"},{"type":"text","text":")."}],"title":"GameEngine","role":"symbol","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/Command":{"type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Command","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/gnustoengine\/command","navigatorTitle":[{"text":"Command","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a structured and validated player command, ready for the "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" to execute."}],"title":"Command"}}}