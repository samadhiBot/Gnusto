{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"LocationValidateHandler","kind":"identifier"},{"kind":"text","text":" = ("},{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location","text":"Location","preciseIdentifier":"s:12GnustoEngine8LocationV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:12GnustoEngine10StateValueO","text":"StateValue","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StateValue","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The specific "},{"type":"codeVoice","code":"Location"},{"text":" instance whose attribute is being validated.","type":"text"}]}],"name":"location"},{"content":[{"inlineContent":[{"type":"text","text":"The proposed new "},{"type":"codeVoice","code":"StateValue"},{"text":" for the attribute.","type":"text"}],"type":"paragraph"}],"name":"newValue"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the "},{"type":"codeVoice","code":"newValue"},{"text":" is valid; ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similar to "},{"type":"codeVoice","code":"ItemValidateHandler"},{"text":", but for ","type":"text"},{"code":"Location","type":"codeVoice"},{"type":"text","text":" attributes."}]},{"style":"note","content":[{"inlineContent":[{"text":"An ","type":"text"},{"code":"ActionResponse","type":"codeVoice"},{"type":"text","text":" or other error if validation fails with a specific reason."}],"type":"paragraph"}],"type":"aside","name":"Throws"}]}],"variants":[{"paths":["\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"GnustoEngine"}],"roleHeading":"Type Alias","role":"symbol","symbolKind":"typealias","title":"DynamicAttributeRegistry.LocationValidateHandler","externalID":"s:12GnustoEngine24DynamicAttributeRegistryV23LocationValidateHandlera","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LocationValidateHandler"}],"navigatorTitle":[{"text":"LocationValidateHandler","kind":"identifier"}]},"abstract":[{"type":"text","text":"A closure that validates a proposed new value for a location’s attribute."}],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry"]]},"sections":[],"references":{"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/LocationValidateHandler":{"navigatorTitle":[{"text":"LocationValidateHandler","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"LocationValidateHandler","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler","title":"DynamicAttributeRegistry.LocationValidateHandler","type":"topic","abstract":[{"text":"A closure that validates a proposed new value for a location’s attribute.","type":"text"}]},"doc://GnustoEngine/documentation/GnustoEngine":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic","url":"\/documentation\/gnustoengine","kind":"symbol","abstract":[],"title":"GnustoEngine","role":"collection"},"doc://GnustoEngine/documentation/GnustoEngine/Location":{"navigatorTitle":[{"text":"Location","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Location","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/gnustoengine\/location","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location","title":"Location","type":"topic","abstract":[{"type":"text","text":"Represents a distinct place or room within the game world that the player can visit."}]},"doc://GnustoEngine/documentation/GnustoEngine/StateValue":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateValue"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StateValue","navigatorTitle":[{"text":"StateValue","kind":"identifier"}],"title":"StateValue","url":"\/documentation\/gnustoengine\/statevalue","abstract":[{"type":"text","text":"A type-safe enumeration that represents the various kinds of values that game state"},{"type":"text","text":" "},{"text":"properties can hold.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry":{"navigatorTitle":[{"kind":"identifier","text":"DynamicAttributeRegistry"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicAttributeRegistry","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/gnustoengine\/dynamicattributeregistry","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry","title":"DynamicAttributeRegistry","type":"topic","abstract":[{"text":"A registry to hold dynamically computed logic (getters) and validation rules (setters\/validators)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for item and location attributes."}]}}}