{"variants":[{"paths":["\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"navigatorTitle":[{"text":"LocationValidateHandler","kind":"identifier"}],"symbolKind":"typealias","role":"symbol","roleHeading":"Type Alias","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"LocationValidateHandler","kind":"identifier"}],"externalID":"s:12GnustoEngine24DynamicAttributeRegistryV23LocationValidateHandlera","modules":[{"name":"GnustoEngine"}],"title":"DynamicAttributeRegistry.LocationValidateHandler"},"sections":[],"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationValidateHandler"},{"text":" = (","kind":"text"},{"text":"Location","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location","preciseIdentifier":"s:12GnustoEngine8LocationV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"StateValue","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StateValue","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10StateValueO"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"kind":"symbol","abstract":[{"type":"text","text":"Closure type for validating a new value for a location property."},{"type":"text","text":" "},{"type":"text","text":"Takes the specific Location instance and the proposed new StateValue."},{"type":"text","text":" "},{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the value is valid, "},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Throws an error if validation fails with a specific reason."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry"]]},"references":{"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/LocationValidateHandler":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationValidateHandler"}],"type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler","url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler","abstract":[{"text":"Closure type for validating a new value for a location property.","type":"text"},{"text":" ","type":"text"},{"text":"Takes the specific Location instance and the proposed new StateValue.","type":"text"},{"text":" ","type":"text"},{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the value is valid, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Throws an error if validation fails with a specific reason."}],"kind":"symbol","title":"DynamicAttributeRegistry.LocationValidateHandler","navigatorTitle":[{"text":"LocationValidateHandler","kind":"identifier"}],"role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine":{"title":"GnustoEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/gnustoengine","abstract":[]},"doc://GnustoEngine/documentation/GnustoEngine/Location":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location","url":"\/documentation\/gnustoengine\/location","abstract":[{"type":"text","text":"Represents a location (room) within the game world."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"Location","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Location"}],"role":"symbol","title":"Location"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry":{"title":"DynamicAttributeRegistry","url":"\/documentation\/gnustoengine\/dynamicattributeregistry","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicAttributeRegistry"}],"kind":"symbol","type":"topic","abstract":[{"text":"A registry to hold dynamically computed logic and validation rules for properties.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"DynamicAttributeRegistry","kind":"identifier"}]},"doc://GnustoEngine/documentation/GnustoEngine/StateValue":{"type":"topic","title":"StateValue","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"StateValue"}],"abstract":[{"type":"text","text":"Represents the possible types of values that can be tracked in state changes."},{"text":" ","type":"text"},{"text":"Ensures values are both Codable and Sendable.","type":"text"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StateValue","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateValue"}],"role":"symbol","url":"\/documentation\/gnustoengine\/statevalue"}}}