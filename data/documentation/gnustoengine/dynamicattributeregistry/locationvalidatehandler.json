{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LocationValidateHandler"},{"kind":"text","text":" = ("},{"text":"Location","kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location","preciseIdentifier":"s:12GnustoEngine8LocationV"},{"text":", ","kind":"text"},{"text":"StateValue","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StateValue","preciseIdentifier":"s:12GnustoEngine10StateValueO","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The specific "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" instance whose attribute is being validated."}]}],"name":"location"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The proposed new ","type":"text"},{"code":"StateValue","type":"codeVoice"},{"type":"text","text":" for the attribute."}]}],"name":"newValue"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the "},{"code":"newValue","type":"codeVoice"},{"type":"text","text":" is valid; "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Similar to ","type":"text"},{"type":"codeVoice","code":"ItemValidateHandler"},{"type":"text","text":", but for "},{"code":"Location","type":"codeVoice"},{"type":"text","text":" attributes."}]},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"ActionResponse"},{"type":"text","text":" or other error if validation fails with a specific reason."}]}],"style":"note"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler"},"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler"]}],"sections":[],"kind":"symbol","metadata":{"roleHeading":"Type Alias","title":"DynamicAttributeRegistry.LocationValidateHandler","navigatorTitle":[{"kind":"identifier","text":"LocationValidateHandler"}],"modules":[{"name":"GnustoEngine"}],"externalID":"s:12GnustoEngine24DynamicAttributeRegistryV23LocationValidateHandlera","symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"LocationValidateHandler","kind":"identifier"}],"role":"symbol"},"abstract":[{"type":"text","text":"A closure that validates a proposed new value for a location’s attribute."}],"references":{"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/LocationValidateHandler":{"navigatorTitle":[{"text":"LocationValidateHandler","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler","title":"DynamicAttributeRegistry.LocationValidateHandler","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LocationValidateHandler"}],"kind":"symbol","url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler","abstract":[{"text":"A closure that validates a proposed new value for a location’s attribute.","type":"text"}],"role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/Location":{"title":"Location","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location","abstract":[{"type":"text","text":"Represents a distinct place or room within the game world that the player can visit."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Location","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Location"}],"type":"topic","url":"\/documentation\/gnustoengine\/location"},"doc://GnustoEngine/documentation/GnustoEngine":{"url":"\/documentation\/gnustoengine","role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","title":"GnustoEngine","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/StateValue":{"role":"symbol","abstract":[{"type":"text","text":"A type-safe enumeration that represents the various kinds of values that game state"},{"type":"text","text":" "},{"type":"text","text":"properties can hold."}],"navigatorTitle":[{"text":"StateValue","kind":"identifier"}],"type":"topic","url":"\/documentation\/gnustoengine\/statevalue","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateValue","kind":"identifier"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StateValue","title":"StateValue","kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry","type":"topic","kind":"symbol","title":"DynamicAttributeRegistry","abstract":[{"text":"A registry to hold dynamically computed logic (getters) and validation rules (setters\/validators)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for item and location attributes."}],"navigatorTitle":[{"text":"DynamicAttributeRegistry","kind":"identifier"}],"url":"\/documentation\/gnustoengine\/dynamicattributeregistry","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicAttributeRegistry","kind":"identifier"}],"role":"symbol"}}}