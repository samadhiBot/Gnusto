{"metadata":{"navigatorTitle":[{"kind":"identifier","text":"LocationValidateHandler"}],"externalID":"s:12GnustoEngine24DynamicAttributeRegistryV23LocationValidateHandlera","role":"symbol","title":"DynamicAttributeRegistry.LocationValidateHandler","modules":[{"name":"GnustoEngine"}],"roleHeading":"Type Alias","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"LocationValidateHandler","kind":"identifier"}],"symbolKind":"typealias"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"A closure that validates a proposed new value for a location’s attribute.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry"]]},"variants":[{"paths":["\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationValidateHandler"},{"text":" = (","kind":"text"},{"text":"Location","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine8LocationV"},{"text":", ","kind":"text"},{"text":"StateValue","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10StateValueO","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StateValue"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"location","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The specific "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" instance whose attribute is being validated."}]}]},{"name":"newValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The proposed new "},{"code":"StateValue","type":"codeVoice"},{"text":" for the attribute.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the ","type":"text"},{"type":"codeVoice","code":"newValue"},{"type":"text","text":" is valid; "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Similar to ","type":"text"},{"type":"codeVoice","code":"ItemValidateHandler"},{"type":"text","text":", but for "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" attributes."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"An "},{"code":"ActionResponse","type":"codeVoice"},{"text":" or other error if validation fails with a specific reason.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Throws"}]}],"references":{"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/LocationValidateHandler":{"role":"symbol","type":"topic","title":"DynamicAttributeRegistry.LocationValidateHandler","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationValidateHandler"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler","url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler","abstract":[{"type":"text","text":"A closure that validates a proposed new value for a location’s attribute."}],"navigatorTitle":[{"text":"LocationValidateHandler","kind":"identifier"}]},"doc://GnustoEngine/documentation/GnustoEngine/Location":{"title":"Location","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Represents a distinct place or room within the game world that the player can visit."}],"navigatorTitle":[{"text":"Location","kind":"identifier"}],"url":"\/documentation\/gnustoengine\/location","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Location","kind":"identifier"}],"role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","title":"GnustoEngine","abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","url":"\/documentation\/gnustoengine","type":"topic","kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/StateValue":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"StateValue","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-safe enumeration that represents the various kinds of values that game state"},{"type":"text","text":" "},{"type":"text","text":"properties can hold."}],"navigatorTitle":[{"text":"StateValue","kind":"identifier"}],"kind":"symbol","title":"StateValue","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StateValue","url":"\/documentation\/gnustoengine\/statevalue","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicAttributeRegistry","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/gnustoengine\/dynamicattributeregistry","navigatorTitle":[{"text":"DynamicAttributeRegistry","kind":"identifier"}],"title":"DynamicAttributeRegistry","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry","abstract":[{"type":"text","text":"A registry to hold dynamically computed logic (getters) and validation rules (setters\/validators)"},{"type":"text","text":" "},{"text":"for item and location attributes.","type":"text"}]}}}