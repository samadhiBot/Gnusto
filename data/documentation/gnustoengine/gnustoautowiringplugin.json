{"abstract":[{"text":"Eliminate boilerplate with automatic ID generation and game setup.","type":"text"}],"seeAlsoSections":[{"anchor":"Game-Development-Guides","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameStructure","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Combat"],"generated":true,"title":"Game Development Guides"}],"variants":[{"paths":["\/documentation\/gnustoengine\/gnustoautowiringplugin"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"GnustoEngine"}],"title":"Gnusto Auto-Wiring Plugin","role":"article","roleHeading":"Article"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GnustoAutoWiringPlugin"},"kind":"article","primaryContentSections":[{"content":[{"level":2,"text":"Write Games, Not Boilerplate","type":"heading","anchor":"Write-Games-Not-Boilerplate"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"gnusto-auto-wiring.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Gnusto Interactive Fiction Engine lets you define your game world using a declarative syntax with strongly-typed IDs for compile-time safety. But declaring items and locations is only half the story. Somebody still needs to:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create all the strongly-typed ID constants"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Wire up items, locations, event handlers, property computers, daemons, and fuses into the game blueprint","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Keep everything up to date as game development goes on","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"This manual ID creation and instance wiring is tedious and error-prone. The Gnusto Auto-Wiring Plugin eliminates this burden by automatically generating all ID constants and blueprint wiring code. You focus on declaring your game world; the plugin takes care of the plumbing.","type":"text"}]},{"level":2,"text":"Why Use the Auto-Wiring Plugin?","type":"heading","anchor":"Why-Use-the-Auto-Wiring-Plugin"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Zero boilerplate"}]},{"type":"text","text":": Focus on game logic, not infrastructure"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Type safety","type":"text"}]},{"type":"text","text":": Strongly-typed IDs prevent runtime errors"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Automatic discovery","type":"text"}]},{"type":"text","text":": The plugin finds and wires up all your game elements"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Flexible structure"}]},{"type":"text","text":": Organize your code however you prefer"}]}]}]},{"level":2,"text":"What Gets Generated","type":"heading","anchor":"What-Gets-Generated"},{"type":"paragraph","inlineContent":[{"text":"The plugin scans your Swift source files and automatically generates the strongly typed IDs mentioned in your declarations, as well as the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameBlueprint","type":"reference"},{"text":" extensions necessary to bring your game world together.","type":"text"}]},{"level":3,"text":"ID Extensions","type":"heading","anchor":"ID-Extensions"},{"type":"paragraph","inlineContent":[{"text":"When you define an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Item"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Daemon"},{"text":" or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Fuse"},{"text":", or when you mention a new and custom ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GlobalID"},{"text":", the ","type":"text"},{"code":"GnustoAutoWiringPlugin","type":"codeVoice"},{"text":" creates the appropriate identifier.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Generated by GnustoAutoWiringPlugin","\/\/ Do not edit this file manually","","import GnustoEngine","","extension LocationID {","    static let aragainFalls = LocationID(\"aragainFalls\")","    static let attic = LocationID(\"attic\")","    ...","    static let westOfHouse = LocationID(\"westOfHouse\")","    static let windingPassage = LocationID(\"windingPassage\")","}","","extension ItemID {","    static let advertisement = ItemID(\"advertisement\")","    static let axe = ItemID(\"axe\")","    ...","    static let wrench = ItemID(\"wrench\")","    static let yellowButton = ItemID(\"yellowButton\")","}","","extension GlobalID {","    static let isBurnedOut = GlobalID(\"isBurnedOut\")","    static let rugMoved = GlobalID(\"rugMoved\")","    ...","    static let swordGlowLevel = GlobalID(\"swordGlowLevel\")","    static let trapDoorBarred = GlobalID(\"trapDoorBarred\")","}","","extension DaemonID {","    static let swordDaemon = DaemonID(\"swordDaemon\")","    static let thiefDaemon = DaemonID(\"thiefDaemon\")","    static let trollDaemon = DaemonID(\"trollDaemon\")","}"]},{"level":3,"text":"GameBlueprint Extensions","type":"heading","anchor":"GameBlueprint-Extensions"},{"type":"paragraph","inlineContent":[{"text":"The plugin aggregates all your game content into complete ","type":"text"},{"code":"GameBlueprint","type":"codeVoice"},{"text":" implementations.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can define game content in two ways:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define an area as an "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" with "},{"type":"codeVoice","code":"static"},{"type":"text","text":" properties, allowing you to divide the area into multiple extensions. The "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Zork"}]},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/samadhiBot\/Gnusto\/blob\/main\/Executables\/Zork1\/World\/BeneathHouse.swift","isActive":true},{"type":"text","text":" area is defined this way."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Define an area as a "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" with "},{"type":"codeVoice","code":"instance"},{"type":"text","text":" properties, allowing you to omit the "},{"type":"codeVoice","code":"static"},{"type":"text","text":" keyword. The "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloak of Darkness"}]},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/samadhiBot\/Gnusto\/blob\/main\/Executables\/CloakOfDarkness\/OperaHouse.swift"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"The plugin handles both ways, so use whichever feels best. You’re also free to create any file hierarchy you like, as long as the world definition exists somewhere in the project folder.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension Zork1 {","    public var items: [Item] {","        let coalMine = CoalMine()","        let thief = Thief()","","        return [","            BeneathHouse.axe,","            BeneathHouse.ownersManual,","            ...","            coalMine.bat,","            thief.largeBag,","        ]","    }","","    public var locations: [Location] {","        let coalMine = CoalMine()","","        return [","            CyclopsHideaway.cyclopsRoom,","            CyclopsHideaway.strangePassage,","            ...","            coalMine.squeakyRoom,","            coalMine.timberRoom,","        ]","    }","","    public var itemEventHandlers: [ItemID: ItemEventHandler] {","        [","            .board: GlobalItems.boardHandler,","            .boards: OutsideHouse.boardsHandler,","            ...","            .water: InsideHouse.waterHandler,","            .whiteHouse: OutsideHouse.whiteHouseHandler,","        ]","    }","","    public var combatSystems: [ItemID: any CombatSystem] {","        [","            .thief: Thief.thiefCombatSystem,","        ]","    }","","    public var locationEventHandlers: [LocationID: LocationEventHandler] {","        [","            .cellar: Underground.cellarHandler,","            .gratingClearing: Forest.gratingClearingHandler,","            .roundRoom: RoundRoom.roundRoomHandler,","            .trollRoom: Troll.trollRoomHandler,","        ]","    }","","    public var daemons: [DaemonID: Daemon] {","        [","            .swordDaemon: InsideHouse.swordDaemon,","            .thiefDaemon: Thief.thiefDaemon,","            .trollDaemon: Troll.trollDaemon,","        ]","    }","","    public var itemComputers: [ItemID: ItemComputer] {","        [","            .kitchenWindow: OutsideHouse.kitchenWindowComputer,","            .troll: Troll.trollComputer,","        ]","    }","","    public var locationComputers: [LocationID: LocationComputer] {","        [","            .eastOfHouse: OutsideHouse.eastOfHouseComputer,","            .gratingClearing: Forest.gratingClearingComputer,","            .kitchen: InsideHouse.kitchenComputer,","        ]","    }","}"]},{"level":2,"text":"Usage","type":"heading","anchor":"Usage"},{"level":3,"text":"Adding to Your Project","type":"heading","anchor":"Adding-to-Your-Project"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Include the plugin in your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ swift-tools-version: 6.1","import PackageDescription","","let package = Package(","    name: \"MyGame\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/samadhiBot\/Gnusto\", from: \"0.1.0\"),","    ],","    targets: [","        .executableTarget(","            name: \"MyGame\",","            dependencies: [\"GnustoEngine\"],","            plugins: [\"GnustoAutoWiringPlugin\"]  \/\/ Add this line","        ),","    ]",")"]}],"kind":"content"}],"references":{"doc://GnustoEngine/documentation/GnustoEngine/GameStructure":{"type":"topic","abstract":[{"text":"Learn how to organize your game world and bring it to life with dynamic proxies and event handlers.","type":"text"}],"url":"\/documentation\/gnustoengine\/gamestructure","role":"article","title":"Game Structure and Dynamic Behavior","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameStructure","kind":"article"},"doc://GnustoEngine/documentation/GnustoEngine/GameBlueprint":{"url":"\/documentation\/gnustoengine\/gameblueprint","type":"topic","title":"GameBlueprint","role":"symbol","abstract":[{"type":"text","text":"Defines the foundational structure and core components of a Gnusto-powered game."}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameBlueprint","kind":"symbol","navigatorTitle":[{"text":"GameBlueprint","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GameBlueprint","kind":"identifier"}]},"gnusto-auto-wiring.png":{"variants":[{"url":"\/images\/GnustoEngine\/gnusto-auto-wiring.png","traits":["1x","light"]}],"identifier":"gnusto-auto-wiring.png","alt":"Gnusto Auto-Wiring Plugin","type":"image"},"https://github.com/samadhiBot/Gnusto/blob/main/Executables/CloakOfDarkness/OperaHouse.swift":{"titleInlineContent":[{"text":"OperaHouse","type":"text"}],"url":"https:\/\/github.com\/samadhiBot\/Gnusto\/blob\/main\/Executables\/CloakOfDarkness\/OperaHouse.swift","type":"link","identifier":"https:\/\/github.com\/samadhiBot\/Gnusto\/blob\/main\/Executables\/CloakOfDarkness\/OperaHouse.swift","title":"OperaHouse"},"doc://GnustoEngine/documentation/GnustoEngine/GlobalID":{"title":"GlobalID","url":"\/documentation\/gnustoengine\/globalid","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GlobalID","navigatorTitle":[{"kind":"identifier","text":"GlobalID"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A type-safe key for accessing game-specific global variables or flags stored in"},{"type":"text","text":" "},{"type":"codeVoice","code":"GameState.globalState"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GlobalID"}]},"doc://GnustoEngine/documentation/GnustoEngine/Combat":{"kind":"article","role":"article","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Combat","url":"\/documentation\/gnustoengine\/combat","abstract":[],"type":"topic","title":"Combat System"},"doc://GnustoEngine/documentation/GnustoEngine/Item":{"abstract":[{"type":"text","text":"Represents an interactive object or entity within the game world, such as a brass lantern,"},{"type":"text","text":" "},{"type":"text","text":"a rusty key, a treasure chest, or even a non-player character (NPC)."}],"url":"\/documentation\/gnustoengine\/item","type":"topic","role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Item","title":"Item","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Item","kind":"identifier"}],"navigatorTitle":[{"text":"Item","kind":"identifier"}],"kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","url":"\/documentation\/gnustoengine","title":"GnustoEngine"},"doc://GnustoEngine/documentation/GnustoEngine/Fuse":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Fuse","title":"Fuse","type":"topic","url":"\/documentation\/gnustoengine\/fuse","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Fuse","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fuse","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the behavior of a timed event, known as a “fuse”, scheduled to occur after a"},{"type":"text","text":" "},{"type":"text","text":"specific number of game turns."}]},"doc://GnustoEngine/documentation/GnustoEngine/Location":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Location","kind":"identifier"}],"title":"Location","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Location","kind":"identifier"}],"abstract":[{"text":"Represents a distinct place or room within the game world that the player can visit.","type":"text"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Location","url":"\/documentation\/gnustoengine\/location","role":"symbol"},"https://github.com/samadhiBot/Gnusto/blob/main/Executables/Zork1/World/BeneathHouse.swift":{"titleInlineContent":[{"type":"text","text":"BeneathHouse"}],"type":"link","url":"https:\/\/github.com\/samadhiBot\/Gnusto\/blob\/main\/Executables\/Zork1\/World\/BeneathHouse.swift","title":"BeneathHouse","identifier":"https:\/\/github.com\/samadhiBot\/Gnusto\/blob\/main\/Executables\/Zork1\/World\/BeneathHouse.swift"},"doc://GnustoEngine/documentation/GnustoEngine/Daemon":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Daemon"}],"navigatorTitle":[{"kind":"identifier","text":"Daemon"}],"url":"\/documentation\/gnustoengine\/daemon","title":"Daemon","role":"symbol","type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Daemon","kind":"symbol","abstract":[{"type":"text","text":"Defines the behavior of a background task or routine, known as a “daemon”, that runs"},{"type":"text","text":" "},{"type":"text","text":"periodically at a specified frequency during the game."}]}}}