{"metadata":{"roleHeading":"Structure","externalID":"s:12GnustoEngine24DynamicAttributeRegistryV","title":"DynamicAttributeRegistry","modules":[{"name":"GnustoEngine"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicAttributeRegistry"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicAttributeRegistry"}],"symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicAttributeRegistry","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This registry allows game developers to define custom behavior for attributes beyond simple","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"static values stored in "},{"type":"codeVoice","code":"Item.attributes"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"Location.attributes"},{"text":". It separates the","type":"text"},{"type":"text","text":" "},{"text":"behavioral aspects of attributes from their direct state storage.","type":"text"}]},{"level":3,"anchor":"Use-Cases","text":"Use Cases:","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Computed Attributes:"}],"type":"strong"},{"type":"text","text":" Define an attribute whose value is calculated on the fly based on"},{"text":" ","type":"text"},{"type":"text","text":"other game state. For example:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"An item’s ","type":"text"},{"code":"weight","type":"codeVoice"},{"type":"text","text":" attribute could be computed by summing its base weight and the"},{"type":"text","text":" "},{"text":"weights of all items it contains (if it’s a container).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A location’s "},{"type":"codeVoice","code":"lightLevel"},{"text":" attribute could be computed based on whether light sources","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"within it are active and undimmed."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"An NPC’s ","type":"text"},{"type":"codeVoice","code":"mood"},{"type":"text","text":" attribute might change based on player actions or game events."}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Validated Attributes:","type":"text"}]},{"text":" Define rules that must be met when attempting to change an","type":"text"},{"type":"text","text":" "},{"text":"attribute’s value. For example:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Preventing a player’s ","type":"text"},{"code":"strength","type":"codeVoice"},{"text":" attribute from exceeding a maximum value.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Ensuring a ","type":"text"},{"code":"doorState","type":"codeVoice"},{"type":"text","text":" attribute can only transition between valid states"},{"text":" ","type":"text"},{"text":"(e.g., ","type":"text"},{"type":"codeVoice","code":"open"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"closed"},{"text":", but not directly from ","type":"text"},{"code":"locked","type":"codeVoice"},{"type":"text","text":" to "},{"code":"open","type":"codeVoice"},{"text":" without unlocking).","type":"text"}]}]}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Game developers register these custom handlers (closures) with the "},{"type":"codeVoice","code":"DynamicAttributeRegistry"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"typically during game setup via the "},{"code":"GameBlueprint","type":"codeVoice"},{"type":"text","text":". The "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" then automatically"},{"text":" ","type":"text"},{"text":"invokes these handlers when relevant attributes are accessed or modified.","type":"text"}]}]}],"kind":"symbol","abstract":[{"text":"A registry to hold dynamically computed logic (getters) and validation rules (setters\/validators)","type":"text"},{"text":" ","type":"text"},{"text":"for item and location attributes.","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry"},"topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/init()"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/registerItemCompute(key:handler:)","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/registerItemValidate(key:handler:)","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/registerLocationCompute(key:handler:)","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/registerLocationValidate(key:handler:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/ItemComputeHandler","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/ItemValidateHandler","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationComputeHandler","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler"],"anchor":"Type-Aliases","generated":true}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/GnustoEngine\/s8SendableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/dynamicattributeregistry"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/LocationValidateHandler":{"navigatorTitle":[{"text":"LocationValidateHandler","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationValidateHandler","title":"DynamicAttributeRegistry.LocationValidateHandler","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LocationValidateHandler"}],"kind":"symbol","url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/locationvalidatehandler","abstract":[{"text":"A closure that validates a proposed new value for a location’s attribute.","type":"text"}],"role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine":{"url":"\/documentation\/gnustoengine","role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","title":"GnustoEngine","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/registerItemValidate(key:handler:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Registers a validation handler for a specific item attribute.","type":"text"}],"url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/registeritemvalidate(key:handler:)","title":"registerItemValidate(key:handler:)","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/registerItemValidate(key:handler:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"registerItemValidate","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine11AttributeIDV","text":"AttributeID"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": "},{"text":"DynamicAttributeRegistry","preciseIdentifier":"s:12GnustoEngine24DynamicAttributeRegistryV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"ItemValidateHandler","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine24DynamicAttributeRegistryV19ItemValidateHandlera"},{"kind":"text","text":")"}]},"doc://GnustoEngine/s8SendableP":{"identifier":"doc:\/\/GnustoEngine\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/registerItemCompute(key:handler:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Registers a compute handler (a dynamic getter) for a specific item attribute."}],"url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/registeritemcompute(key:handler:)","title":"registerItemCompute(key:handler:)","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/registerItemCompute(key:handler:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"registerItemCompute","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine11AttributeIDV","text":"AttributeID"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ","kind":"text"},{"text":"DynamicAttributeRegistry","preciseIdentifier":"s:12GnustoEngine24DynamicAttributeRegistryV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine24DynamicAttributeRegistryV18ItemComputeHandlera","text":"ItemComputeHandler"},{"text":")","kind":"text"}]},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry","type":"topic","kind":"symbol","title":"DynamicAttributeRegistry","abstract":[{"text":"A registry to hold dynamically computed logic (getters) and validation rules (setters\/validators)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for item and location attributes."}],"navigatorTitle":[{"text":"DynamicAttributeRegistry","kind":"identifier"}],"url":"\/documentation\/gnustoengine\/dynamicattributeregistry","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicAttributeRegistry","kind":"identifier"}],"role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/registerLocationCompute(key:handler:)":{"abstract":[{"type":"text","text":"Registers a compute handler (a dynamic getter) for a specific location attribute."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerLocationCompute","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AttributeID","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine11AttributeIDV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine24DynamicAttributeRegistryV","text":"DynamicAttributeRegistry","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"LocationComputeHandler","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine24DynamicAttributeRegistryV22LocationComputeHandlera"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/registerlocationcompute(key:handler:)","type":"topic","title":"registerLocationCompute(key:handler:)","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/registerLocationCompute(key:handler:)"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/ItemComputeHandler":{"url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/itemcomputehandler","abstract":[{"type":"text","text":"A closure that dynamically computes the value of an item’s attribute."}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ItemComputeHandler"}],"type":"topic","title":"DynamicAttributeRegistry.ItemComputeHandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ItemComputeHandler"}],"kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/ItemComputeHandler"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/init()":{"kind":"symbol","url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/init()","role":"symbol","title":"init()","abstract":[{"type":"text","text":"Creates a new empty DynamicAttributeRegistry."}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/ItemValidateHandler":{"type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/ItemValidateHandler","abstract":[{"text":"A closure that validates a proposed new value for an item’s attribute before it is set.","type":"text"}],"role":"symbol","url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/itemvalidatehandler","title":"DynamicAttributeRegistry.ItemValidateHandler","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"ItemValidateHandler","kind":"identifier"}],"navigatorTitle":[{"text":"ItemValidateHandler","kind":"identifier"}],"kind":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/LocationComputeHandler":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/LocationComputeHandler","navigatorTitle":[{"kind":"identifier","text":"LocationComputeHandler"}],"kind":"symbol","title":"DynamicAttributeRegistry.LocationComputeHandler","type":"topic","abstract":[{"text":"A closure that dynamically computes the value of a location’s attribute.","type":"text"}],"url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/locationcomputehandler","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LocationComputeHandler"}]},"doc://GnustoEngine/documentation/GnustoEngine/DynamicAttributeRegistry/registerLocationValidate(key:handler:)":{"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/DynamicAttributeRegistry\/registerLocationValidate(key:handler:)","kind":"symbol","title":"registerLocationValidate(key:handler:)","type":"topic","url":"\/documentation\/gnustoengine\/dynamicattributeregistry\/registerlocationvalidate(key:handler:)","abstract":[{"text":"Registers a validation handler for a specific location attribute.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerLocationValidate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AttributeID","preciseIdentifier":"s:12GnustoEngine11AttributeIDV"},{"kind":"text","text":", "},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": "},{"text":"DynamicAttributeRegistry","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine24DynamicAttributeRegistryV"},{"text":".","kind":"text"},{"text":"LocationValidateHandler","preciseIdentifier":"s:12GnustoEngine24DynamicAttributeRegistryV23LocationValidateHandlera","kind":"typeIdentifier"},{"kind":"text","text":")"}]}}}