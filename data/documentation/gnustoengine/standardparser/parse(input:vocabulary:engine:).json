{"metadata":{"modules":[{"name":"GnustoEngine"}],"externalID":"s:12GnustoEngine14StandardParserV5parse5input10vocabulary6engines6ResultOyAA7CommandVAA10ParseErrorOGSS_AA10VocabularyVAA04GameB0CtYaKF","title":"parse(input:vocabulary:engine:)","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"input","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"vocabulary","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Vocabulary","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10VocabularyV"},{"text":", ","kind":"text"},{"text":"engine","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GameEngine","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine04GameB0C"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Command","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"text":", ","kind":"text"},{"text":"ParseError","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10ParseErrorO"},{"text":">","kind":"text"}],"roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:engine:)"]}],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"vocabulary"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Vocabulary","text":"Vocabulary","preciseIdentifier":"s:12GnustoEngine10VocabularyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"engine"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine","text":"GameEngine","preciseIdentifier":"s:12GnustoEngine04GameB0C"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","text":"Command","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/ParseError","text":"ParseError","preciseIdentifier":"s:12GnustoEngine10ParseErrorO"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The raw string as entered by the player (e.g., “take brass lantern”)."}]}],"name":"input"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":" for the current game, containing all known words"},{"type":"text","text":" "},{"type":"text","text":"(verbs, nouns, adjectives, prepositions, noise words, directions)"},{"type":"text","text":" "},{"type":"text","text":"and verb syntax rules. This is the primary source of grammatical"},{"type":"text","text":" "},{"type":"text","text":"and lexical knowledge for the parser."}]}],"name":"vocabulary"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" which is either:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".success(Command)"},{"text":": If parsing was successful. The returned ","type":"text"},{"type":"codeVoice","code":"Command"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"encapsulates the player’s understood intent, including the identified ","type":"text"},{"type":"codeVoice","code":"Verb"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"resolved ","type":"text"},{"type":"codeVoice","code":"EntityReference"},{"text":"s for direct and\/or indirect objects (if any),","type":"text"},{"text":" ","type":"text"},{"text":"any recognized modifiers (adjectives), the preposition used (if any),","type":"text"},{"text":" ","type":"text"},{"text":"and the direction (for movement commands). This ","type":"text"},{"type":"codeVoice","code":"Command"},{"text":" is then ready for","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"text":" to execute.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".failure(ParseError)"},{"text":": If parsing failed at any stage. The ","type":"text"},{"type":"codeVoice","code":"ParseError"},{"text":" enum","type":"text"},{"text":" ","type":"text"},{"text":"provides a specific reason for the failure, such as ","type":"text"},{"type":"codeVoice","code":".verbUnknown"},{"text":" if the main","type":"text"},{"text":" ","type":"text"},{"text":"action word wasn’t recognized, ","type":"text"},{"type":"codeVoice","code":".itemNotInScope"},{"text":" if a mentioned object isn’t","type":"text"},{"text":" ","type":"text"},{"text":"accessible, ","type":"text"},{"type":"codeVoice","code":".badGrammar"},{"text":" if the sentence structure didn’t match any known rules,","type":"text"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"type":"codeVoice","code":".ambiguity"},{"text":" if the input could be interpreted in multiple ways that the","type":"text"},{"text":" ","type":"text"},{"text":"parser couldn’t resolve on its own.","type":"text"}]}]}],"type":"unorderedList"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method implements the core parsing logic described in the ","type":"text"},{"code":"StandardParser","type":"codeVoice"},{"text":" overview.","type":"text"},{"text":" ","type":"text"},{"text":"It attempts to understand the player’s intent by matching their input against the","type":"text"},{"text":" ","type":"text"},{"text":"game’s vocabulary and syntax rules. It parses player input into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" ","type":"text"},{"text":"using a two-phase approach:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Phase 1: Verb Identification","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Uses longest-match strategy to identify multi-word verbs (e.g., “pick up”, “turn on”)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Handles verb ambiguity by collecting all possible matches","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Prioritizes longer verb phrases over shorter ones for specificity","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Phase 2: Syntax Rule Matching"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Retrieves syntax rules from action handlers for identified verbs","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Attempts to match input structure against each applicable rule"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Returns the first successful match or the best error encountered"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"This approach allows sophisticated command parsing while maintaining","type":"text"},{"text":" ","type":"text"},{"text":"compatibility with traditional IF parsing expectations.","type":"text"}]}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:engine:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Parses a raw input string from the player into a structured "},{"type":"codeVoice","code":"Command"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"ParseError"},{"type":"text","text":"."}],"references":{"doc://GnustoEngine/documentation/GnustoEngine/Command":{"abstract":[{"text":"Represents a structured and validated player command, ready for the ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"text":" to execute.","type":"text"}],"navigatorTitle":[{"text":"Command","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Command","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"Command","url":"\/documentation\/gnustoengine\/command","type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command"},"doc://GnustoEngine/documentation/GnustoEngine/ParseError":{"role":"symbol","title":"ParseError","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/ParseError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParseError"}],"navigatorTitle":[{"kind":"identifier","text":"ParseError"}],"url":"\/documentation\/gnustoengine\/parseerror","kind":"symbol","abstract":[{"type":"text","text":"Enumerates errors that can occur during the command parsing phase."}],"type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/Vocabulary":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Vocabulary","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Holds the game’s vocabulary, mapping words to game entities and concepts."}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Vocabulary","navigatorTitle":[{"text":"Vocabulary","kind":"identifier"}],"kind":"symbol","title":"Vocabulary","type":"topic","url":"\/documentation\/gnustoengine\/vocabulary"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:engine:)":{"type":"topic","title":"parse(input:vocabulary:engine:)","kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:engine:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"input","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"vocabulary","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Vocabulary","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10VocabularyV"},{"text":", ","kind":"text"},{"text":"engine","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GameEngine","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine04GameB0C"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Command","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"text":", ","kind":"text"},{"text":"ParseError","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10ParseErrorO"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:engine:)","abstract":[{"type":"text","text":"Parses a raw input string from the player into a structured "},{"type":"codeVoice","code":"Command"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"ParseError"},{"type":"text","text":"."}]},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine":{"type":"topic","url":"\/documentation\/gnustoengine\/gameengine","abstract":[{"text":"The main orchestrator for an interactive fiction game, responsible for managing","type":"text"},{"text":" ","type":"text"},{"text":"the game’s state, running the primary game loop, and coordinating interactions","type":"text"},{"text":" ","type":"text"},{"text":"between the player (via an ","type":"text"},{"type":"codeVoice","code":"IOHandler"},{"text":"), the command ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", and the various","type":"text"},{"text":" ","type":"text"},{"text":"game logic handlers (","type":"text"},{"type":"codeVoice","code":"ActionHandler"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ItemEventHandler"},{"text":", ","type":"text"},{"type":"codeVoice","code":"LocationEventHandler"},{"text":").","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"text":"GameEngine","kind":"identifier"}],"navigatorTitle":[{"text":"GameEngine","kind":"identifier"}],"kind":"symbol","title":"GameEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine"},"doc://GnustoEngine/documentation/GnustoEngine":{"type":"topic","url":"\/documentation\/gnustoengine","abstract":[],"kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","title":"GnustoEngine","role":"collection"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"navigatorTitle":[{"text":"StandardParser","kind":"identifier"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StandardParser","kind":"identifier"}],"abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" protocol, designed to"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"kind":"symbol","url":"\/documentation\/gnustoengine\/standardparser","type":"topic","title":"StandardParser","role":"symbol"}}}