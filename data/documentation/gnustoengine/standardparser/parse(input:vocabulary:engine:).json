{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:engine:)"]}],"abstract":[{"text":"Parses a raw input string from the player into a structured ","type":"text"},{"code":"Command","type":"codeVoice"},{"text":" or a ","type":"text"},{"code":"ParseError","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser"]]},"metadata":{"symbolKind":"method","externalID":"s:12GnustoEngine14StandardParserV5parse5input10vocabulary6engines6ResultOyAA7CommandVAA10ParseErrorOGSS_AA10VocabularyVAA04GameB0CtYaKF","title":"parse(input:vocabulary:engine:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"vocabulary"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Vocabulary","preciseIdentifier":"s:12GnustoEngine10VocabularyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"engine"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GameEngine","preciseIdentifier":"s:12GnustoEngine04GameB0C"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Command","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParseError","preciseIdentifier":"s:12GnustoEngine10ParseErrorO"},{"kind":"text","text":">"}],"modules":[{"name":"GnustoEngine"}],"roleHeading":"Instance Method","role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:engine:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"input","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"vocabulary","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Vocabulary","kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Vocabulary","preciseIdentifier":"s:12GnustoEngine10VocabularyV"},{"text":", ","kind":"text"},{"text":"engine","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GameEngine","kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine","preciseIdentifier":"s:12GnustoEngine04GameB0C"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Command","kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"text":", ","kind":"text"},{"text":"ParseError","kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/ParseError","preciseIdentifier":"s:12GnustoEngine10ParseErrorO"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"input","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The raw string as entered by the player (e.g., “take brass lantern”)."}]}]},{"name":"vocabulary","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Vocabulary"},{"type":"text","text":" for the current game, containing all known words"},{"type":"text","text":" "},{"type":"text","text":"(verbs, nouns, adjectives, prepositions, noise words, directions)"},{"type":"text","text":" "},{"type":"text","text":"and verb syntax rules. This is the primary source of grammatical"},{"type":"text","text":" "},{"type":"text","text":"and lexical knowledge for the parser."}]}]},{"name":"engine","content":[{"type":"paragraph","inlineContent":[{"text":"The game engine providing essential context for resolving","type":"text"},{"text":" ","type":"text"},{"text":"object references (e.g., player inventory, item locations, current","type":"text"},{"text":" ","type":"text"},{"text":"pronoun meanings, items visible or accessible to the player).","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" which is either:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".success(Command)"},{"type":"text","text":": If parsing was successful. The returned "},{"type":"codeVoice","code":"Command"},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"encapsulates the player’s understood intent, including the identified "},{"type":"codeVoice","code":"Verb"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"resolved "},{"type":"codeVoice","code":"EntityReference"},{"type":"text","text":"s for direct and\/or indirect objects (if any),"},{"type":"text","text":" "},{"type":"text","text":"any recognized modifiers (adjectives), the preposition used (if any),"},{"type":"text","text":" "},{"type":"text","text":"and the direction (for movement commands). This "},{"type":"codeVoice","code":"Command"},{"type":"text","text":" is then ready for"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" to execute."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".failure(ParseError)"},{"text":": If parsing failed at any stage. The ","type":"text"},{"type":"codeVoice","code":"ParseError"},{"text":" enum","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provides a specific reason for the failure, such as "},{"type":"codeVoice","code":".verbUnknown"},{"type":"text","text":" if the main"},{"type":"text","text":" "},{"type":"text","text":"action word wasn’t recognized, "},{"type":"codeVoice","code":".itemNotInScope"},{"type":"text","text":" if a mentioned object isn’t"},{"type":"text","text":" "},{"type":"text","text":"accessible, "},{"type":"codeVoice","code":".badGrammar"},{"type":"text","text":" if the sentence structure didn’t match any known rules,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":".ambiguity"},{"type":"text","text":" if the input could be interpreted in multiple ways that the"},{"type":"text","text":" "},{"type":"text","text":"parser couldn’t resolve on its own."}],"type":"paragraph"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method implements the core parsing logic described in the "},{"code":"StandardParser","type":"codeVoice"},{"type":"text","text":" overview."},{"type":"text","text":" "},{"type":"text","text":"It attempts to understand the player’s intent by matching their input against the"},{"type":"text","text":" "},{"type":"text","text":"game’s vocabulary and syntax rules. It parses player input into a structured "},{"code":"Command","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"using a two-phase approach:"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Phase 1: Verb Identification","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Uses longest-match strategy to identify multi-word verbs (e.g., “pick up”, “turn on”)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Handles verb ambiguity by collecting all possible matches","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Prioritizes longer verb phrases over shorter ones for specificity","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Phase 2: Syntax Rule Matching","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Retrieves syntax rules from action handlers for identified verbs","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Attempts to match input structure against each applicable rule"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Returns the first successful match or the best error encountered","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This approach allows sophisticated command parsing while maintaining"},{"type":"text","text":" "},{"type":"text","text":"compatibility with traditional IF parsing expectations."}]}]}],"references":{"doc://GnustoEngine/documentation/GnustoEngine/Command":{"title":"Command","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Command","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Command","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Represents a structured and validated player command, ready for the ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"text":" to execute.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Command","kind":"identifier"}],"type":"topic","url":"\/documentation\/gnustoengine\/command"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser/parse(input:vocabulary:engine:)":{"abstract":[{"type":"text","text":"Parses a raw input string from the player into a structured "},{"code":"Command","type":"codeVoice"},{"type":"text","text":" or a "},{"code":"ParseError","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser\/parse(input:vocabulary:engine:)","type":"topic","url":"\/documentation\/gnustoengine\/standardparser\/parse(input:vocabulary:engine:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"vocabulary"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Vocabulary","preciseIdentifier":"s:12GnustoEngine10VocabularyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"engine"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GameEngine","preciseIdentifier":"s:12GnustoEngine04GameB0C"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Command","preciseIdentifier":"s:12GnustoEngine7CommandV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParseError","preciseIdentifier":"s:12GnustoEngine10ParseErrorO"},{"kind":"text","text":">"}],"title":"parse(input:vocabulary:engine:)","role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/StandardParser":{"abstract":[{"type":"text","text":"A standard, ZIL-inspired implementation of the "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" protocol, designed to"},{"type":"text","text":" "},{"type":"text","text":"interpret player input in a manner reminiscent of classic text-adventure games."}],"kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/StandardParser","type":"topic","url":"\/documentation\/gnustoengine\/standardparser","navigatorTitle":[{"kind":"identifier","text":"StandardParser"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardParser"}],"title":"StandardParser","role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/ParseError":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParseError","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"ParseError","kind":"identifier"}],"url":"\/documentation\/gnustoengine\/parseerror","title":"ParseError","kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/ParseError","abstract":[{"text":"Enumerates errors that can occur during the command parsing phase.","type":"text"}]},"doc://GnustoEngine/documentation/GnustoEngine":{"abstract":[],"kind":"symbol","role":"collection","url":"\/documentation\/gnustoengine","title":"GnustoEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/Vocabulary":{"abstract":[{"text":"Holds the game’s vocabulary, mapping words to game entities and concepts.","type":"text"}],"role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Vocabulary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Vocabulary"}],"url":"\/documentation\/gnustoengine\/vocabulary","kind":"symbol","type":"topic","title":"Vocabulary","navigatorTitle":[{"kind":"identifier","text":"Vocabulary"}]},"doc://GnustoEngine/documentation/GnustoEngine/GameEngine":{"navigatorTitle":[{"text":"GameEngine","kind":"identifier"}],"role":"symbol","url":"\/documentation\/gnustoengine\/gameengine","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GameEngine","kind":"identifier"}],"type":"topic","abstract":[{"text":"The main orchestrator for an interactive fiction game, responsible for managing","type":"text"},{"text":" ","type":"text"},{"text":"the game’s state, running the primary game loop, and coordinating interactions","type":"text"},{"text":" ","type":"text"},{"text":"between the player (via an ","type":"text"},{"code":"IOHandler","type":"codeVoice"},{"text":"), the command ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", and the various","type":"text"},{"text":" ","type":"text"},{"text":"game logic handlers (","type":"text"},{"code":"ActionHandler","type":"codeVoice"},{"text":", ","type":"text"},{"code":"ItemEventHandler","type":"codeVoice"},{"text":", ","type":"text"},{"code":"LocationEventHandler","type":"codeVoice"},{"text":").","type":"text"}],"title":"GameEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/GameEngine","kind":"symbol"}}}