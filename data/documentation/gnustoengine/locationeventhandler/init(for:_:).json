{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationEventHandler"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationEventHandler\/init(for:_:)"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"locationID","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine10LocationIDV","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationID","text":"LocationID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:12GnustoEngine27LocationEventMatcherBuilderV","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationEventMatcherBuilder","text":"LocationEventMatcherBuilder","kind":"attribute"},{"text":" ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"matchers","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping ","kind":"attribute"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"preciseIdentifier":"s:12GnustoEngine20LocationEventMatchera","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationEventMatcher","text":"LocationEventMatcher","kind":"typeIdentifier"},{"text":"])","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The ID of the location this handler is for"}]}],"name":"locationID"},{"content":[{"inlineContent":[{"text":"A result builder that creates a list of event matchers","type":"text"}],"type":"paragraph"}],"name":"matchers"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This is the recommended approach that eliminates the need for nested ","type":"text"},{"type":"codeVoice","code":"event.match"},{"text":" ","type":"text"},{"text":"closures.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example usage:"}],"type":"paragraph"},{"syntax":"swift","code":["var locationEventHandlers: [LocationID: LocationEventHandler] {","    [","        .bar: LocationEventHandler(for: .bar) {","            before(.move) { context, command in","                if !await context.location.isLit {","                    ActionResult(\"Blundering around in the dark isn't a good idea!\")","                } else {","                    nil","                }","            }","            onEnter { context in","                ActionResult(\"You feel a chill as you enter.\")","            }","        }","    ]","}"],"type":"codeListing"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Initializes a "},{"type":"codeVoice","code":"LocationEventHandler"},{"type":"text","text":" with a result builder that provides declarative"},{"type":"text","text":" "},{"type":"text","text":"event matching."}],"metadata":{"modules":[{"name":"GnustoEngine"}],"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LocationID","preciseIdentifier":"s:12GnustoEngine10LocationIDV"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"LocationEventMatcher","preciseIdentifier":"s:12GnustoEngine20LocationEventMatchera"},{"kind":"text","text":"])"}],"role":"symbol","symbolKind":"init","externalID":"s:12GnustoEngine20LocationEventHandlerV3for_AcA0C2IDV_SayAA12ActionResultVSgAA0cD7ContextVYaKcGyYaYbKctcfc","title":"init(for:_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/locationeventhandler\/init(for:_:)"]}],"references":{"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","url":"\/documentation\/gnustoengine","title":"GnustoEngine"},"doc://GnustoEngine/documentation/GnustoEngine/LocationID":{"type":"topic","title":"LocationID","navigatorTitle":[{"text":"LocationID","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type-safe, unique identifier for a "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" in the game world."}],"url":"\/documentation\/gnustoengine\/locationid","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationID","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LocationID","kind":"identifier"}]},"doc://GnustoEngine/documentation/GnustoEngine/LocationEventMatcherBuilder":{"url":"\/documentation\/gnustoengine\/locationeventmatcherbuilder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LocationEventMatcherBuilder"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationEventMatcherBuilder","title":"LocationEventMatcherBuilder","role":"symbol","abstract":[{"type":"text","text":"Result builder for creating clean, declarative location event handling."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationEventMatcherBuilder"}]},"doc://GnustoEngine/documentation/GnustoEngine/LocationEventMatcher":{"navigatorTitle":[{"kind":"identifier","text":"LocationEventMatcher"}],"kind":"symbol","url":"\/documentation\/gnustoengine\/locationeventmatcher","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationEventMatcher","type":"topic","title":"LocationEventMatcher","abstract":[{"text":"A type alias for context-aware location event matcher functions.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationEventMatcher"}]},"doc://GnustoEngine/documentation/GnustoEngine/LocationEventHandler":{"kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationEventHandler","type":"topic","abstract":[{"type":"text","text":"A container for custom game logic that responds to specific events occurring in relation"},{"type":"text","text":" "},{"type":"text","text":"to a "},{"type":"codeVoice","code":"Location"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"LocationEventHandler","kind":"identifier"}],"url":"\/documentation\/gnustoengine\/locationeventhandler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LocationEventHandler","kind":"identifier"}],"title":"LocationEventHandler"},"doc://GnustoEngine/documentation/GnustoEngine/LocationEventHandler/init(for:_:)":{"role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationEventHandler\/init(for:_:)","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LocationID","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine10LocationIDV"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"LocationEventMatcher","kind":"typeIdentifier","preciseIdentifier":"s:12GnustoEngine20LocationEventMatchera"},{"text":"])","kind":"text"}],"abstract":[{"type":"text","text":"Initializes a "},{"type":"codeVoice","code":"LocationEventHandler"},{"type":"text","text":" with a result builder that provides declarative"},{"type":"text","text":" "},{"type":"text","text":"event matching."}],"title":"init(for:_:)","url":"\/documentation\/gnustoengine\/locationeventhandler\/init(for:_:)"}}}