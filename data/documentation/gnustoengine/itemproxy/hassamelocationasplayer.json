{"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/ItemProxy\/hasSameLocationAsPlayer","interfaceLanguage":"swift"},"sections":[],"metadata":{"extendedModule":"GnustoEngine","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasSameLocationAsPlayer","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","modules":[{"name":"GnustoEngine"}],"title":"hasSameLocationAsPlayer","externalID":"s:12GnustoEngine9ItemProxyV23hasSameLocationAsPlayerSbvp","roleHeading":"Instance Property","symbolKind":"property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/itemproxy\/hassamelocationasplayer"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Whether this item is in the same location as the player.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasSameLocationAsPlayer"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"async"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if both the item and the player are currently in the same location.","type":"text"},{"text":" ","type":"text"},{"text":"This is useful for determining if items are accessible to the player or for","type":"text"},{"text":" ","type":"text"},{"text":"location-based game logic. Returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" if either the item or player has","type":"text"},{"text":" ","type":"text"},{"text":"no location, or if they’re in different locations.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This check considers:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct location placement (item’s parent is the location)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Local globals (item is listed in the location’s scenery)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Items inside containers that are in the player’s location will return ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" ","type":"text"},{"text":"unless the container itself is being checked.","type":"text"}]}]}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/ItemProxy"]]},"references":{"doc://GnustoEngine/documentation/GnustoEngine":{"abstract":[],"kind":"symbol","role":"collection","url":"\/documentation\/gnustoengine","title":"GnustoEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/ItemProxy/hasSameLocationAsPlayer":{"abstract":[{"text":"Whether this item is in the same location as the player.","type":"text"}],"url":"\/documentation\/gnustoengine\/itemproxy\/hassamelocationasplayer","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasSameLocationAsPlayer","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"hasSameLocationAsPlayer","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/ItemProxy\/hasSameLocationAsPlayer","kind":"symbol","type":"topic","role":"symbol"},"doc://GnustoEngine/documentation/GnustoEngine/ItemProxy":{"type":"topic","title":"ItemProxy","role":"symbol","navigatorTitle":[{"text":"ItemProxy","kind":"identifier"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/ItemProxy","abstract":[{"text":"A lightweight proxy that provides dynamic property access for items through the GameEngine.","type":"text"}],"kind":"symbol","url":"\/documentation\/gnustoengine\/itemproxy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ItemProxy"}]}}}