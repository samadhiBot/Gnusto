{"metadata":{"symbolKind":"init","externalID":"s:12GnustoEngine16LocationComputerV3for_AcA0C2IDV_SayAA10StateValueOSgAA0C14ComputeContextVYacGyYaYbctcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12GnustoEngine10LocationIDV","kind":"typeIdentifier","text":"LocationID"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:12GnustoEngine22LocationComputeMatchera","kind":"typeIdentifier","text":"LocationComputeMatcher"},{"kind":"text","text":"])"}],"role":"symbol","modules":[{"name":"GnustoEngine"}],"title":"init(for:_:)","roleHeading":"Initializer"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine","doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationComputer"]]},"abstract":[{"text":"Initializes a ","type":"text"},{"code":"LocationComputer","type":"codeVoice"},{"text":" with a result builder that provides declarative property matching.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"locationID","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"LocationID","kind":"typeIdentifier","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationID","preciseIdentifier":"s:12GnustoEngine10LocationIDV"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"LocationComputeMatcherBuilder","kind":"attribute","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationComputeMatcherBuilder","preciseIdentifier":"s:12GnustoEngine29LocationComputeMatcherBuilderV"},{"text":" ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"matchers","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping ","kind":"attribute"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"LocationComputeMatcher","preciseIdentifier":"s:12GnustoEngine22LocationComputeMatchera","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationComputeMatcher","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"locationID","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The ID of the location this computer is for"}]}]},{"name":"matchers","content":[{"inlineContent":[{"type":"text","text":"A result builder that creates a list of property matchers"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the recommended approach that eliminates the need for switch statements."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage:"}]},{"type":"codeListing","syntax":"swift","code":["static let enchantedForestComputer = LocationComputer(for: .enchantedForest) {","    locationProperty(.description) { context in","        let timeOfDay = await context.gameState.value(of: .timeOfDay) ?? \"day\"","        return .string(timeOfDay == \"night\" ? \"Dark woods loom.\" : \"Sunlight filters through trees.\")","    }","","    locationProperty(.isLit) { context in","        let timeOfDay = await context.gameState.value(of: .timeOfDay) ?? \"day\"","        return .bool(timeOfDay == \"day\")","    }","}"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/locationcomputer\/init(for:_:)"]}],"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationComputer\/init(for:_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://GnustoEngine/documentation/GnustoEngine/LocationComputer":{"navigatorTitle":[{"kind":"identifier","text":"LocationComputer"}],"type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationComputer","url":"\/documentation\/gnustoengine\/locationcomputer","kind":"symbol","title":"LocationComputer","abstract":[{"type":"text","text":"A sendable compute handler for dynamic location properties."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationComputer"}]},"doc://GnustoEngine/documentation/GnustoEngine/LocationID":{"navigatorTitle":[{"kind":"identifier","text":"LocationID"}],"abstract":[{"type":"text","text":"A type-safe, unique identifier for a "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" in the game world."}],"title":"LocationID","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationID","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationID"}],"url":"\/documentation\/gnustoengine\/locationid"},"doc://GnustoEngine/documentation/GnustoEngine/LocationComputeMatcher":{"navigatorTitle":[{"kind":"identifier","text":"LocationComputeMatcher"}],"title":"LocationComputeMatcher","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationComputeMatcher","role":"symbol","url":"\/documentation\/gnustoengine\/locationcomputematcher","abstract":[{"text":"A type alias for context-aware location property matcher functions.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationComputeMatcher"}]},"doc://GnustoEngine/documentation/GnustoEngine":{"abstract":[],"kind":"symbol","role":"collection","url":"\/documentation\/gnustoengine","title":"GnustoEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/LocationComputeMatcherBuilder":{"title":"LocationComputeMatcherBuilder","url":"\/documentation\/gnustoengine\/locationcomputematcherbuilder","abstract":[{"type":"text","text":"Result builder for creating clean, declarative location property computing."}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LocationComputeMatcherBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"LocationComputeMatcherBuilder","kind":"identifier"}],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationComputeMatcherBuilder","type":"topic"},"doc://GnustoEngine/documentation/GnustoEngine/LocationComputer/init(for:_:)":{"url":"\/documentation\/gnustoengine\/locationcomputer\/init(for:_:)","abstract":[{"text":"Initializes a ","type":"text"},{"type":"codeVoice","code":"LocationComputer"},{"text":" with a result builder that provides declarative property matching.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12GnustoEngine10LocationIDV","kind":"typeIdentifier","text":"LocationID"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:12GnustoEngine22LocationComputeMatchera","kind":"typeIdentifier","text":"LocationComputeMatcher"},{"kind":"text","text":"])"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/LocationComputer\/init(for:_:)","title":"init(for:_:)"}}}