{"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/STATE_REFACTOR_PLAN","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"variants":[{"paths":["\/documentation\/gnustoengine\/state_refactor_plan"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"State Management Refactoring Plan [DONE]","modules":[{"name":"GnustoEngine"}],"roleHeading":"Article","role":"article"},"abstract":[{"type":"text","text":"This document outlines the phased plan to refactor the Gnusto Engineâ€™s state management for increased robustness, testability, and clarity, while maintaining good developer ergonomics."}],"primaryContentSections":[{"content":[{"anchor":"Phase-1-Centralized-State-Mutation-via-GameState","type":"heading","text":"Phase 1: Centralized State Mutation via `GameState`","level":2},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Goal:","type":"text"}],"type":"strong"},{"text":" Ensure all modifications to the game state are channeled through a single, controlled mechanism within the ","type":"text"},{"code":"GameState","type":"codeVoice"},{"text":" struct, guaranteeing that every change is recorded in the ","type":"text"},{"type":"codeVoice","code":"changeHistory"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Steps:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Generalize "},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":" Identifier:"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"checked":true,"content":[{"inlineContent":[{"type":"text","text":"Define "},{"type":"codeVoice","code":"EntityID"},{"type":"text","text":" enum ("},{"type":"codeVoice","code":".item(ItemID)"},{"text":", ","type":"text"},{"code":".location(LocationID)","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":".player"},{"type":"text","text":", "},{"type":"codeVoice","code":".global"},{"text":") in ","type":"text"},{"type":"codeVoice","code":"ActionResult.swift"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update "},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":" struct to use "},{"code":"entityID: EntityID","type":"codeVoice"},{"text":" instead of ","type":"text"},{"code":"objectId: ItemID","type":"codeVoice"},{"text":".","type":"text"}]}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"Review and update "},{"type":"codeVoice","code":"StatePropertyKey"},{"text":" enum cases to align with ","type":"text"},{"type":"codeVoice","code":"EntityID"},{"type":"text","text":" (e.g., ensure keys clearly map to item, location, player, or global state). Add missing keys like "},{"code":".exits","type":"codeVoice"},{"text":" if needed, along with corresponding ","type":"text"},{"code":"StateValue","type":"codeVoice"},{"text":" cases.","type":"text"}],"type":"paragraph"}],"checked":true}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Implement "},{"code":"GameState.apply(_:)","type":"codeVoice"},{"text":":","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Add "},{"code":"public private(set)","type":"codeVoice"},{"type":"text","text":" access control to core state properties in "},{"type":"codeVoice","code":"GameState"},{"type":"text","text":" ("},{"type":"codeVoice","code":"items"},{"text":", ","type":"text"},{"code":"locations","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"flags"},{"text":", ","type":"text"},{"code":"player","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"activeFuses"},{"text":", ","type":"text"},{"code":"activeDaemons","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"pronouns"},{"text":", ","type":"text"},{"type":"codeVoice","code":"globalState"},{"text":", ","type":"text"},{"code":"changeHistory","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a "},{"code":"public mutating func apply(_ change: StateChange) throws","type":"codeVoice"},{"text":" method within ","type":"text"},{"type":"codeVoice","code":"GameState"},{"text":".","type":"text"}]}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Move the "},{"type":"codeVoice","code":"switch change.propertyKey"},{"type":"text","text":" logic from "},{"type":"codeVoice","code":"GameEngine.applyStateChange"},{"text":" into ","type":"text"},{"type":"codeVoice","code":"GameState.apply"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"code":"GameState.apply","type":"codeVoice"},{"type":"text","text":" validates "},{"type":"codeVoice","code":"change.oldValue"},{"type":"text","text":" against the current state before applying the mutation."}]}],"checked":true},{"content":[{"inlineContent":[{"text":"Ensure ","type":"text"},{"type":"codeVoice","code":"GameState.apply"},{"type":"text","text":" appends the "},{"type":"codeVoice","code":"change"},{"type":"text","text":" to "},{"type":"codeVoice","code":"changeHistory"},{"type":"text","text":" "},{"inlineContent":[{"type":"text","text":"after"}],"type":"emphasis"},{"type":"text","text":" a successful mutation."}],"type":"paragraph"}],"checked":true}],"type":"unorderedList"}],"checked":true},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Refactor "},{"code":"GameEngine","type":"codeVoice"},{"text":":","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modify ","type":"text"},{"type":"codeVoice","code":"GameEngine.applyStateChange"},{"type":"text","text":" to be a simple forwarding call: "},{"type":"codeVoice","code":"try gameState.apply(change)"},{"type":"text","text":"."}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Identify all methods\/code locations within "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" that directly modify "},{"type":"codeVoice","code":"gameState"},{"text":" or its contained objects (e.g., ","type":"text"},{"code":"updateItemParent","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"setFlagValue"},{"text":", player move increments, fuse\/daemon updates in ","type":"text"},{"type":"codeVoice","code":"tickClock"},{"text":", etc.).","type":"text"}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"text":"Refactor these locations to:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Determine the ","type":"text"},{"type":"codeVoice","code":"oldValue"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Construct the appropriate "},{"type":"codeVoice","code":"StateChange"},{"text":" object (using ","type":"text"},{"type":"codeVoice","code":"EntityID"},{"type":"text","text":", "},{"type":"codeVoice","code":"StatePropertyKey"},{"type":"text","text":", "},{"type":"codeVoice","code":"oldValue"},{"type":"text","text":", "},{"type":"codeVoice","code":"newValue"},{"text":").","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Call "},{"code":"try gameState.apply(change)","type":"codeVoice"},{"type":"text","text":" instead of performing direct mutation."}]}]}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create ergonomic helper methods in "},{"type":"codeVoice","code":"GameEngine"},{"text":" (e.g., ","type":"text"},{"type":"codeVoice","code":"applyFlagChange"},{"type":"text","text":", "},{"code":"applyScoreUpdate","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"applyItemMove"},{"text":") that encapsulate ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":" creation and the call to "},{"code":"gameState.apply","type":"codeVoice"},{"type":"text","text":" for common mutations needed by game logic (daemons, fuses, handlers)."}]}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"Ensure "},{"code":"GameEngine.execute","type":"codeVoice"},{"text":" correctly calls ","type":"text"},{"code":"gameState.apply(change)","type":"codeVoice"},{"text":" for changes originating from ","type":"text"},{"type":"codeVoice","code":"ActionHandler"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ActionResult"},{"text":"s (confirming the current implementation which looks correct).","type":"text"}],"type":"paragraph"}],"checked":true}],"type":"unorderedList"}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Testing:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Add comprehensive unit tests for "},{"code":"GameState.apply","type":"codeVoice"},{"text":" covering all ","type":"text"},{"code":"StatePropertyKey","type":"codeVoice"},{"type":"text","text":" cases, including "},{"code":"oldValue","type":"codeVoice"},{"type":"text","text":" validation."}],"type":"paragraph"}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update\/add integration tests to ensure actions and engine operations correctly modify state and update "},{"type":"codeVoice","code":"changeHistory"},{"text":" via the new mechanism.","type":"text"}]}]}]}]}]},{"text":"Phase 2: Convert Core Models to Structs","anchor":"Phase-2-Convert-Core-Models-to-Structs","level":2,"type":"heading"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Goal:","type":"text"}]},{"type":"text","text":" Leverage value semantics for "},{"type":"codeVoice","code":"Item"},{"type":"text","text":" and "},{"code":"Location","type":"codeVoice"},{"type":"text","text":" to further enhance predictability, simplify "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" conformance, and remove the need for snapshot types. (To be undertaken "},{"inlineContent":[{"type":"text","text":"after"}],"type":"emphasis"},{"text":" Phase 1 is complete and stable).","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Steps:"}]}]},{"items":[{"checked":true,"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Convert "},{"type":"codeVoice","code":"Item"},{"type":"text","text":" to Struct:"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"checked":true,"content":[{"inlineContent":[{"text":"Change ","type":"text"},{"type":"codeVoice","code":"Item"},{"type":"text","text":" declaration from "},{"code":"class","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}],"type":"paragraph"}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update all code that interacts with "},{"code":"Item","type":"codeVoice"},{"text":" instances to handle value semantics (mutations will require replacing the instance in ","type":"text"},{"type":"codeVoice","code":"GameState.items"},{"text":").","type":"text"}]}]},{"checked":true,"content":[{"inlineContent":[{"type":"text","text":"Adjust "},{"type":"codeVoice","code":"GameState.apply"},{"type":"text","text":" logic for item-related keys to replace the item struct in the dictionary."}],"type":"paragraph"}]}]}]},{"checked":true,"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Convert ","type":"text"},{"code":"Location","type":"codeVoice"},{"text":" to Struct:","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Change "},{"code":"Location","type":"codeVoice"},{"text":" declaration from ","type":"text"},{"type":"codeVoice","code":"class"},{"text":" to ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"Update all code that interacts with "},{"code":"Location","type":"codeVoice"},{"type":"text","text":" instances to handle value semantics."}],"type":"paragraph"}],"checked":true},{"checked":true,"content":[{"inlineContent":[{"type":"text","text":"Adjust "},{"code":"GameState.apply","type":"codeVoice"},{"text":" logic for location-related keys to replace the location struct in the dictionary.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Remove Snapshot Types:"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Delete "},{"type":"codeVoice","code":"ItemSnapshot.swift"},{"text":".","type":"text"}]}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"Delete "},{"code":"LocationSnapshot.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"checked":true},{"content":[{"inlineContent":[{"text":"Update all code (primarily in ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":") that used snapshots to use the "},{"type":"codeVoice","code":"Item"},{"text":" and ","type":"text"},{"code":"Location","type":"codeVoice"},{"type":"text","text":" structs directly."}],"type":"paragraph"}],"checked":true}]}],"checked":true},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Review "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" Conformance:"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Verify "},{"type":"codeVoice","code":"Item"},{"text":", ","type":"text"},{"code":"Location","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"GameState","type":"codeVoice"},{"text":" conform to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" correctly."}]}],"checked":true}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Testing:","type":"text"}],"type":"strong"}]},{"items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update existing tests to reflect the use of structs instead of classes\/snapshots."}]}]},{"content":[{"inlineContent":[{"text":"Add tests specifically verifying value semantics (ensuring mutations donâ€™t have unintended side effects).","type":"text"}],"type":"paragraph"}],"checked":true}],"type":"unorderedList"}],"checked":true}],"type":"unorderedList"}],"kind":"content"}],"kind":"article","references":{"doc://GnustoEngine/documentation/GnustoEngine":{"title":"GnustoEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/gnustoengine","abstract":[]}}}