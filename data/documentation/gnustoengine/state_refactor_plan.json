{"sections":[],"identifier":{"url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/STATE_REFACTOR_PLAN","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/state_refactor_plan"]}],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"metadata":{"roleHeading":"Article","modules":[{"name":"GnustoEngine"}],"role":"article","title":"State Management Refactoring Plan [DONE]"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"This document outlines the phased plan to refactor the Gnusto Engineâ€™s state management for increased robustness, testability, and clarity, while maintaining good developer ergonomics."}],"kind":"article","primaryContentSections":[{"content":[{"text":"Phase 1: Centralized State Mutation via `GameState`","level":2,"anchor":"Phase-1-Centralized-State-Mutation-via-GameState","type":"heading"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Goal:"}],"type":"strong"},{"type":"text","text":" Ensure all modifications to the game state are channeled through a single, controlled mechanism within the "},{"type":"codeVoice","code":"GameState"},{"type":"text","text":" struct, guaranteeing that every change is recorded in the "},{"code":"changeHistory","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Steps:","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Generalize "},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":" Identifier:"}],"type":"strong"}],"type":"paragraph"},{"items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Define ","type":"text"},{"type":"codeVoice","code":"EntityID"},{"text":" enum (","type":"text"},{"type":"codeVoice","code":".item(ItemID)"},{"text":", ","type":"text"},{"code":".location(LocationID)","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":".player"},{"text":", ","type":"text"},{"type":"codeVoice","code":".global"},{"text":") in ","type":"text"},{"type":"codeVoice","code":"ActionResult.swift"},{"text":".","type":"text"}]}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Update ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":" struct to use "},{"type":"codeVoice","code":"entityID: EntityID"},{"text":" instead of ","type":"text"},{"type":"codeVoice","code":"objectId: ItemID"},{"type":"text","text":"."}]}]},{"checked":true,"content":[{"inlineContent":[{"type":"text","text":"Review and update "},{"type":"codeVoice","code":"StatePropertyKey"},{"type":"text","text":" enum cases to align with "},{"code":"EntityID","type":"codeVoice"},{"text":" (e.g., ensure keys clearly map to item, location, player, or global state). Add missing keys like ","type":"text"},{"code":".exits","type":"codeVoice"},{"type":"text","text":" if needed, along with corresponding "},{"type":"codeVoice","code":"StateValue"},{"type":"text","text":" cases."}],"type":"paragraph"}]}],"type":"unorderedList"}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Implement ","type":"text"},{"type":"codeVoice","code":"GameState.apply(_:)"},{"text":":","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Add ","type":"text"},{"type":"codeVoice","code":"public private(set)"},{"text":" access control to core state properties in ","type":"text"},{"code":"GameState","type":"codeVoice"},{"text":" (","type":"text"},{"type":"codeVoice","code":"items"},{"type":"text","text":", "},{"type":"codeVoice","code":"locations"},{"type":"text","text":", "},{"type":"codeVoice","code":"flags"},{"type":"text","text":", "},{"code":"player","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"activeFuses"},{"text":", ","type":"text"},{"type":"codeVoice","code":"activeDaemons"},{"type":"text","text":", "},{"type":"codeVoice","code":"pronouns"},{"type":"text","text":", "},{"code":"globalState","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"changeHistory"},{"text":").","type":"text"}]}]},{"checked":true,"content":[{"inlineContent":[{"text":"Create a ","type":"text"},{"type":"codeVoice","code":"public mutating func apply(_ change: StateChange) throws"},{"type":"text","text":" method within "},{"type":"codeVoice","code":"GameState"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Move the ","type":"text"},{"code":"switch change.propertyKey","type":"codeVoice"},{"text":" logic from ","type":"text"},{"type":"codeVoice","code":"GameEngine.applyStateChange"},{"text":" into ","type":"text"},{"code":"GameState.apply","type":"codeVoice"},{"text":".","type":"text"}]}],"checked":true},{"checked":true,"content":[{"inlineContent":[{"type":"text","text":"Ensure "},{"code":"GameState.apply","type":"codeVoice"},{"text":" validates ","type":"text"},{"type":"codeVoice","code":"change.oldValue"},{"text":" against the current state before applying the mutation.","type":"text"}],"type":"paragraph"}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"code":"GameState.apply","type":"codeVoice"},{"type":"text","text":" appends the "},{"code":"change","type":"codeVoice"},{"type":"text","text":" to "},{"code":"changeHistory","type":"codeVoice"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"after"}]},{"type":"text","text":" a successful mutation."}]}]}]}]},{"checked":true,"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Refactor ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":":"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modify ","type":"text"},{"type":"codeVoice","code":"GameEngine.applyStateChange"},{"text":" to be a simple forwarding call: ","type":"text"},{"type":"codeVoice","code":"try gameState.apply(change)"},{"type":"text","text":"."}]}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Identify all methods\/code locations within ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"text":" that directly modify ","type":"text"},{"type":"codeVoice","code":"gameState"},{"type":"text","text":" or its contained objects (e.g., "},{"type":"codeVoice","code":"updateItemParent"},{"text":", ","type":"text"},{"code":"setFlagValue","type":"codeVoice"},{"type":"text","text":", player move increments, fuse\/daemon updates in "},{"type":"codeVoice","code":"tickClock"},{"text":", etc.).","type":"text"}]}]},{"checked":true,"content":[{"inlineContent":[{"text":"Refactor these locations to:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Determine the ","type":"text"},{"type":"codeVoice","code":"oldValue"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Construct the appropriate "},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":" object (using "},{"type":"codeVoice","code":"EntityID"},{"type":"text","text":", "},{"type":"codeVoice","code":"StatePropertyKey"},{"type":"text","text":", "},{"type":"codeVoice","code":"oldValue"},{"type":"text","text":", "},{"type":"codeVoice","code":"newValue"},{"type":"text","text":")."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Call ","type":"text"},{"code":"try gameState.apply(change)","type":"codeVoice"},{"type":"text","text":" instead of performing direct mutation."}],"type":"paragraph"}]}]}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create ergonomic helper methods in "},{"code":"GameEngine","type":"codeVoice"},{"text":" (e.g., ","type":"text"},{"code":"applyFlagChange","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"applyScoreUpdate"},{"type":"text","text":", "},{"code":"applyItemMove","type":"codeVoice"},{"type":"text","text":") that encapsulate "},{"code":"StateChange","type":"codeVoice"},{"text":" creation and the call to ","type":"text"},{"code":"gameState.apply","type":"codeVoice"},{"text":" for common mutations needed by game logic (daemons, fuses, handlers).","type":"text"}]}]},{"checked":true,"content":[{"inlineContent":[{"text":"Ensure ","type":"text"},{"type":"codeVoice","code":"GameEngine.execute"},{"text":" correctly calls ","type":"text"},{"type":"codeVoice","code":"gameState.apply(change)"},{"text":" for changes originating from ","type":"text"},{"type":"codeVoice","code":"ActionHandler"},{"type":"text","text":" "},{"code":"ActionResult","type":"codeVoice"},{"text":"s (confirming the current implementation which looks correct).","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Testing:","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"checked":true,"content":[{"inlineContent":[{"text":"Add comprehensive unit tests for ","type":"text"},{"code":"GameState.apply","type":"codeVoice"},{"text":" covering all ","type":"text"},{"type":"codeVoice","code":"StatePropertyKey"},{"type":"text","text":" cases, including "},{"code":"oldValue","type":"codeVoice"},{"text":" validation.","type":"text"}],"type":"paragraph"}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update\/add integration tests to ensure actions and engine operations correctly modify state and update "},{"type":"codeVoice","code":"changeHistory"},{"type":"text","text":" via the new mechanism."}]}]}]}],"checked":true}],"type":"unorderedList"},{"text":"Phase 2: Convert Core Models to Structs","type":"heading","anchor":"Phase-2-Convert-Core-Models-to-Structs","level":2},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Goal:","type":"text"}]},{"text":" Leverage value semantics for ","type":"text"},{"type":"codeVoice","code":"Item"},{"text":" and ","type":"text"},{"code":"Location","type":"codeVoice"},{"text":" to further enhance predictability, simplify ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" conformance, and remove the need for snapshot types. (To be undertaken ","type":"text"},{"inlineContent":[{"type":"text","text":"after"}],"type":"emphasis"},{"text":" Phase 1 is complete and stable).","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Steps:","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Convert "},{"type":"codeVoice","code":"Item"},{"type":"text","text":" to Struct:"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Change "},{"type":"codeVoice","code":"Item"},{"type":"text","text":" declaration from "},{"code":"class","type":"codeVoice"},{"type":"text","text":" to "},{"code":"struct","type":"codeVoice"},{"text":".","type":"text"}]}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"Update all code that interacts with "},{"code":"Item","type":"codeVoice"},{"type":"text","text":" instances to handle value semantics (mutations will require replacing the instance in "},{"type":"codeVoice","code":"GameState.items"},{"type":"text","text":")."}],"type":"paragraph"}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adjust "},{"type":"codeVoice","code":"GameState.apply"},{"text":" logic for item-related keys to replace the item struct in the dictionary.","type":"text"}]}],"checked":true}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Convert ","type":"text"},{"type":"codeVoice","code":"Location"},{"text":" to Struct:","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Change "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" declaration from "},{"type":"codeVoice","code":"class"},{"type":"text","text":" to "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"text":"Update all code that interacts with ","type":"text"},{"code":"Location","type":"codeVoice"},{"text":" instances to handle value semantics.","type":"text"}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"text":"Adjust ","type":"text"},{"type":"codeVoice","code":"GameState.apply"},{"type":"text","text":" logic for location-related keys to replace the location struct in the dictionary."}]}],"checked":true}],"type":"unorderedList"}],"checked":true},{"checked":true,"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Remove Snapshot Types:","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Delete ","type":"text"},{"code":"ItemSnapshot.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Delete "},{"type":"codeVoice","code":"LocationSnapshot.swift"},{"text":".","type":"text"}]}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update all code (primarily in "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":") that used snapshots to use the "},{"type":"codeVoice","code":"Item"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" structs directly."}]}]}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Review ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" Conformance:","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Verify ","type":"text"},{"type":"codeVoice","code":"Item"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Location"},{"type":"text","text":", and "},{"type":"codeVoice","code":"GameState"},{"text":" conform to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" correctly."}]}]}]}],"checked":true},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Testing:","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update existing tests to reflect the use of structs instead of classes\/snapshots."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add tests specifically verifying value semantics (ensuring mutations donâ€™t have unintended side effects)."}],"type":"paragraph"}],"checked":true}]}],"checked":true}]}],"kind":"content"}],"references":{"doc://GnustoEngine/documentation/GnustoEngine":{"url":"\/documentation\/gnustoengine","abstract":[],"identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","role":"collection","type":"topic","title":"GnustoEngine","kind":"symbol"}}}