{"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"This document outlines the phased plan to refactor the Gnusto Engineâ€™s state management for increased robustness, testability, and clarity, while maintaining good developer ergonomics.","type":"text"}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Phase 1: Centralized State Mutation via `GameState`","anchor":"Phase-1-Centralized-State-Mutation-via-GameState"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Goal:"}],"type":"strong"},{"text":" Ensure all modifications to the game state are channeled through a single, controlled mechanism within the ","type":"text"},{"code":"GameState","type":"codeVoice"},{"text":" struct, guaranteeing that every change is recorded in the ","type":"text"},{"code":"changeHistory","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Steps:"}],"type":"strong"}],"type":"paragraph"},{"items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Generalize "},{"code":"StateChange","type":"codeVoice"},{"type":"text","text":" Identifier:"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define "},{"type":"codeVoice","code":"EntityID"},{"type":"text","text":" enum ("},{"code":".item(ItemID)","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":".location(LocationID)"},{"type":"text","text":", "},{"code":".player","type":"codeVoice"},{"text":", ","type":"text"},{"code":".global","type":"codeVoice"},{"type":"text","text":") in "},{"type":"codeVoice","code":"ActionResult.swift"},{"type":"text","text":"."}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"text":"Update ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":" struct to use "},{"code":"entityID: EntityID","type":"codeVoice"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"objectId: ItemID"},{"type":"text","text":"."}]}],"checked":true},{"checked":true,"content":[{"inlineContent":[{"text":"Review and update ","type":"text"},{"type":"codeVoice","code":"StatePropertyKey"},{"type":"text","text":" enum cases to align with "},{"code":"EntityID","type":"codeVoice"},{"type":"text","text":" (e.g., ensure keys clearly map to item, location, player, or global state). Add missing keys like "},{"type":"codeVoice","code":".exits"},{"type":"text","text":" if needed, along with corresponding "},{"code":"StateValue","type":"codeVoice"},{"text":" cases.","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Implement "},{"code":"GameState.apply(_:)","type":"codeVoice"},{"type":"text","text":":"}],"type":"strong"}]},{"items":[{"checked":true,"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"type":"codeVoice","code":"public private(set)"},{"text":" access control to core state properties in ","type":"text"},{"type":"codeVoice","code":"GameState"},{"type":"text","text":" ("},{"code":"items","type":"codeVoice"},{"type":"text","text":", "},{"code":"locations","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"flags"},{"type":"text","text":", "},{"code":"player","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"activeFuses"},{"type":"text","text":", "},{"code":"activeDaemons","type":"codeVoice"},{"type":"text","text":", "},{"code":"pronouns","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"globalState"},{"type":"text","text":", "},{"code":"changeHistory","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Create a "},{"code":"public mutating func apply(_ change: StateChange) throws","type":"codeVoice"},{"text":" method within ","type":"text"},{"code":"GameState","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"text":"Move the ","type":"text"},{"type":"codeVoice","code":"switch change.propertyKey"},{"text":" logic from ","type":"text"},{"type":"codeVoice","code":"GameEngine.applyStateChange"},{"type":"text","text":" into "},{"code":"GameState.apply","type":"codeVoice"},{"text":".","type":"text"}]}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"type":"codeVoice","code":"GameState.apply"},{"text":" validates ","type":"text"},{"type":"codeVoice","code":"change.oldValue"},{"type":"text","text":" against the current state before applying the mutation."}]}]},{"checked":true,"content":[{"inlineContent":[{"type":"text","text":"Ensure "},{"code":"GameState.apply","type":"codeVoice"},{"type":"text","text":" appends the "},{"type":"codeVoice","code":"change"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"changeHistory"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"after"}]},{"type":"text","text":" a successful mutation."}],"type":"paragraph"}]}],"type":"unorderedList"}],"checked":true},{"checked":true,"content":[{"inlineContent":[{"inlineContent":[{"text":"Refactor ","type":"text"},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":":"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modify "},{"code":"GameEngine.applyStateChange","type":"codeVoice"},{"text":" to be a simple forwarding call: ","type":"text"},{"code":"try gameState.apply(change)","type":"codeVoice"},{"text":".","type":"text"}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Identify all methods\/code locations within "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" that directly modify "},{"type":"codeVoice","code":"gameState"},{"text":" or its contained objects (e.g., ","type":"text"},{"type":"codeVoice","code":"updateItemParent"},{"type":"text","text":", "},{"code":"setFlagValue","type":"codeVoice"},{"type":"text","text":", player move increments, fuse\/daemon updates in "},{"type":"codeVoice","code":"tickClock"},{"text":", etc.).","type":"text"}]}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"Refactor these locations to:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Determine the "},{"code":"oldValue","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Construct the appropriate ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"text":" object (using ","type":"text"},{"type":"codeVoice","code":"EntityID"},{"type":"text","text":", "},{"code":"StatePropertyKey","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"oldValue"},{"type":"text","text":", "},{"type":"codeVoice","code":"newValue"},{"text":").","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Call ","type":"text"},{"type":"codeVoice","code":"try gameState.apply(change)"},{"text":" instead of performing direct mutation.","type":"text"}]}]}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create ergonomic helper methods in "},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":" (e.g., "},{"type":"codeVoice","code":"applyFlagChange"},{"type":"text","text":", "},{"code":"applyScoreUpdate","type":"codeVoice"},{"type":"text","text":", "},{"code":"applyItemMove","type":"codeVoice"},{"text":") that encapsulate ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"text":" creation and the call to ","type":"text"},{"type":"codeVoice","code":"gameState.apply"},{"text":" for common mutations needed by game logic (daemons, fuses, handlers).","type":"text"}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"type":"codeVoice","code":"GameEngine.execute"},{"text":" correctly calls ","type":"text"},{"type":"codeVoice","code":"gameState.apply(change)"},{"type":"text","text":" for changes originating from "},{"type":"codeVoice","code":"ActionHandler"},{"type":"text","text":" "},{"type":"codeVoice","code":"ActionResult"},{"text":"s (confirming the current implementation which looks correct).","type":"text"}]}],"checked":true}],"type":"unorderedList"}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Testing:"}],"type":"strong"}]},{"type":"unorderedList","items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Add comprehensive unit tests for ","type":"text"},{"code":"GameState.apply","type":"codeVoice"},{"type":"text","text":" covering all "},{"type":"codeVoice","code":"StatePropertyKey"},{"type":"text","text":" cases, including "},{"code":"oldValue","type":"codeVoice"},{"type":"text","text":" validation."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Update\/add integration tests to ensure actions and engine operations correctly modify state and update ","type":"text"},{"code":"changeHistory","type":"codeVoice"},{"text":" via the new mechanism.","type":"text"}]}],"checked":true}]}]}],"type":"unorderedList"},{"level":2,"anchor":"Phase-2-Convert-Core-Models-to-Structs","text":"Phase 2: Convert Core Models to Structs","type":"heading"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Goal:"}],"type":"strong"},{"text":" Leverage value semantics for ","type":"text"},{"type":"codeVoice","code":"Item"},{"type":"text","text":" and "},{"code":"Location","type":"codeVoice"},{"text":" to further enhance predictability, simplify ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" conformance, and remove the need for snapshot types. (To be undertaken "},{"inlineContent":[{"text":"after","type":"text"}],"type":"emphasis"},{"text":" Phase 1 is complete and stable).","type":"text"}]},{"inlineContent":[{"inlineContent":[{"text":"Steps:","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Convert ","type":"text"},{"type":"codeVoice","code":"Item"},{"text":" to Struct:","type":"text"}]}]},{"type":"unorderedList","items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Change "},{"type":"codeVoice","code":"Item"},{"type":"text","text":" declaration from "},{"code":"class","type":"codeVoice"},{"type":"text","text":" to "},{"type":"codeVoice","code":"struct"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Update all code that interacts with "},{"code":"Item","type":"codeVoice"},{"type":"text","text":" instances to handle value semantics (mutations will require replacing the instance in "},{"type":"codeVoice","code":"GameState.items"},{"text":").","type":"text"}],"type":"paragraph"}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adjust "},{"type":"codeVoice","code":"GameState.apply"},{"type":"text","text":" logic for item-related keys to replace the item struct in the dictionary."}]}],"checked":true}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Convert "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" to Struct:"}],"type":"strong"}],"type":"paragraph"},{"items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Change "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" declaration from "},{"type":"codeVoice","code":"class"},{"type":"text","text":" to "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}]}]},{"checked":true,"content":[{"inlineContent":[{"type":"text","text":"Update all code that interacts with "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" instances to handle value semantics."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adjust "},{"type":"codeVoice","code":"GameState.apply"},{"type":"text","text":" logic for location-related keys to replace the location struct in the dictionary."}]}],"checked":true}],"type":"unorderedList"}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Remove Snapshot Types:"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Delete ","type":"text"},{"type":"codeVoice","code":"ItemSnapshot.swift"},{"type":"text","text":"."}]}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"Delete "},{"code":"LocationSnapshot.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update all code (primarily in "},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":") that used snapshots to use the "},{"type":"codeVoice","code":"Item"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Location"},{"type":"text","text":" structs directly."}]}],"checked":true}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Review "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" Conformance:"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Verify ","type":"text"},{"type":"codeVoice","code":"Item"},{"type":"text","text":", "},{"code":"Location","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"GameState"},{"type":"text","text":" conform to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" correctly."}]}],"checked":true}],"type":"unorderedList"}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Testing:"}]}]},{"type":"unorderedList","items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Update existing tests to reflect the use of structs instead of classes\/snapshots.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add tests specifically verifying value semantics (ensuring mutations donâ€™t have unintended side effects)."}]}],"checked":true}]}],"checked":true}]}],"kind":"content"}],"metadata":{"role":"article","modules":[{"name":"GnustoEngine"}],"title":"State Management Refactoring Plan [DONE]","roleHeading":"Article"},"sections":[],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/STATE_REFACTOR_PLAN"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/state_refactor_plan"]}],"references":{"doc://GnustoEngine/documentation/GnustoEngine":{"url":"\/documentation\/gnustoengine","abstract":[],"kind":"symbol","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic","title":"GnustoEngine","role":"collection"}}}