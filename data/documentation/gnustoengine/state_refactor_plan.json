{"sections":[],"metadata":{"role":"article","title":"State Management Refactoring Plan [DONE]","roleHeading":"Article","modules":[{"name":"GnustoEngine"}]},"kind":"article","abstract":[{"type":"text","text":"This document outlines the phased plan to refactor the Gnusto Engineâ€™s state management for increased robustness, testability, and clarity, while maintaining good developer ergonomics."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/STATE_REFACTOR_PLAN"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"content":[{"anchor":"Phase-1-Centralized-State-Mutation-via-GameState","level":2,"text":"Phase 1: Centralized State Mutation via `GameState`","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Goal:","type":"text"}]},{"type":"text","text":" Ensure all modifications to the game state are channeled through a single, controlled mechanism within the "},{"type":"codeVoice","code":"GameState"},{"type":"text","text":" struct, guaranteeing that every change is recorded in the "},{"code":"changeHistory","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Steps:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Generalize ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"text":" Identifier:","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define "},{"code":"EntityID","type":"codeVoice"},{"text":" enum (","type":"text"},{"code":".item(ItemID)","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":".location(LocationID)"},{"type":"text","text":", "},{"code":".player","type":"codeVoice"},{"type":"text","text":", "},{"code":".global","type":"codeVoice"},{"type":"text","text":") in "},{"type":"codeVoice","code":"ActionResult.swift"},{"text":".","type":"text"}]}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Update ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":" struct to use "},{"type":"codeVoice","code":"entityID: EntityID"},{"text":" instead of ","type":"text"},{"type":"codeVoice","code":"objectId: ItemID"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Review and update ","type":"text"},{"type":"codeVoice","code":"StatePropertyKey"},{"type":"text","text":" enum cases to align with "},{"code":"EntityID","type":"codeVoice"},{"text":" (e.g., ensure keys clearly map to item, location, player, or global state). Add missing keys like ","type":"text"},{"type":"codeVoice","code":".exits"},{"type":"text","text":" if needed, along with corresponding "},{"type":"codeVoice","code":"StateValue"},{"type":"text","text":" cases."}]}],"checked":true}]}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Implement "},{"type":"codeVoice","code":"GameState.apply(_:)"},{"text":":","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"public private(set)"},{"text":" access control to core state properties in ","type":"text"},{"code":"GameState","type":"codeVoice"},{"type":"text","text":" ("},{"type":"codeVoice","code":"items"},{"type":"text","text":", "},{"type":"codeVoice","code":"locations"},{"text":", ","type":"text"},{"code":"flags","type":"codeVoice"},{"text":", ","type":"text"},{"code":"player","type":"codeVoice"},{"text":", ","type":"text"},{"code":"activeFuses","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"activeDaemons"},{"text":", ","type":"text"},{"code":"pronouns","type":"codeVoice"},{"type":"text","text":", "},{"code":"globalState","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"changeHistory"},{"type":"text","text":")."}]}],"checked":true},{"content":[{"inlineContent":[{"text":"Create a ","type":"text"},{"code":"public mutating func apply(_ change: StateChange) throws","type":"codeVoice"},{"text":" method within ","type":"text"},{"code":"GameState","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Move the "},{"code":"switch change.propertyKey","type":"codeVoice"},{"type":"text","text":" logic from "},{"type":"codeVoice","code":"GameEngine.applyStateChange"},{"type":"text","text":" into "},{"type":"codeVoice","code":"GameState.apply"},{"type":"text","text":"."}]}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"code":"GameState.apply","type":"codeVoice"},{"text":" validates ","type":"text"},{"code":"change.oldValue","type":"codeVoice"},{"text":" against the current state before applying the mutation.","type":"text"}]}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"type":"codeVoice","code":"GameState.apply"},{"text":" appends the ","type":"text"},{"type":"codeVoice","code":"change"},{"type":"text","text":" to "},{"code":"changeHistory","type":"codeVoice"},{"text":" ","type":"text"},{"inlineContent":[{"text":"after","type":"text"}],"type":"emphasis"},{"type":"text","text":" a successful mutation."}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Refactor ","type":"text"},{"type":"codeVoice","code":"GameEngine"},{"type":"text","text":":"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modify ","type":"text"},{"type":"codeVoice","code":"GameEngine.applyStateChange"},{"type":"text","text":" to be a simple forwarding call: "},{"type":"codeVoice","code":"try gameState.apply(change)"},{"text":".","type":"text"}]}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Identify all methods\/code locations within "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":" that directly modify "},{"type":"codeVoice","code":"gameState"},{"text":" or its contained objects (e.g., ","type":"text"},{"type":"codeVoice","code":"updateItemParent"},{"text":", ","type":"text"},{"type":"codeVoice","code":"setFlagValue"},{"text":", player move increments, fuse\/daemon updates in ","type":"text"},{"type":"codeVoice","code":"tickClock"},{"type":"text","text":", etc.)."}]}]},{"content":[{"inlineContent":[{"text":"Refactor these locations to:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Determine the "},{"type":"codeVoice","code":"oldValue"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Construct the appropriate ","type":"text"},{"type":"codeVoice","code":"StateChange"},{"type":"text","text":" object (using "},{"type":"codeVoice","code":"EntityID"},{"type":"text","text":", "},{"type":"codeVoice","code":"StatePropertyKey"},{"text":", ","type":"text"},{"code":"oldValue","type":"codeVoice"},{"text":", ","type":"text"},{"code":"newValue","type":"codeVoice"},{"type":"text","text":")."}]}]},{"content":[{"inlineContent":[{"text":"Call ","type":"text"},{"type":"codeVoice","code":"try gameState.apply(change)"},{"text":" instead of performing direct mutation.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"Create ergonomic helper methods in "},{"type":"codeVoice","code":"GameEngine"},{"text":" (e.g., ","type":"text"},{"type":"codeVoice","code":"applyFlagChange"},{"text":", ","type":"text"},{"type":"codeVoice","code":"applyScoreUpdate"},{"text":", ","type":"text"},{"code":"applyItemMove","type":"codeVoice"},{"type":"text","text":") that encapsulate "},{"type":"codeVoice","code":"StateChange"},{"text":" creation and the call to ","type":"text"},{"type":"codeVoice","code":"gameState.apply"},{"text":" for common mutations needed by game logic (daemons, fuses, handlers).","type":"text"}],"type":"paragraph"}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Ensure ","type":"text"},{"type":"codeVoice","code":"GameEngine.execute"},{"text":" correctly calls ","type":"text"},{"type":"codeVoice","code":"gameState.apply(change)"},{"type":"text","text":" for changes originating from "},{"code":"ActionHandler","type":"codeVoice"},{"type":"text","text":" "},{"type":"codeVoice","code":"ActionResult"},{"text":"s (confirming the current implementation which looks correct).","type":"text"}]}]}],"type":"unorderedList"}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Testing:","type":"text"}]}]},{"type":"unorderedList","items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add comprehensive unit tests for "},{"type":"codeVoice","code":"GameState.apply"},{"type":"text","text":" covering all "},{"type":"codeVoice","code":"StatePropertyKey"},{"text":" cases, including ","type":"text"},{"type":"codeVoice","code":"oldValue"},{"type":"text","text":" validation."}]}]},{"checked":true,"content":[{"inlineContent":[{"type":"text","text":"Update\/add integration tests to ensure actions and engine operations correctly modify state and update "},{"type":"codeVoice","code":"changeHistory"},{"type":"text","text":" via the new mechanism."}],"type":"paragraph"}]}]}],"checked":true}]},{"type":"heading","text":"Phase 2: Convert Core Models to Structs","anchor":"Phase-2-Convert-Core-Models-to-Structs","level":2},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Goal:"}]},{"type":"text","text":" Leverage value semantics for "},{"code":"Item","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Location","type":"codeVoice"},{"type":"text","text":" to further enhance predictability, simplify "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" conformance, and remove the need for snapshot types. (To be undertaken "},{"type":"emphasis","inlineContent":[{"text":"after","type":"text"}]},{"text":" Phase 1 is complete and stable).","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Steps:","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Convert "},{"type":"codeVoice","code":"Item"},{"type":"text","text":" to Struct:"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Change ","type":"text"},{"type":"codeVoice","code":"Item"},{"type":"text","text":" declaration from "},{"code":"class","type":"codeVoice"},{"type":"text","text":" to "},{"code":"struct","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Update all code that interacts with ","type":"text"},{"type":"codeVoice","code":"Item"},{"text":" instances to handle value semantics (mutations will require replacing the instance in ","type":"text"},{"code":"GameState.items","type":"codeVoice"},{"text":").","type":"text"}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adjust "},{"type":"codeVoice","code":"GameState.apply"},{"text":" logic for item-related keys to replace the item struct in the dictionary.","type":"text"}]}],"checked":true}]}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Convert "},{"type":"codeVoice","code":"Location"},{"type":"text","text":" to Struct:"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Change ","type":"text"},{"type":"codeVoice","code":"Location"},{"type":"text","text":" declaration from "},{"type":"codeVoice","code":"class"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}],"type":"paragraph"}],"checked":true},{"checked":true,"content":[{"inlineContent":[{"text":"Update all code that interacts with ","type":"text"},{"code":"Location","type":"codeVoice"},{"type":"text","text":" instances to handle value semantics."}],"type":"paragraph"}]},{"checked":true,"content":[{"inlineContent":[{"text":"Adjust ","type":"text"},{"code":"GameState.apply","type":"codeVoice"},{"text":" logic for location-related keys to replace the location struct in the dictionary.","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Remove Snapshot Types:"}]}]},{"items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Delete "},{"code":"ItemSnapshot.swift","type":"codeVoice"},{"type":"text","text":"."}]}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Delete ","type":"text"},{"type":"codeVoice","code":"LocationSnapshot.swift"},{"text":".","type":"text"}]}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update all code (primarily in "},{"code":"GameEngine","type":"codeVoice"},{"type":"text","text":") that used snapshots to use the "},{"code":"Item","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Location"},{"text":" structs directly.","type":"text"}]}]}],"type":"unorderedList"}],"checked":true},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Review "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" Conformance:"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Verify ","type":"text"},{"code":"Item","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Location"},{"type":"text","text":", and "},{"type":"codeVoice","code":"GameState"},{"text":" conform to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" correctly.","type":"text"}],"type":"paragraph"}],"checked":true}]}]},{"checked":true,"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Testing:"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"checked":true,"content":[{"inlineContent":[{"text":"Update existing tests to reflect the use of structs instead of classes\/snapshots.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add tests specifically verifying value semantics (ensuring mutations donâ€™t have unintended side effects).","type":"text"}]}],"checked":true}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/state_refactor_plan"]}],"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"references":{"doc://GnustoEngine/documentation/GnustoEngine":{"url":"\/documentation\/gnustoengine","role":"collection","abstract":[],"title":"GnustoEngine","kind":"symbol","type":"topic","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine"}}}