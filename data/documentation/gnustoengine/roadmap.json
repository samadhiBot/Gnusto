{"primaryContentSections":[{"content":[{"anchor":"Phase-1-Improved-Developer-Ergonomics","level":2,"type":"heading","text":"Phase 1: Improved Developer Ergonomics"},{"level":3,"text":"1.1 Handler Registration Improvements ✅ COMPLETED","anchor":"11-Handler-Registration-Improvements-%E2%9C%85-COMPLETED","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"✅ "},{"type":"strong","inlineContent":[{"type":"text","text":"Implement automatic handler discovery with GnustoAutoWiringPlugin"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"✅ Allow handlers to be defined as static properties in game area structs\/enums"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"✅ Use automatic pattern discovery to register handlers via build tool plugin"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"✅ Provide comprehensive game setup generation including items, locations, handlers, and time registry"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"✅ Support both static (enum-based) and instance (struct-based) area architectures"}]}]}],"type":"unorderedList"}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"✅ "},{"type":"strong","inlineContent":[{"text":"Automatic ID constant generation","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"✅ Scan "},{"code":"Location(id: .someID, ...)","type":"codeVoice"},{"type":"text","text":" patterns and generate "},{"code":"LocationID.someID","type":"codeVoice"},{"text":" extensions","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"✅ Scan ","type":"text"},{"type":"codeVoice","code":"Item(id: .someID, ...)"},{"type":"text","text":" patterns and generate "},{"type":"codeVoice","code":"ItemID.someID"},{"text":" extensions","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"✅ Support ","type":"text"},{"code":"GlobalID","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"FuseID"},{"text":", ","type":"text"},{"code":"DaemonID","type":"codeVoice"},{"type":"text","text":", and custom "},{"type":"codeVoice","code":"VerbID"},{"text":" generation","type":"text"}],"type":"paragraph"}]}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"text":"✅ ","type":"text"},{"inlineContent":[{"text":"Complete GameBlueprint integration","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"✅ Auto-aggregate all items and locations from multiple area files"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"✅ Auto-wire event handlers with proper scoping","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"✅ Auto-register fuse and daemon definitions in TimeRegistry"}],"type":"paragraph"}]}]}],"checked":true}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"text":"The GnustoAutoWiringPlugin has eliminated virtually all boilerplate code for game setup!","type":"text"}],"type":"strong"}],"type":"paragraph"},{"anchor":"12-State-Change-Ergonomics","level":3,"type":"heading","text":"1.2 State Change Ergonomics"},{"type":"unorderedList","items":[{"checked":false,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Expand "},{"code":"GameEngine+stateChanges.swift","type":"codeVoice"},{"text":" helper methods","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Add helpers for common state change patterns","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Support batch state changes"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add validation helpers"}]}]}]}]},{"checked":false,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SPIKE: Implement state change composition"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Allow combining multiple state changes","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Support conditional state changes","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add rollback capabilities","type":"text"}]}]}]}]}]},{"type":"heading","anchor":"13-Conditional-Exits","level":3,"text":"1.3 Conditional Exits"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Design and implement conditional exit system"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support dynamic exit conditions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Allow exit-specific messages"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Enable exit state tracking"}],"type":"paragraph"}]}],"type":"unorderedList"}],"checked":false},{"checked":false,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SPIKE: Add builder API for exit definition"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Support fluent exit configuration"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Enable conditional exit composition"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Add validation helpers","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"level":3,"type":"heading","text":"1.4 Testing Infrastructure","anchor":"14-Testing-Infrastructure"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enhance testing support"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Add helper methods for common test scenarios"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement snapshot testing for game state"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add performance testing utilities","type":"text"}]}]}],"type":"unorderedList"}],"checked":false},{"checked":false,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Improve test documentation"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Add examples for common test cases"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Document best practices"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create testing templates"}]}]}],"type":"unorderedList"}]}]},{"anchor":"Phase-2-Documentation-and-Developer-Experience","text":"Phase 2: Documentation and Developer Experience","level":2,"type":"heading"},{"anchor":"21-API-Documentation","type":"heading","text":"2.1 API Documentation","level":3},{"items":[{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Create comprehensive API documentation","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Document all public interfaces","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add usage examples"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Include best practices","type":"text"}]}]}]}]},{"checked":true,"content":[{"type":"paragraph","inlineContent":[{"text":"Add inline documentation","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Document all public methods","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add parameter descriptions"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Include return value documentation"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"type":"heading","anchor":"22-Developer-Guides","level":3,"text":"2.2 Developer Guides"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create getting started guide"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Basic game setup"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Common patterns","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Best practices"}]}]}]}],"checked":false},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Write advanced topics guide"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Custom action handlers"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"State management"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Performance optimization"}]}]}],"type":"unorderedList"}],"checked":false},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add troubleshooting guide"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Common issues"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Debugging tips"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Performance considerations","type":"text"}]}]}],"type":"unorderedList"}],"checked":false}]},{"text":"2.3 Example Games","anchor":"23-Example-Games","type":"heading","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Expand example game collection"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add more complex examples"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Include commented code","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Show different patterns","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"checked":false},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create tutorial games"}]},{"items":[{"content":[{"inlineContent":[{"text":"Step-by-step guides","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Progressive complexity","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Best practice examples"}]}]}],"type":"unorderedList"}],"checked":false}],"type":"unorderedList"},{"text":"2.4 Tooling","anchor":"24-Tooling","type":"heading","level":3},{"type":"unorderedList","items":[{"checked":false,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SPIKE: Add development tools"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Game state visualizer","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Action handler debugger","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Performance profiler","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SPIKE: Create templates"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Project templates"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Handler templates"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test templates"}]}]}],"type":"unorderedList"}],"checked":false}]},{"level":2,"text":"Phase 3: Engine Enhancements","anchor":"Phase-3-Engine-Enhancements","type":"heading"},{"anchor":"31-Extensibility","text":"3.1 Extensibility","type":"heading","level":3},{"type":"unorderedList","items":[{"checked":false,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SPIKE: Design plugin system"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Custom action handlers","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"State change processors","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Parser extensions","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SPIKE: Add middleware support"}]},{"items":[{"content":[{"inlineContent":[{"text":"Action preprocessing","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"State change validation"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Result postprocessing"}]}]}],"type":"unorderedList"}],"checked":false}]},{"level":2,"anchor":"Success-Metrics","type":"heading","text":"Success Metrics"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Developer Experience","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"✅ ","type":"text"},{"type":"strong","inlineContent":[{"text":"Dramatically reduced boilerplate code","type":"text"}]},{"type":"text","text":" - GnustoAutoWiringPlugin eliminates manual ID generation and game setup"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"✅ "},{"inlineContent":[{"type":"text","text":"Faster development cycles"}],"type":"strong"},{"type":"text","text":" - Plugin handles all the wiring automatically"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"✅ ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Fewer runtime errors"}]},{"text":" - Compile-time discovery ensures consistent setup","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Code Quality"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Increased test coverage","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Reduced complexity","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Better maintainability","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Documentation","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Complete API coverage","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Clear examples"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Up-to-date guides","type":"text"}]}]}]}]}],"type":"orderedList"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gnustoengine\/roadmap"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine\/Roadmap"},"hierarchy":{"paths":[["doc:\/\/GnustoEngine\/documentation\/GnustoEngine"]]},"sections":[],"metadata":{"role":"article","modules":[{"name":"GnustoEngine"}],"roleHeading":"Article","title":"Gnusto Engine Roadmap"},"kind":"article","references":{"doc://GnustoEngine/documentation/GnustoEngine":{"role":"collection","url":"\/documentation\/gnustoengine","abstract":[],"title":"GnustoEngine","identifier":"doc:\/\/GnustoEngine\/documentation\/GnustoEngine","type":"topic","kind":"symbol"}}}